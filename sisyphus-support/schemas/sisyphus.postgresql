/* -*- sql -*- */

create table repositories (
	id serial primary key,
	location text not null unique
);


create table platforms (
	id serial primary key,
	kernel_name varchar(32),
	kernel_release varchar(32),
	hardware_platform varchar(32),
	hardware_class varchar(32),
	processor_type varchar(32),
	unique (kernel_name, kernel_release, hardware_platform, hardware_class, processor_type)
);

create table components (
	id serial primary key,
	name varchar(64) not null unique
);


create table designators (
	id serial primary key,
	component_id integer references components,
	path text not null,
	unique (component_id, path)
);


create table trees (
	id serial primary key,
	designator_id integer references designators,
	revision integer,
	changelog text,
	unique (designator_id, revision)
);


create table profiles (
	id serial primary key,
	name varchar(32) not null,
	version integer not null, 
	unique (name, version)
);

create table sources (
	id serial primary key,
	profile_id integer references profiles
	repository_id integer references repositories,
	unique (profile_id, repository_id)
);	



create table roots (
	id serial primary key,
	profile_id integer references profiles,
	component_id integer references components,
	unique (profile_id, component_id)
);

create table environments (
	id serial primary key,
	profile_id integer references profiles,
	script text not null
);	

create table hosts (
	id serial primary key,
	platform_id integer references platforms,
	name varchar(512) not null unique
);


create table builds (
	id serial primary key, 
	tree_id integer references trees,
	host_id integer references hosts,
	profile_id integer references profiles,
	time timestamp not null unique,
	created_on timestamp,
	success boolean,
	unique (host_id, tree_id, profile_id)
);

create table integrations (
	id serial primary key,
	build_id integer references builds,
	dependency_id integer references builds,
	unique (build_id, dependency_id)
);


create table actions (
	id serial primary key,
	position integer,
	profile_id integer references profiles,
	name text,
	template text,
	unique (profile_id, position, name)
)

create table results (
	id serial primary key,
	build_id integer references builds,
	action_id integer references actions,
	output text,
	error_output text,
	success boolean,
	unique (build_id, action_id)
);

create table releases (
	id serial primary key,
	build_id integer references builds,
	created_on timestamp,
	version text not null
);

	
create table status (
	id serial primary key
	host_id integer references hosts,
	build_id integer references builds,
	result_id integer references results,
	message text not null
);


