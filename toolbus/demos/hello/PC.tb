/*

    ToolBus -- The ToolBus Application Architecture
    Copyright (C) 1998-2000  Stichting Mathematisch Centrum, Amsterdam, 
                             The  Netherlands.

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

*/

process STORE is
  let St : store,
      S1 : str,
      S2 : str
  in
     execute(store, St?) .
     ( rec-msg(store, S1?, S2?) . snd-do(St, pair(S1, S2))
     ) * delta
  endlet

process CONSUMER(Pname : str) is
  let S1 : str,
      S2 : str
  in
       ( rec-msg(produce, Pname, S1?) . rec-msg(produce, Pname, S2?) . snd-msg(store, S1, S2)
       ) * delta
  endlet

process PRODUCER(Name : str) is
  let P :  prod,
      S : str
  in
     execute(prod(Name), P?) .
     ( rec-event(P, S?) . snd-msg(produce, Name, S) . snd-ack-event(P, S)
     ) * delta
   endlet

tool prod(Name: str) is {command = "producer -name Name"}

tool store is {command = "store" }

toolbus(PRODUCER("prod1"), CONSUMER("prod1"), 
        PRODUCER("prod2"), CONSUMER("prod2"), 
        STORE)
