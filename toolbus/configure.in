dnl Process this file with autoconf to produce a configure script.
AC_INIT(Makefile.in)
AM_INIT_AUTOMAKE(toolbus, 0.13)

AC_PROG_RANLIB
AR=ar
AC_SUBST(AR)

AC_PROG_CC
AC_AIX
AM_PROG_LEX
AC_PROG_YACC
AC_CHECK_LIB(y,yyerror,YACCLIB="-ly",YACCLIB="")
AC_SUBST(YACCLIB)

AC_PATH_X
AC_SUBST(x_includes)
AC_SUBST(x_libraries)

AC_CHECK_PROG(NOWEB,noweb,noweb,true)
AC_SUBST(NOWEB)

AC_SET_MAKE

ALL_ADAPTERS="gen-adapter emacs-adapter java-adapter perl-adapter \
              python-adapter tcltk-adapter java-adapter"
AC_SUBST(ALL_ADAPTERS)

dnl Default adapters
EMACS_ADAPTER=emacs-adapter
PERL_ADAPTER=perl-adapter
PYTHON_ADAPTER=python-adapter
WISH_ADAPTER=wish-adapter


AC_ARG_WITH(tide,
   [  --with-tide             compile TIDE support (debugger prototype)],
   TIDEDEF=-DUSE_TIDE
   TIDE=${withval}
   TIDEINC='-I$(TIDE)/include'
)
AC_SUBST(TIDEDEF)
AC_SUBST(TIDE)
AC_SUBST(TIDEINC)

AC_ARG_WITH(aterm,
   [  --with-aterm            designate location of aterm library stuff],
      ATERM=${withval},
      ATERM=${prefix})
AC_SUBST(ATERM)

dnl Which additional adapters to build?

AC_ARG_WITH(java,
   [  --with-java             include java support (java-adapter)],
   JAVA_ADAPTER=java-adapter)
AC_SUBST(JAVA_ADAPTER)

AC_ARG_WITH(tcltk,
   [  --with-tcltk            include Tcl/Tk support (tcltk-adapter)],
   TCLTK_ADAPTER=tcltk-adapter)
AC_SUBST(TCLTK_ADAPTER)

dnl Which adapters not to build
AC_ARG_WITH(emacs,
   [  --without-emacs         include Emacs Lisp support (emacs-adapter)],
   if test "a$withval" = "ano"; then
      EMACS_ADAPTER=
   fi)
AC_SUBST(EMACS_ADAPTER)

AC_ARG_WITH(perl,
   [  --without-perl          include Perl support (perl-adapter)],
   if test "a$withval" = "ano"; then
      PERL__ADAPTER=
   fi)
AC_SUBST(PERL_ADAPTER)

AC_ARG_WITH(python,
   [  --without-python        include python support (python-adapter)],
   if test "a$withval" = "ano"; then
      PYTHON_ADAPTER=
   fi)
AC_SUBST(PYTHON_ADAPTER)

AC_ARG_WITH(wish,
   [  --without-wish          include Tcl/Tk support (wish-adapter)],
   if test "a$withval" = "ano"; then
      WISH_ADAPTER=
   fi)
AC_SUBST(WISH_ADAPTER)




dnl No longer support swi prolog in standard tolbsu distribution
dnl TBSWIPL=true
dnl AC_ARG_WITH(swipl,
dnl    [  --with-swipl		   include swi-prolog support (swipl-adapter)],
dnl    if test ${withval} = "yes"
dnl    then
dnl       echo "You will have to edit the file adapters/swipl-adapter/Makefile"
dnl       echo "so it can locate the swi-prolog home directory and the swi-prolog"
dnl       echo "architecture."
dnl       ADAPTERS="${ADAPTERS} swipl-adapter"
dnl       DEMOS="${DEMOS} ${SWIPL_DEMOS}"
dnl       TBSWIPL=tbswipl
dnl    fi,)
dnl AC_SUBST(TBSWIPL)


AC_HEADER_CHECK(arpa/inet.h,:, echo "*** no arpa/inet.h";exit)
AC_HEADER_CHECK(assert.h,:, echo "*** no assert.h";exit)
AC_HEADER_CHECK(ctype.h,:, echo "*** no ctype.h";exit)
AC_HEADER_CHECK(errno.h,:, echo "*** no errno.h";exit)
AC_HEADER_CHECK(netdb.h,:, echo "*** no netdb.h";exit)
AC_HEADER_CHECK(netinet/in.h,:, echo "*** no netinet/in.h";exit)

dnl Due to  bug in IRIX6.5 you can't merely include netinet/tcp.h, but
dnl you need to include standards.h aswell.
AC_MSG_CHECKING("for netinet/tcp.h")
AC_TRY_CPP(
[#ifdef sgi
#include <standards.h>
#endif
#include <netinet/tcp.h>
],AC_MSG_RESULT("yes"), echo "*** no netinet/tcp.h";exit)

dnl AC_HEADER_CHECK(netinet/tcp.h,:, echo "*** no netinet/tcp.h";exit)
AC_HEADER_CHECK(signal.h,:, echo "*** no signal.h";exit)
AC_HEADER_CHECK(stdarg.h,:, echo "*** no stdarg.h";exit)
AC_HEADER_CHECK(stdio.h,:, echo "*** no stdio.h";exit)
AC_HEADER_CHECK(stdlib.h,:, echo "*** no stdlib.h";exit)
AC_HEADER_CHECK(string.h,:, echo "*** no string.h";exit)

AC_HEADER_CHECK(fcntl.h,:, echo "*** no fcntl.h";exit)
AC_HEADER_CHECK(sys/ioctl.h,:, echo "*** no sys/ioctl.h";exit)
AC_HEADER_CHECK(sys/param.h,:, echo "*** no sys/param.h";exit)
AC_HEADER_CHECK(sys/socket.h,:, echo "*** no sys/socket.h";exit)
AC_HEADER_CHECK(sys/stat.h,:, echo "*** no sys/stat.h";exit)
AC_HEADER_CHECK(sys/time.h,:, echo "*** no sys/time.h";exit)
AC_HEADER_CHECK(sys/types.h,:, echo "*** no sys/types.h";exit)
AC_HEADER_CHECK(sys/uio.h,:, echo "*** no sys/uio.h";exit)
AC_HEADER_CHECK(sys/un.h,:, echo "*** no sys/un.h";exit)
AC_HEADER_CHECK(unistd.h,:, echo "*** no unistd.h";exit)
AC_HEADER_CHECK(math.h,:, echo "*** no math.h";exit)

AC_HAVE_FUNCS(strerror)
AC_HAVE_FUNCS(strdup)
AC_HAVE_FUNCS(yywrap)

dnl Find out which libraries we need

SOCKET_FOUND=no
AC_CHECK_LIB(sun,socket,[SOCKET_FOUND=yes;LIBS="$LIBS -lsun"])
if test ${SOCKET_FOUND} = no; then
   AC_CHECK_LIB(socket, socket,[SOCKET_FOUND=yes;LIBS="$LIBS -lsocket"])
   if test ${SOCKET_FOUND} = no; then
      AC_CHECK_LIB(bsd,
                   socket,
                   [SOCKET_FOUND=yes;LIBS="$LIBS -lbsd";DEFS="$DEFS -D_BSD=43"])
   fi
fi

GETHOSTNAME_FOUND=no
AC_CHECK_LIB(sun,gethostname,[GETHOSTNAME_FOUND=yes])
if test ${GETHOSTNAME_FOUND} = no; then
   AC_CHECK_LIB(nsl,gethostname,[GETHOSTNAME_FOUND=yes;LIBS="$LIBS -lnsl"])
fi

dnl Of course, the latest version of wish is not always called "wish". :-(
dnl If we can't find something called wish8.1 or wish8.0, we'll assume
dnl that "wish" is at version 8 or higher.
AC_PATH_PROGS(WISH,wish8.1 wish8.0 wish, /usr/local/bin/wish)

dnl Where is perl5?
AC_PATH_PROGS(PERL,perl5 perl, /usr/bin/perl)

# Check for math lib (-lm), use arbitrary function (atof) from
# C library, since using, e.g., sin leads to compilation errors
AC_CHECK_LIB(m,atof,[LIBS="$LIBS -lm"])

dnl add outputfiles as argument below
AC_OUTPUT(Makefile
          libtb/Makefile
          toolbus/Makefile
          adapters/Makefile
          adapters/wish-adapter/Makefile
          adapters/tcltk-adapter/Makefile
          adapters/perl-adapter/Makefile
          adapters/gen-adapter/Makefile
          adapters/emacs-adapter/Makefile
          adapters/python-adapter/Makefile
          adapters/java-adapter/Makefile
          adapters/java-adapter/toolbus/Makefile
          adapters/java-adapter/toolbus/aterm/Makefile
          adapters/java-adapter/toolbus/util/Makefile
          adapters/java-adapter/toolbus/tool/Makefile
          tbviz/Makefile
          doc/Makefile
          demos/Makefile 
          demos/auction/Makefile 
          demos/calc/Makefile
          demos/game/Makefile
          demos/hello/Makefile
          demos/wave/Makefile
          test/Makefile
) 
