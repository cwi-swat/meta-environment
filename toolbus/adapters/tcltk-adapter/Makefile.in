# The following variables are instantiated using the configure script
# generated by autoconf:

PRODUCT		= @PRODUCT@
VERSION		= @VERSION@

srcdir		= @srcdir@
VPATH		= @srcdir@
top_srcdir      = @top_srcdir@

prefix          = @prefix@
exec_prefix     = @exec_prefix@
bindir          = $(exec_prefix)/bin
libdir          = $(exec_prefix)/lib
docdir		= $(top_srcdir)/doc
includedir      = $(prefix)/include
x_includes	= @x_includes@
x_libraries	= @x_libraries@

TIDEDEF		= @TIDEDEF@
TIDE		= @TIDE@
ATERM		= @ATERM@

SHELL		= /bin/sh

CC		= @CC@
CFLAGS		= -Wall
INCLUDES	= @INCLUDES@ -I$(TIDE)/include \
		-I${ATERM}/include $(EXTRA_INCLUDES)
DEFS		= @DEFS@ $(EXTRA_DEFS) $(TIDEDEF)

INSTALL		= @INSTALL@

CLEAN		= @CLEAN@
GELOBJECTS	= @GELOBJECTS@ bgelio bgelo
LIBS		= ${ATERM}/lib/debug-adapter.tif.o @LIBS@ $(EXTRA_LIBS)

NOWEB		= @NOWEB@

COMPILE 	= $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)

DISTFILES	= Makefile.in $(SOURCE) $(DOC) $(LIBFILES)

TCLTK		= @TCLTKTOP@

# With a little bit of luck, you only have to change the value of
# these variables, and add some rules to actually build your programs:
ADAPTER-NAME    = tcltk-adapter
PROGRAMS        = tcltk-adapter
SOURCE          = tcltk-adapter.c tide.tcl.nw tcltk-tide.c
LIBFILES        = tcltk.tcl tide.tcl
DOC             = tcltk-adapter.guide.tex adapters.ps adapters.fig

EXTRA_INCLUDES	= -I$(TCLTK)/include
EXTRA_DEFS	= -DLIBDIR=\"$(libdir)\"
EXTRA_LIBS	= -L$(TCLTK)/lib -R$(TCLTK)/lib -ltk8.0 -ltcl8.0 \
			-L$(x_libraries) -R$(x_libraries) -lX11 -ldl \
			-L${ATERM}/lib -lATB-dbg -lATerm-dbg 

# Here you can add the rules that actually build your adapter:

all:	${PROGRAMS} $(LIBFILES) $(SRCDOC) ${DOC} 

tcltk-adapter: tcltk-adapter.c tcltk-tide.o
	$(COMPILE) tcltk-adapter.c tcltk-tide.o -o tcltk-adapter ${LIBS}

tcltk-tide.o: tcltk-tide.c
	${COMPILE} -c tcltk-tide.c 

tide.tcl tide.tcl.tex: tide.tcl.nw
	$(NOWEB) tide.tcl.nw
	touch tide.tcl tide.tcl.tex

adapters.ps: adapters.fig
	fig2dev -Lps adapters.fig adapters.ps


# The rules below this line are general rules and are based on the
# defines listed above. You probably won't have to change them.

clean:
	${CLEAN} ${PROGRAMS}

distclean: clean
	${CLEAN} Makefile

dist: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  ln $(srcdir)/$$file $(top_srcdir)/../$(PRODUCT)-$(VERSION)/adapters/$(ADAPTER-NAME) 2> /dev/null \
	  || cp $(srcdir)/$$file $(top_srcdir)/../$(PRODUCT)-$(VERSION)/adapters/$(ADAPTER-NAME); \
	done

install: $(PROGRAMS) $(LIBFILES)
	for file in $(PROGRAMS); do\
	  $(INSTALL) $$file $(bindir); \
	done
	for file in $(LIBFILES); do\
	  $(INSTALL) $$file $(libdir); \
	done

doc:	$(SRCDOC) $(DOC)
	for file in $(DOC); do\
	  $(INSTALL) $$file $(docdir)/adapters; \
	done
	for file in $(SRCDOC); do\
	  $(INSTALL) $$file $(docdir)/src; \
	done

uninstall:
	for file in $(PROGRAMS); do\
	  rm -f $(bindir)/$$file; \
	done
	for file in $(SRCDOC); do\
	  rm -f $(docdir)/src/$$file;\
	done
	for file in $(DOC); do\
	  rm -f $(docdir)/adapters/$$file; \
	done
	for file in $(LIBFILES); do\
	  rm -f $(libdir)/$$file;\
	done 

