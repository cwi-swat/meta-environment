
#include "dot-adapter.idef"

process LAYOUT(G : term) is
let
  Result : term
in
  snd-msg(layout-graph(G)) .
  rec-msg(graph-layouted(Result?)) .
  printf("layouted graph is: %t\n", Result)
endlet

process TEST is
let
  G : term,
  Result : term
in
  G := quote(graph([node("Node-1",[shape(box),size(200,30)]),node("Node-2",[shape(ellipse),size(200,30)])],
             [edge("Node-1", "Node-2", [])])) .
  LAYOUT(G) .
  G := quote(graph([node("Node-1",[shape(box),size(250,30)]),node("Node-2",[shape(triangle),size(250,30)])],
             [edge("Node-1", "Node-2", [])])) .
  LAYOUT(G) .
  G := quote(graph([node("Value",[shape(triangle),size(250,30)]),node("Layout",[shape(diamond),size(250,30)])],
             [edge("Value", "Layout", [])])) .
  LAYOUT(G) .
  shutdown("done\n")
endlet

toolbus(DOT-ADAPTER, TEST)
