/* $Id$ */

tool generic-adapter is { command = "__PREFIX__/bin/gen-adapter" }

tool term-generic-adapter is { command = "__PREFIX__/bin/gen-adapter -term-output" }

process
  ADAPTER(Id: generic-adapter, Cmd: str, Inp: str, Outp: str?)
is
   snd-eval(Id, cmd(Cmd, input(Inp)))
   . rec-value(Id, output(Outp?))

process
  TERM-IN-ADAPTER(Id: generic-adapter, Cmd: str, Inp: term, Outp: str?)
is
   snd-eval(Id, cmd(Cmd, input-term(Inp))).
   rec-value(Id, output(Outp?))

process
  TERM-IN-OUT-ADAPTER(Id: term-generic-adapter, Cmd: str, Inp: term,
                      Outp: term?)
is
   snd-eval(Id, cmd(Cmd, input-term(Inp))).
   rec-value(Id, output(Outp?))

process GenericAdapter is
let
  GENADAPT: generic-adapter,
  TERMGENADAPT: term-generic-adapter,
  Action: str,
  OutStr: str,
  InStr: str,
  Id: term,
  STree: term,
  RTree: term
in
  execute(generic-adapter, GENADAPT?) .
  execute(term-generic-adapter, TERMGENADAPT?) .
  (
    rec-msg(gen-adapter-activate(Id?, Action?)).
    ADAPTER(GENADAPT, Action, "", OutStr?) .
    snd-msg(gen-adapter-result(Id, OutStr))
  +
    rec-msg(gen-adapter-string-to-string-evaluate(Id?, Action?, InStr?)).
    ADAPTER(GENADAPT, Action, InStr, OutStr?) .
    snd-msg(gen-adapter-string-to-string-result(Id, OutStr))
  +
    rec-msg(gen-adapter-term-to-string-evaluate(Id?, Action?, STree?)).
    TERM-IN-ADAPTER(GENADAPT, Action, STree, OutStr?) .
    snd-msg(gen-adapter-term-to-string-result(Id, OutStr))
  +
    rec-msg(gen-adapter-term-evaluate(Id?, Action?, STree?)).
    TERM-IN-OUT-ADAPTER(TERMGENADAPT, Action, STree, RTree?) .
    snd-msg(gen-adapter-term-result(Id, RTree))
  ) *
  delta
endlet

toolbus(GenericAdapter)
