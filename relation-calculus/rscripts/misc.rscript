
int ROOT = 0 

rel[int, str] DEFS  = {<1, "x">, <3, "z">, <4, "x">, <5, "y">}

rel[int,str] USES    = {<3, "y">, <3,"x">, <5, "z">}

rel[int,int]  PRED   = {<1, 0>,<2, 1>, <3, 2>, <4, 2>, <5, 3>, <5, 4>}

rel[int, str]  UN = { <N, V> | <N, V> : USES, <ROOT, N> in reachX({0}, DEFS . V, PRED) }

bool tst(int N) = true

rel[int, str]  UN1 = { <N, V> | <N, V> : USES,  <ROOT, N> in carrierX(PRED, DEFS . V)+ }

<T1,T2> swap(<T2,T1> P) = <second(P), first(P)>

bag[str] Bag1     = {"a", "b", "c"}
bag[str] Bag2     = {"d", "e", "f"}
rel[str,int] Rel1     = {<"a", 1>, <"b", 2>, <"c", 3>}
rel[int,int] Rel2     = {<1, 10>, <3, 30>}

<str,int> P1 = swap(<0,"a">)

rel[int,str] SRel1 = { swap(<V, N>) | <V,N> : Rel1  }
 
rel[int,bag[int]] VERT = { <V, {10,20,30}> |  V : {1,2,3} }

bag[int] BBB = 2 . {<1,10>, <2, 20>, <3,30>}

bag[str] Tst      = {X |  X : Bag1  }
rel[str,str] REL   = {<X, Y> | X : Bag1, Y : Bag2}

rel[X,Y] finv(rel[Y,X] REL) = {<Y, X> | <X, Y> : REL }
bag[X] fdom(rel[X,Y] REL) = {X | <X, Y> : REL }

rel[X,Y] pair(bag[X] R1, bag[Y] R2) = { <X, Y> | X : R1, Y : R2 }

rel[A,C] comp(rel[A,B] R1, rel[B,C] R2) =
    { <X, T> | <X, Y> : R1, <S, T> : R2, Y == S }

bag[int] bag6     = fdom(DEFS)

bool B1 = Bag1 < Bag2
bool B2 = Bag1 <= Bag2
bool B3 = Bag1 == Bag2
bool B4 = Bag1 >= Bag2
bool B5 = Bag1 > Bag2

bool BB1 = Rel1 < Rel1
bool B2B = Rel1 <= Rel1
bool BB3 = Rel1 == Rel1
bool BB4 = Rel1 >= Rel1
bool BB5 = Rel1 > Rel1

bool C = Bag1 x Bag2 <= Bag2 x Bag1

rel[str,str] C2 = (Bag1 x Bag2)+

rel[int,int] C3 = PRED *

int mysize(bag[int] B) = # B