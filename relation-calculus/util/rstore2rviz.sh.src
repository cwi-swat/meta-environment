#! /bin/sh

# rscript2rviz -- convert an Rstore to the visualization format Rviz

set -e

# {{{  variables
prefix=__PREFIX__
bindir=__BINDIR__
datadir=__DATADIR__

PRG=`basename $0`
VERBOSE=
OUTPUT=./result.rviz
RSTORE_TOOL=${bindir}/Rstore
RSTORE_PARSE_TABLE=${datadir}/Rstore.trm.tbl
RSTORE=
PARSED_RSTORE=


# }}}

# {{{  usage

usage() {
cat << ENDCAT >&2
Usage: $PRG [options]

Options:
  -i (--input)        filename	input from file (default: stdin)
  -o (--output)       filename	output to file (default: result.rviz)
  -v (--verbose)                verbose output (default:none)

Example:
  $PROG -i query.rstore -o query.rviz

ENDCAT
}

# }}}

# {{{  add_tmp_file

add_tmp_file() {
    if test ! -f  "$1"
    then
        TMP_FILES="$TMP_FILES $1"
    fi
}
# }}}
# {{{  cleanup

cleanup() {
  rm -f $TMP_FILES
}

# {{{  parse_rstore

parse_rstore() {
  case $RSTORE in
      *.pt) PARSED_RSTORE=$RSTORE;;

      *.rstore) sglr $VERBOSE -p $RSTORE_PARSE_TABLE -s RSTORE -i $RSTORE -o $RSTORE.pt
         PARSED_RSTORE=$RSTORE.pt
         add_tmp_file  $RSTORE.pt
         ;;
      *)
      echo "$PRG: illegal Rstore file $RSTORE"
      usage
      exit 1
  esac
}

# }}}


# {{{ export2rviz

export2rviz() {
      ${RSTORE_TOOL} ${VERBOSE} -f "export-rviz" \
	  -i ${PARSED_RSTORE} -r RVIZ \
	  | unparsePT \
	  | tr ";" "\\n" > ${OUTPUT}
}

# }}}

if [ $# -eq 0 ]; then
  usage
  exit 1
fi

while [ $# -gt 0 ]
do
  case "$1" in

    -i | --input)
      shift; RSTORE=$1 ;;

    -o | --output)
      shift; OUTPUT=$1 ;;

    -v | --verbose)
      VERBOSE=-v ;;
    *)
      usage; exit 1 ;;
  esac
  shift
done

parse_rstore
export2rviz

cleanup






