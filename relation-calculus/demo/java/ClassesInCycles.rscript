type class = str

rel[class,class] CALL
rel[class,class] CONTAINMENT
rel[class,class] INHERITANCE

rel[class,class] USE = CALL union CONTAINMENT union INHERITANCE

bag[class] ClassesInCycle = {C1 | <class C1, class C2> : USE+, C1 == C2}

int size = # ClassesInCycle

yield size

bag[class] CLASSES = carrier(USE)

rel[class,class] USETRANS = USE+

rel[class,bag[class]] ClassCycles = {<C, USETRANS[C]> | class C : CLASSES, <C, C> in USETRANS }
yield ClassCycles

