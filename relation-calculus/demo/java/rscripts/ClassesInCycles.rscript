
type FileName = str
type ClassName = str
type ClassUseName = str
type PackageName = str
type MethodName = str
type InterfaceName = str
type VarName = str
type TypeName = str
type FieldName = str

rel[FileName, loc] FILE
rel[InterfaceName,loc] INTERFACE
rel[PackageName,loc] PACKAGE
rel[ClassName,loc] CLASS
rel[MethodName, loc] METHOD
rel[ClassUseName,loc] CLASS_USE
rel[VarName, loc, TypeName] VARIABLE_DECL
rel[FieldName, loc, TypeName] FIELD_DECL

rel[ClassName,ClassName] EXTENDS_CLASS
rel[ClassName,InterfaceName] IMPLEMENTS
rel[InterfaceName,InterfaceName] EXTENDS_INTERFACE

rel[VarName, loc, MethodName] METHOD_CALL

rel[str,str] INHERITANCE
rel [str, str] CONTAINMENT
rel[ClassName, ClassName] CALL

%%rel[ClassName,ClassName] USE = CALL union CONTAINMENT union INHERITANCE
rel[ClassName,ClassName] USE = CALL union CONTAINMENT union INHERITANCE

%%bag[ClassName] ClassesInCycle = {C1 | <ClassName C1, ClassName C2> : USE+, C1 == C2}

%%int size = # ClassesInCycle

%%yield size

bag[ClassName] CLASS_NAME = domain(CLASS)

rel[ClassName,ClassName] USETRANS = USE+

rel[ClassName,bag[ClassName]] ClassCycles = {<C, USETRANS[C]> | ClassName C : CLASS_NAME, <C, C> in USETRANS }
yield ClassCycles

