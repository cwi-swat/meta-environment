
type FileName = str
type ClassName = str
type ClassUseName = str
type PackageName = str
type MethodName = str
type InterfaceName = str
type VarName = str
type TypeName = str
type FieldName = str

rel[FileName, loc] FILES
rel[InterfaceName,loc] INTERFACES
rel[PackageName,loc] PACKAGES
rel[ClassName,loc] CLASSES
rel[MethodName, loc] METHODS
rel[ClassUseName,loc] CLASS_USES
rel[VarName, loc, TypeName] VARIABLE_DECLS
rel[FieldName, loc, TypeName] FIELD_DECLS

rel[ClassName,ClassName] EXTENDS_CLASS
rel[ClassName,InterfaceName] IMPLEMENTS
rel[InterfaceName,InterfaceName] EXTENDS_INTERFACE

rel[VarName, loc, MethodName] METHOD_CALLS

rel[str,str] INHERITANCE
rel [str, str] CONTAINMENT
rel[ClassName, ClassName] CALLS

rel[ClassName,ClassName] USE = CALLS union CONTAINMENT union INHERITANCE

%%bag[ClassName] ClassesInCycle = {C1 | <ClassName C1, ClassName C2> : USE+, C1 == C2}

%%int size = # ClassesInCycle

%%yield size

bag[ClassName] CLASS_NAMES = domain(CLASSES)

rel[ClassName,ClassName] USETRANS = USE+

rel[ClassName,bag[ClassName]] ClassCycles = {<C, USETRANS[C]> | ClassName C : CLASS_NAMES, <C, C> in USETRANS }
yield ClassCycles

