equations

[st1]	$Elem+ = $Elem'
	=============================================================
	<$Elem1, $Elem2, $Elem+> = <$Elem1, <$Elem2, $Elem'>>

[st1]	$Elem+1 = $Elem', $Elem+2
	=============================================================
	<$Elem1, $Elem2, $Elem+1> = <$Elem1, <$Elem2, $Elem', $Elem+2>>

[comp-1] compose({<$Elem, $Elem'>, $Elem*1}, {$Elem*2}) = 
         union(product($Elem, rimage($Elem', {$Elem*2})), compose({$Elem*1}, {$Elem*2}))
[comp-2] compose({}, {$Elem*}) = {}

[x-1]    product($Elem, {$Elem', $Elem*}) = union( {<$Elem, $Elem'>}, product($Elem, {$Elem*}))
[x-2]    product($Elem, {}) = {}

[bx-1]   product({$Elem, $Elem*1}, {$Elem*2}) = union(product($Elem, {$Elem*2}), product({$Elem*1}, {$Elem*2}))
[bx-2]   product({}, {$Elem*2}) = {}

[dom-1]  domain({<$Elem,$Elem'>, $Elem*}) = union({$Elem}, domain({$Elem*}))
[dom-2]  domain({}) = {}

[ran-1]  range({<$Elem,$Elem'>, $Elem*}) = union({$Elem'}, range({$Elem*}))
[ran-2]  range({}) = {}

[car-1]  carrier({<$Elem,$Elem'>, $Elem*}) = union(union({$Elem},{$Elem'}), carrier({$Elem*}))
[car-2]  carrier({}) = {}

[domR-1] in($Elem, {$Elem*}) = false
         ==================================================
         domR({$Elem*1, <$Elem, $Elem'>, $Elem*2}, {$Elem*}) = domR({$Elem*1, $Elem*2}, {$Elem*})

[default-domR]
	 domR({$Elem*1}, {$Elem*2}) = {$Elem*1}

[domX-1] in($Elem, {$Elem*}) = true
         ==================================================
         domX({$Elem*1, <$Elem, $Elem'>, $Elem*2}, {$Elem*}) = domX({$Elem*1, $Elem*2}, {$Elem*})

[default-domX]
	 domX({$Elem*1}, {$Elem*2}) = {$Elem*1}

[ranR-1] in($Elem', {$Elem*}) = false
         ==================================================
         ranR({$Elem*1, <$Elem, $Elem'>, $Elem*2}, {$Elem*}) = ranR({$Elem*1, $Elem*2}, {$Elem*})

[default-ranR]
	 ranR({$Elem*1}, {$Elem*2}) = {$Elem*1}

[ranX-1] in($Elem', {$Elem*}) = true
         ==================================================
         ranX({$Elem*1, <$Elem, $Elem'>, $Elem*2}, {$Elem*}) = ranX({$Elem*1, $Elem*2}, {$Elem*})

[default-ranX]
	 ranX({$Elem*1}, {$Elem*2}) = {$Elem*1}


[carR-1] in($Elem, {$Elem*}) & in($Elem', {$Elem*}) = false
         ==================================================
         carR({$Elem*1, <$Elem, $Elem'>, $Elem*2}, {$Elem*}) = carR({$Elem*1, $Elem*2}, {$Elem*})

[default-carR]
	 carR({$Elem*1}, {$Elem*2}) = {$Elem*1}

[carX-1] in($Elem, {$Elem*}) |  in($Elem', {$Elem*}) = true
         ==================================================
         carX({$Elem*1, <$Elem, $Elem'>, $Elem*2}, {$Elem*}) = carX({$Elem*1, $Elem*2}, {$Elem*})

[default-carX]
	 carX({$Elem*1}, {$Elem*2}) = {$Elem*1}


[top-1]  top($Rel) = diff(domain($Rel), range($Rel))

[bot-1]  bottom($Rel) = diff(range($Rel), domain($Rel))

[rim-1]  rimage($Elem, {$Elem*1, $Elem*2}) = {$Elem*}
         =====================================
         rimage($Elem, {$Elem*1, <$Elem, $Elem'>, $Elem*2}) = {$Elem', $Elem*}

[default-rim-2]
         rimage($Elem, {$Elem*}) = {}

[brim-1] rimage({$Elem, $Elem*}, $Rel)  = union(rimage($Elem, $Rel),  rimage({$Elem*}, $Rel))
[brim-2] rimage({}, $Rel) = {}


[lim-1]  limage({$Elem*1, $Elem*2}, $Elem')  = {$Elem*}
         =====================================
         limage({$Elem*1, <$Elem, $Elem'>, $Elem*2}, $Elem') = {$Elem, $Elem*}

[default-lim-2]
         limage({$Elem*}, $Elem') = {}
 
[slim-1] limage($Rel, {$Elem, $Elem*}) = union(limage($Rel, $Elem), limage($Rel, {$Elem*}))
[slim-2] limage($Rel, {}) = {}

[inv-1]  inv({<$Elem,$Elem'>, $Elem*}) = union({<$Elem',$Elem>}, inv({$Elem*}))
[inv-2]  inv({}) = {}

[cmp-1]  $Bag = carrier($Rel)
         =====================================
         compl($Rel) = diff(product($Bag, $Bag), $Rel)


[id-1]   id({$Elem, $Elem*}) = union({<$Elem, $Elem>}, id({$Elem*}))
[id-2]   id({}) ={}

[cl-1] 	closure($Rel, $Rel1, $Rel1) = $Rel1

[cl-2] 	$Rel1 != $Rel2
       	=========================================
       	closure($Rel, $Rel1, $Rel2) = closure($Rel, $Rel2, union($Rel2, compose($Rel2, $Rel)))

[tcl-1]  trans-closure($Rel) = closure($Rel, {}, $Rel)

[rtcl-1] rtrans-closure($Rel) = union(trans-closure($Rel), id(carrier($Rel)))

%% --- reachX

[rX-3] $Rel' = carX($Rel, $Bag2),
       $Rel''= domR($Rel', $Bag1)
       =========================================
       reachX($Bag1, $Bag2, $Rel) = closure($Rel', {}, $Rel'')

%% --- reachR

[rX-3] $Rel' = carR($Rel, $Bag2),
       $Rel''= domR($Rel', $Bag1)
       =========================================
       reachR($Bag1, $Bag2, $Rel) = closure($Rel', {}, $Rel'')

