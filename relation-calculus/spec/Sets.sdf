module Sets[Elem]

exports 
imports basic/Booleans
imports basic/Integers

context-free start-symbols
   Set[[Elem]]

context-free syntax
   elem-equal(Elem, Elem)			-> Boolean
   elem-greater(Elem, Elem)			-> Boolean
   elem-greater-equal(Elem, Elem)		-> Boolean

context-free syntax
   "{" {Elem ","}* "}"                   	-> Set[[Elem]] {constructor}
   "empty-bag"					-> Set[[Elem]]

   Set[[Elem]]					-> SetIterator[[Elem]]
   mk-iterator(Set[[Elem]])			-> SetIterator[[Elem]]
   is-empty-iter(SetIterator[[Elem]])		-> Boolean
   head(SetIterator[[Elem]])			-> Elem
   tail(SetIterator[[Elem]])			-> SetIterator[[Elem]]

   insert(Elem, Set[[Elem]])                    -> Set[[Elem]]
   delete(Elem, Set[[Elem]])                    -> Set[[Elem]]

   sort(Set[[Elem]])				-> Set[[Elem]]
   merge(Set[[Elem]], Set[[Elem]])		-> Set[[Elem]]
   divide(Boolean, Set[[Elem]])			-> <Set[[Elem]], Set[[Elem]]>

   equal(Set[[Elem]], Set[[Elem]])           	-> Boolean
   subset(Set[[Elem]], Set[[Elem]])          	-> Boolean
   strict-subset(Set[[Elem]], Set[[Elem]])   	-> Boolean
   superset(Set[[Elem]], Set[[Elem]])        	-> Boolean
   strict-superset(Set[[Elem]], Set[[Elem]])	-> Boolean

   union1(Elem, Set[[Elem]])			-> Set[[Elem]]
   union2(Set[[Elem]], Elem)			-> Set[[Elem]]
   union(Set[[Elem]], Set[[Elem]])           	-> Set[[Elem]]
   inter(Set[[Elem]], Set[[Elem]])          	-> Set[[Elem]]
   diff(Set[[Elem]], Set[[Elem]])            	-> Set[[Elem]]

   size(Set[[Elem]])                         	-> Integer
   in(Elem, Set[[Elem]])                   	-> Boolean

   unique(Set[[Elem]])				-> Set[[Elem]]

   "if" Boolean "then" Set[[Elem]] "else" Set[[Elem]] "fi" 
                                           	-> Set[[Elem]]

   Set[[Elem]] "union" Set[[Elem]]              -> Set[[Elem]] {left}

   "(" Set[[Elem]] ")"				-> Set[[Elem]] {bracket}
   

hiddens
  imports basic/Comments

  variables
    "$Set" [0-9\']*           -> Set[[Elem]]
    "$SetIter" [0-9\']*       -> SetIterator[[Elem]]
    "$Elem" [0-9\']*          -> Elem
    "$Elem*" [0-9\']*         -> { Elem ","}*
    "$Elem+" [0-9\']*         -> { Elem ","}+
    "$Bool" [0-9\']*          -> Boolean
