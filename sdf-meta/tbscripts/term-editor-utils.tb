#ifndef __TERM_EDITOR_UTILS__
#define __TERM_EDITOR_UTILS__

#include <editing.tb>
#include <term-utils.tb>

process EditTerm(Path: str, ModuleId: term, GetTree: term) is
let
  Event: attribute-changed-event,
  AlreadyExists: bool,
  Available: bool,
  EditorType: term,
  Error: str,
  Modulename: str,
  Sid: term,
  Tree: term,
  Valid: bool
in
  EditorType := term-editor
  . CheckSanity(Path, ModuleId, Valid?)
  .
  if equal(Valid, true) then
    Edit(Path, Sid?)
    . MM-GetAttribute(ModuleId, SDF_NAMESPACE, "name", Modulename?)
    . EditText(Sid, EditorType, Modulename, AlreadyExists?)
    . snd-msg(term-editor-started(Path, ModuleId, Sid))
    .
    if equal(AlreadyExists, false) then
      snd-msg(em-bind-session(Sid, ModuleId))
      . rec-msg(em-session-bound(Sid, ModuleId))
      . 
      if equal(GetTree, true) then
        GetTermParsetree(ModuleId, Path, Tree?)
        . SE-UpdateTree(Sid, Tree)
      else
        tau
      fi
      . MM-Subscribe-Attribute-Changed(ModuleId, SDF_NAMESPACE,"status",<term>,complete)
      .
      (
        MenuSelected(Sid, EditorType)
      +
        MouseClicked(Sid)
      +
        rec-msg(te-contents-changed(Sid))
        . TODO("Add status of term to module manager, so it can be used to clear the cached term parsetree. Closes #555")
      +
        rec-msg(te-contents-saved(Sid))
        . UpdateTermStructure(Sid)
      +
        rec-note(mm-attribute-changed(Event?))
        . UpdateTermStructure(Sid)
      )
      *
      EditorDisconnected(Sid)
      . DeleteSession(Sid)
      . snd-msg(ui-remove-feedback-summary(Path))
    else
      tau
    fi
  else
    Error := "Term is already being edited over a different module."
    . snd-msg(term-editor-not-started(Path, ModuleId, Error))
  fi
endlet

process UpdateTermStructure(Sid: term) is
let
  ModuleId: term,
  Slices: term,
  Tree: term,
  Path: str
in
  GetModuleId(Sid, ModuleId?)
  . GetPath(Sid, Path?)
  . GetTermParsetree(ModuleId, Path, Tree?) 
  .
  if not-equal(Tree, UNDEFINED) then
    SE-UpdateTree(Sid, Tree)
  else
    tau
  fi
endlet

process ActivateEditorWithTree(Tree: term, ModuleId: term, Filename: str) is
let
  Error: term,
  Pid: int,
  Sid: term,
  Text: str,
  ErrorMessage: str
in
  if not-equal(Tree, UNDEFINED) then
    snd-msg(unparse(Tree))
    . rec-msg(unparsed-text(Text?))
    . snd-msg(io-write-text-list(Filename, [Text]))
    .
    (
      rec-msg(io-file-written)
      . create(EditTerm(Filename, ModuleId, false), Pid?)
      .
      (
        rec-msg(term-editor-started(Filename, ModuleId, Sid?))
        . SE-UpdateTree(Sid, Tree)
	. PutCachedValue(TERM_TREE_CACHE, ModuleId, Tree)
      +
        rec-msg(term-editor-not-started(Filename, ModuleId, ErrorMessage?))
        . Error(ErrorMessage, [])
      )
    +
      rec-msg(io-file-not-written(Error?))
      . snd-note(ui-status(errorf("%s: %t", [Filename, Error])))
    )
  fi
endlet

#endif /* __TERM_EDITOR_UTILS__ */
