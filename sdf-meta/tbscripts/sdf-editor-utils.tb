#ifndef __SDF_EDITOR_UTILS__
#define __SDF_EDITOR_UTILS__

#include <editing.tb>
#include <config-utils.tb>

process EditSyntax(ModuleId: module-id) is
let
  AlreadyExists: bool,
  Available: bool,
  EditorType: term,
  HasAttribute: bool,
  HasText: bool,
  HasStructure: bool,
  Modulename: str,
  Path: str,
  Editable: bool,
  Sid: session-id,
  Event: attribute-changed-event,
  Tree: term
in
  EditorType := syntax-editor
  . GetModulePath(ModuleId, SDF_NAMESPACE, Path?)
  . MM-GetAttribute(ModuleId, SDF_NAMESPACE, "name", Modulename?) 
  . 
  if equal(Path, EMPTY_PATH) then
    TODO("dit is ook raar\n")
    . BuildPath(".", Modulename, SDF_EXTENSION, Path?)
    . printf("EditSyntax: Use CreateNewModule instead???\n")
  else
    tau
  fi
  . Edit(Path, Sid?)
  .
  if not-equal(Sid, UNDEFINED) then
    EditText(Sid, EditorType, AlreadyExists?)
    . snd-msg(te-set-tooltip(Sid, Modulename))
    . snd-msg(syntax-editor-started(ModuleId, Sid))
    .
    if equal(AlreadyExists, false) then
      MM-HasAttribute(ModuleId, SDF_NAMESPACE, "editable", HasAttribute?)
      .
      if equal(HasAttribute, true) then
        MM-GetAttribute(ModuleId, SDF_NAMESPACE, "editable", Editable?)
      else
        Editable := true
      fi
      . snd-msg(te-set-editable(Sid, Editable))
      . snd-msg(em-bind-session(Sid, ModuleId))
      . rec-msg(em-session-bound(Sid, ModuleId))
      . GetSDFParsetree(ModuleId, Tree?)
      . SE-UpdateTree(Sid, Tree)
      . MM-Subscribe-Attribute-Changed(ModuleId,SDF_NAMESPACE,"status",<term>,parsed)
      .
      (
        MenuSelected(Sid, EditorType)
      +
        MouseClicked(Sid)
      +
        rec-msg(te-contents-changed(Sid))
        . MM-SetAttribute(ModuleId, SDF_NAMESPACE, "status", edited)
        . RemoveSummaryFor(Path)
      +
        rec-msg(te-contents-saved(Sid))
        . UpdateTextRepository(Sid)
        . MM-SetAttribute(ModuleId, SDF_NAMESPACE, "status", available)
        . UpdateSyntaxStructure(Sid)
      +
        rec-note(mm-attribute-changed(Event?))
        . UpdateSyntaxStructure(Sid)
      )
      *
      EditorDisconnected(Sid)
      . DeleteSession(Sid)
    else
      tau
    fi
  else
    tau
  fi
endlet

process UpdateSyntaxStructure(Sid: session-id) is
let
  ModuleId: module-id,
  Slices: list,
  Tree: term
in
  GetModuleId(Sid, ModuleId?)
  . GetSDFParsetree(ModuleId, Tree?)
  . SE-UpdateTree(Sid, Tree) 
endlet

#endif /* __SDF_EDITOR_UTILS__ */
