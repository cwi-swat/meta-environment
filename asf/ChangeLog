
2001/11/25 (mdejonge@cwi.nl)
 * package now uses toolbuslib package
 * extended functionality of program-check.m4 macros

2001/11/21 (jurgen@cwi.nl)
 * Fixed a bug in the compiler. Functions with list arguments were not
   compiled correctly, resulting in core dumps.
 * Bootstrapped compiler and regenerated addeqssyntax.
 * Bumped version of asfc to 2.2

2001/11/21 (jurgen@cwi.nl)
 * Bumped to 1.2.1
 * Fixed a (part of a) serious bug in the list matching code of asfe concerning 
   list separators.
 * Bumped version of asfe to 0.4
 * Added '-a' switch to asfe to activate rewriting of ambiguous terms.

2001/11/20 ({olivierp,jurgenv}@cwi.nl)
 * Fixed wrong tag reporting in error messages and TIDE stack trace.
 * Fixed a bug in the interpreter concerning uninitialized list variables
   in the right-hand side of an equation.
 * Fixed stack frame identification for TIDE in asfe.

2001/11/13 (jurgenv@cwi.nl)
 * Fixed bash compatibility bug in system call in asfc for SunOs.

2001/11/13 (markvdb@cwi.nl)
 * Replaced ASC_applyFunctionToTree by PT_applyFunctionToTree.
 * Removed unused argument from PT_applyFunctionToTree.

2001/11/12 (jurgenv@cwi.nl)
 * Added a '-l' option to asfe that replaces all layout by a single space
   in the output term (used for testing compatibility with compiled
   specificatons).
 * Moved tests of asfc and asfe to shared test directory. Results for
   interpreted and compiled specifications are now checked to be equal.
 * Added a number of tests for traversal functions and sdf2 symbols.
 * Moved apply-function tool to pt-support package

2001/11/07 (jurgenv@cwi.nl)
 * Fixed a bug in the compiler. More than one rewrite rules DIRECTLY over a 
   list were not handled correctly and resulted in runtime core dumps.
 * Added support for transformers that visit a list to the compiler.
 * NOTE: transformers and accumulators are now fully supported by the
   compiler.

2001/11/06 (jurgenv@cwi.nl)
 * Traversal functions in the compiler: 
   - added support for traversal functions with a single variable as the first
     argument in a defining equation.
   - added support for accumulators that return a list symbol directly.

2001/11/06 ({jurgenv,markvdb}@cwi.nl)
 * Removed module identifiers from productions:
   - Regenerated the compiler. 
   - Regenerated the MuASF library. 
 * Changed commandline options of asfc.
   - the name of a specification is automatically computed from the name
     of the input file. This can be overridden by the -n option.
   - if input is stdin, the -n option is obligatory.
   - the standalone compiler does not call gcc by default anymore, only
     if you provide the -c option. (the ToolBus version still compiler to
     binary by default).
 
2001/11/05 ({jurgenv,markvdb}@cwi.nl)
 * Removed module identifiers from productions:
   - Re-generated Add-Eqs-Syntax.c
   - Re-generated Remove-Var-Syntax.c
   - Adapted apply-function tool.

2001/11/02 (jurgenv@cwi.nl)
 * Added support for accumulators to the compiler.
 * RESTRICTION: accumulators that return a list sort are not supported yet.

2001/11/01 (jurgenv@cwi.nl)
 * Added support for traversal functions to the compiler (transformers only).
   Bottom-up or top-down with optionally extra variables.
 * RESTRICTION: just a variable as the first argument of a traversal
   function in the left-hand side of a defining equation are NOT allowed.
 * RESTRICTION: transformers that visit lists are not supported yet.

2001/10/25 (jurgenv@cwi.nl, markvdb@cwi.nl)
 * Optimized evaluator. Lexical constructor functions are now imploded
   to real lexical trees.

2001/10/11 (mdejonge@cwi.nl)
 * Added (generated) manual pages to EXTRA_DIST variable because not
   everybody has pod2man available

2001/10/01 (jurgenv@cwi.nl)
 * Refactored the rewriting code in the ASF interpreter. Divided the
   innermost rewriting function into smaller subfunctions.
 * Refactored the code for the traversal functions in the ASF interpreter.
   The interpreter now supports the following traversal attributes:
     - traversal(trafo,bottom-up), 
     - traversal(accu,bottom-up), 
     - traversal(trafo,accu,bottom-up), 
     - traversal(trafo,top-down), 
     - traversal(accu,top-down), 
     - traversal(trafo,accu,top-down) 
 * For backward compatibility the "traverse" attribute is still supported.

2001/09/27 (jurgenv@cwi.nl)
 * Made some important changes in the Sdf grammar:
     - added:   ATerm                      -> Attribute 
     - removed: "cons" "(" term:ATerm ")"  -> Attribute 
                "constructor"              -> Attribute 
                "memo"                     -> Attribute 
                "traverse"                 -> Attribute 
     - refactored the ATerm grammar a bit
 * NOTE: These changes affect any specification that imports the SDF 
         grammar.
 * Adapted compiler frontend to cope with new AsFix attribute format.
 * Changed regression tests terms of asfc and asfe to new AsFix attribute
   format.

2001/08/30 (markvdb@cwi.nl)
 * Improved the efficiency of the Integer addition in the compiler spec.

2001/08/28 (jong@cwi.nl)
 * Code improvements to satisfy gcc-3.0.1
 * version 1.2beta started

2001/08/14 (jong@cwi.nl)
 * Folded configure.in and weeded out some unused libs/dlopen/INSTDIR stuff
 * filtereqssyntaxtool now linked against $(SOCKLIBS)
 * filtereqssyntaxtool.idef added to EXTRA_DIST

2001/08/13 (jong@cwi.nl)
 * Added include directives for ToolBus in filtereqssyntax

2001/08/08 (jurgenv@cwi.nl)
 * Added a new tool: filtereqssyntax that disambiguates ASF equations
   and condition by choosing the least number of injections in the
   left-hand-side. In time, this filter can replace the generic injection 
   count filter in sglr.

2001/08/07 (mdejonge@cwi.nl)
 * asfc/src/c-code.c: Changed -DMAIN_<module-name> to -DASF_MAIN

2001/07/20 (jurgenv@cwi.nl)
 * Added rewriting of ambiguity clusters; addeqssyntax generates
   "amb({Symbol ","}+) -> Symbol" and asfe lifts ambiguity clusters
   to this syntax before rewriting and flattens them back when finished.
 * Fixed asfc such that modules with no equation compile to a binary
   that does nothing but building a normal form.
 * Set version of asfe to 0.3.
 * Set version of addeqssyntax to 2.1

2001/07/19 (jurgenv@cwi.nl)
 * Generalized the optimization for recursive list functions to
   any recursive function.
 * addeqssyntax adds syntax for each declared symbol too.

2001/07/18 (jurgenv@cwi.nl)
 * Fixed optimization of recursive list functions. In combination
   with automatic constructor detection, a large speedup can be
   expected.
 * asfc version to 2.1

2001/07/17 (jurgenv@cwi.nl)
 * Added automatic constructor detection to asfc

2001/07/17 (jong@cwi.nl)
 * version 1.0 released, bumped to 1.1

2001/07/16 (jong@cwi.nl)
 * documented bump to version 1.0

2001/07/12 (jong@cwi.nl)
  * patched Makefile.am's to comply with new location of -lATB

2001/07/10 (jurgenv@cwi.nl)
  * Added support for rewrite rules with a list as outermost function
    to asfc

2001/07/09 (jurgenv@cwi.nl)
  * started new collection of regression tests for asfc

2001/07/06 (jurgenv@cwi.nl, markvdb@cwi.nl)
  * version now 1.0
  * Removed C code generated by old compiler from RemoveVarSyntax.
  * Removed C code generated by old compiler from AddEqsSyntax.
  * Added C code generated by new compiler.

2001/07/04 (jurgenv@cwi.nl)
  * Replaced asfix2muasf frontend by a new frontend, written in C: asf2muasf
  * Removed reshuffling from the compiler
  * Slightly altered the backend, muasf2c to be able to handle asfix2me muasf.
  * Changed the interface of asfc to read in a .eqs file and print out C code.
  * Bootstrapped the compiler to obtain an AsFix2ME compliant asf compiler.
  * See also: asc-support package

2001/07/04 (markvdb@cwi.nl)
  * Removed a bug from the evaluator, which was there all the time,
    nested sublist were not treated correctly!

2001/06/18 (jurgenv@cwi.nl)
  * Fixed a compiler bug. Coming back from an optimized recursive
    function, checking of the expected function symbols was not done at all.

2001/06/15 ({jurgenv,olivierp}@cwi.nl)
  * Fixed bug in rewriting with layout
  * Changed TB interface to completely functional approach

2001/06/15 (markvdb@cwi.nl)
  * adapted apply-function in order to be AsFix2ME compatible.

2001/05/31 (jurgenv@cwi.nl)
  * changed extension .eqs to .asf in compiler specification

2001/05/30 (markvdb@cwi.nl)
  * Fixed a "bug" in addeqssyntax with respect to prefix functions.
  * Regenerated C code for Remove-Var-Syntax and Add-Eqs-Syntax.

2001/05/23 (markvdb@cwi.nl)
  * Released version 0.2, and bumped into 0.3.  
  * Bumped into version 0.2 in order to make distribution. 

2001/05/04 (markvdb@cwi.nl)
  * asc-support.h replaced by asc-support2.h in order to make
    recompilation of generated code independent of changes in
    libMEPT.

2001/04/27 (markvdb@cwi.nl)
  * Adapted asfe to support AsFix2ME to its full extent.

2001/03/23 (jurgenv@cwi.nl)
  * added concat-asf, a tool that reads in parse trees of .asf files and
    dumps their equations concatenated in a single list of equations.

2001/03/08 (jurgenv@cwi.nl)
  * addeqssyntax and removevarsyntax based on PT and SDF libraries

2001/03/02 (jurgenv@cwi.nl)
  * asfe keeps all ATerm annotations during rewriting
  * added one term for Pico-typecheck to test which contains pos-info

2001/02/22 (jurgenv@cwi.nl)
  * all ATerm annotations are removed from both equations and term 
    before asfe begins rewriting

2001/02/20 (jurgenv@cwi.nl)
  * asfe now based on ASF and PT support libraries
  * asfe can now only rewrite WITH layout

2001/02/6 (jurgenv@cwi.nl)
  * evaluator is renamed to asfe
  * compiler is renamed to asfc

2001/02/5 (jurgenv@cwi.nl)
  * asf contains the following components, which are inherited from
    the deprecated new-meta package: compiler, evaluator, addeqssyntax
    removevarsyntax, genmakefile, genamakefile
