2003/02/12 (markvdb@cs.vu.nl)
 * Improved the asfchecker with respect to ambiguities.
 
2003/02/07 (jurgenv@cwi.nl)
 * Added new builtin get-term-anno to be able to retrieve posinfo information
   using asfe
 * Bumped to 1.7beta

2003/01/22 ({jong,jurgenv}@cwi.nl)
 * ToolBus support /required/ not /optional/ !!

2003/01/22 (markvdb@cwi.nl)
 * Release 1.6
 * LGPL license

2003/01/10 (markvdb@cwi.nl)
 * Added a test to test a bug reported by Paul.

2003/01/09 (jurgenv@cwi.nl)
 * Added asfix syntax to library

2002/10/31 (vandenbr@loria.fr)
 * simplified the code with respect to storing equations. In fact, this
   functionality has been complete removed.

2002/10/29 (vinju@loria.fr)
 * Made asf package independent of ToolBus tools by putting tool interfaces
   in repository and removing implicit build rules for idef2tif and tifstoc

2002/10/13 (vinju@loria.fr)
 * Meta-Environment scripting is put in a separate package: asfsdf-meta
 * Put syntax related tools in syntax subdirectory and semantics related
   tools in semantics directory to create a better overview in this 
   large package.
 * Incorporated asf-library package in this package. 
 * Moved builtins code from library to semantics.
 * Asfe accepts ambiguous terms when it is connected to the Meta-Environment

2002/10/09 (vinju@loria.fr)
 * Added dependency on meta package
 * Added directory meta-scripts that contains the meta-environment ToolBus
   interface. These two scripts with the meta package together form the
   ASF+SDF Meta-Environment now.
 * Added the 'meta' script that calls the 'generic-meta' script from the meta
   package with the correct ToolBus include path.

2002/10/08 (vinju@loria.fr)
 * Refactored asf-operations tool

2002/09/27 ({vinju,moreau}@loria.fr)
 * Moved generic symbol renaming functionality to pt-support

2002/09/27 (markvdb@cs.vu.nl)   
 * Added an operation to obtain the list of equations given a
   parse tree of the equations.

2002/09/26 (markvdb@cs.vu.nl)   
 * Moved the renaming and parameterization functionality for equations
   to the asf directory.

2002/09/09 (vandenbr@loria.fr)
 * Added "#!/bin/sh" to generated test scripts in order to make
   them work on CYGWIN.
   
2002/07/30 (jurgenv@cwi.nl)
 * Bumped to 1.6beta
 * Added asserts concerning ill formed ambiguity clusters in asfe.

2002/07/24 (jurgenv@cwi.nl)
 * Release 1.5

2002/07/16 (vandenbr@loria.fr, jurgenv@cwi.nl)
 * Fixed a bug in the asf interpreter concerning functions that return 
   lists but are not normalized to lists always.

2002/07/01 (vandenbr@loria.fr)
 * Lexical and ambiguity constructor explicitly added to the
   corresponding productions.

2002/06/27 (jurgenv@cwi.nl)
 * Simplified (list) matching and condition checking algorithms in asfe.

2002/06/26 (jurgenv@cwi.nl)
 * Improved asf-checker a bit. Less 'cascading' error messages. 
 * Removed 'instantiated and uninstantiated variables' error message.

2002/06/26 (vandenbr@loria.fr)
 * Fixed a number of small bugs.

2002/06/24 (vandenbr@loria.fr)
 * Improved the asfsdf-checker with respect to checking the traversal
   attributes.
 * First version of an asf-checker added.

2002/06/10 (markvdb@cs.vu.nl)
 * Fixed the "restore-brackets bug" reported on 27-03-2002.
 * Improved the compiler specification with respect to processing
   names.

2002/06/05 (jurgenv@cwi.nl)
 * Made concat-asf robust against empty input files

2002/06/05 (vandenbr@loria.fr)
 * Bug fix wrt. more than one list pattern in a list pattern.

2002/06/03 (jurgenv@cwi.nl)
 * Two new traversal directives added (interpreter only): 
   break and continue. A traversal function either breaks of traversal on
   the current branch after a successful application of a rewrite rule, 
   or continues traversing.

2002/05/31 (jurgenv@cwi.nl)
 * Added the notion of failure to the rewriting process in asfe. 
   Every rewrite step/traversal/built-in can return FAIL instead of a reduct. 
   Depending on the context different actions can now be activated for FAIL 
   and success. This can be used for experimenting with different traversal
   strategies.
 * Bumped version of asfe to 0.6

2002/05/22 (jurgenv@cwi.nl)
 * Fixed dependency bug on asf-library in configure.in

2002/05/22 (vandenbr@loria.fr)
 * Based the specifications of AddApiSyntax, AddEqsSyntax,
   AsfSdfChecker, RemoveVarSyntax on the Sdf version of the
   new asf-library.

2002/05/15 (jurgenv@cwi.nl)
 * Connected asfe to asf-builtins library
 * Added configure switch for asf-library (for builtins)

2002/05/14 (jurgenv@cwi.nl)
 * Fixed a bug in addeqssyntax that caused module with multiple import 
   sections to crash during parsetable generation.
   Example: "module A imports B imports C"

2002/05/13 (jurgenv@cwi.nl)
 * The asfc compiler renames slashes to underscores in the module name
   to cope with compound module names.
 * Bumped to 1.5beta

2002/04/19 (jurgenv@cwi.nl)
 * Release 1.4

2002/04/18 (vandenbr@loria.fr)
 * addapisyntax can now deal with parameterized sorts.
 * AsfSdfChecker checks whether production renamings are used,
   if so an error message is generated:
   "production-renamings-not-supported".

2002/17/04 (jurgenv@cwi.nl)
 * Fixed a bug in traversal functions with more than 7 arguments.

2002/27/03 (jurgenv@cwi.nl)
 * Made asfc call configured c compiler and use configured c compiler flags.

2002/03/26 (vandenbr@loria.fr)
 * Added a check on the use of character classes in context-free
   syntax sections.
   
2002/03/25 (vandenbr@loria.fr)
 * Regenerated the C code of the AsfSdf-Checker, because the
   Sdf-Checker can handle incomplete specifications and
   aliases.

2002/03/22 (vandenbr@loria.fr)
 * Restructured the Sdf-Checker, partly moved to asf directory.

2002/13/03 (jurgenv@cwi.nl)
 * Fixed a bug in asfc. The compiler ignored constant arguments of functions
   like: f("t" | "f") -> F in some cases.
 * Bumped asfc to 2.5

2002/03/04 (vandenbr@loria.fr)
 * Introduced parameterized sorts.

2002/02/27 (jurgenv@cwi.nl)
 * Fixed a bug in the is-<cons> builtin. If it returned false it would
   match correclty in the conditions.
 * Bumped to 1.4beta
 * Removed automatic predicate generation for prefix functions without
   a cons annotation.

2002/02/13 ({jurgenv,markvdb}@cwi.nl)
 * Released 1.3
 * Fixed memory leak in restore-brackets

2002/02/12 (jurgenv@cwi.nl)
 * Fixed a serious bug in the asf compiler. It couldn't handle lists
   at the top of matching conditions.
 * Set version of asfc to 2.4

2002/02/05 (jurgenv@cwi.nl)
 * Bumped to version 1.3

2002/02/05 (jurgenv@cwi.nl)
 * Improved usage message of concat-asf
 * Pos-info is no longer needed for asfe if debugging with Tide is 
   not activated.

2002/01/23 (jurgenv@cwi.nl)
 * Fixed a bug in addapisyntax; sequences were not supported.

2002/01/22 (jurgenv@cwi.nl)
 * Changed addapisyntax a bit after suggestions of P. Mosses. 
   1. You can use labels without a cons now.
   2. Added support for prefix functions. No constructor is generated
      but there is a predicate (is-<function-name>).

2002/01/16 (jurgenv@cwi.nl)
 * Added '-m' switch to asfe. If this switch is given the interpreter marks
   all new layout (introduced by the equations) such that a (partial)
   pretty-printer can take care of it.
 * Bumped version of asfe to 0.5.

2002/01/15 (jurgenv@cwi.nl)
 * Added a tool addapisyntax that add syntax based on cons attributes
   and labels. A cons attribute generates a prefix constructor function
   and an predicate function. A label generates a getter and a setter.
 * Added semantics for generated api syntax in the interpreter.
 * Added preliminary support for ASF primitives (or builtins) using the
   "builtin(<name>)" attribute.

2002/01/08 (vandenbr@loria.fr)
 * Adapted the edit-term script and moved functionality to the
    rewriter.
    
2001/12/17 (vandenbr@loria.fr)
 * Add a bracket restoration tool.

2001/12/14 (jurgenv@cwi.nl)
 * Added experimental support for accumulating transformers to the compiler.
 * Added tests for top-down and bottom-up accumulating transformers

2001/12/13 (jurgenv@cwi.nl)
 * Added support for traversal functions in the input term of a spec.
 * Added some test files for this.
 * Moved traversal function handling functionality from asfc to asc-support.
 * Bumped asfc version to 2.3
 * Bumped package version to 1.2.2beta

2001/12/06 (jurgenv@cwi.nl)
 * Fixed a bug in accumulating transformers. Results of such traversal
   functions had incorrect types and could not be used in conditions.

2001/11/29 (jurgenv@cwi.nl)
 * Adapted all components to cope with new production attributes (no 
   automatic quoting anymore).
 * Adapted regression tests by hand to check the changes.

2001/11/25 (mdejonge@cwi.nl)
 * package now uses toolbuslib package
 * extended functionality of program-check.m4 macros

2001/11/21 (jurgen@cwi.nl)
 * Fixed a bug in the compiler. Functions with list arguments were not
   compiled correctly, resulting in core dumps.
 * Bootstrapped compiler and regenerated addeqssyntax.
 * Bumped version of asfc to 2.2

2001/11/21 (jurgen@cwi.nl)
 * Bumped to 1.2.1
 * Fixed a (part of a) serious bug in the list matching code of asfe concerning 
   list separators.
 * Bumped version of asfe to 0.4
 * Added '-a' switch to asfe to activate rewriting of ambiguous terms.

2001/11/20 ({olivierp,jurgenv}@cwi.nl)
 * Fixed wrong tag reporting in error messages and TIDE stack trace.
 * Fixed a bug in the interpreter concerning uninitialized list variables
   in the right-hand side of an equation.
 * Fixed stack frame identification for TIDE in asfe.

2001/11/13 (jurgenv@cwi.nl)
 * Fixed bash compatibility bug in system call in asfc for SunOs.

2001/11/13 (markvdb@cwi.nl)
 * Replaced ASC_applyFunctionToTree by PT_applyFunctionToTree.
 * Removed unused argument from PT_applyFunctionToTree.

2001/11/12 (jurgenv@cwi.nl)
 * Added a '-l' option to asfe that replaces all layout by a single space
   in the output term (used for testing compatibility with compiled
   specificatons).
 * Moved tests of asfc and asfe to shared test directory. Results for
   interpreted and compiled specifications are now checked to be equal.
 * Added a number of tests for traversal functions and sdf2 symbols.
 * Moved apply-function tool to pt-support package

2001/11/07 (jurgenv@cwi.nl)
 * Fixed a bug in the compiler. More than one rewrite rules DIRECTLY over a 
   list were not handled correctly and resulted in runtime core dumps.
 * Added support for transformers that visit a list to the compiler.
 * NOTE: transformers and accumulators are now fully supported by the
   compiler.

2001/11/06 (jurgenv@cwi.nl)
 * Traversal functions in the compiler: 
   - added support for traversal functions with a single variable as the first
     argument in a defining equation.
   - added support for accumulators that return a list symbol directly.

2001/11/06 ({jurgenv,markvdb}@cwi.nl)
 * Removed module identifiers from productions:
   - Regenerated the compiler. 
   - Regenerated the MuASF library. 
 * Changed commandline options of asfc.
   - the name of a specification is automatically computed from the name
     of the input file. This can be overridden by the -n option.
   - if input is stdin, the -n option is obligatory.
   - the standalone compiler does not call gcc by default anymore, only
     if you provide the -c option. (the ToolBus version still compiler to
     binary by default).
 
2001/11/05 ({jurgenv,markvdb}@cwi.nl)
 * Removed module identifiers from productions:
   - Re-generated Add-Eqs-Syntax.c
   - Re-generated Remove-Var-Syntax.c
   - Adapted apply-function tool.

2001/11/02 (jurgenv@cwi.nl)
 * Added support for accumulators to the compiler.
 * RESTRICTION: accumulators that return a list sort are not supported yet.

2001/11/01 (jurgenv@cwi.nl)
 * Added support for traversal functions to the compiler (transformers only).
   Bottom-up or top-down with optionally extra variables.
 * RESTRICTION: just a variable as the first argument of a traversal
   function in the left-hand side of a defining equation are NOT allowed.
 * RESTRICTION: transformers that visit lists are not supported yet.

2001/10/25 (jurgenv@cwi.nl, markvdb@cwi.nl)
 * Optimized evaluator. Lexical constructor functions are now imploded
   to real lexical trees.

2001/10/11 (mdejonge@cwi.nl)
 * Added (generated) manual pages to EXTRA_DIST variable because not
   everybody has pod2man available

2001/10/01 (jurgenv@cwi.nl)
 * Refactored the rewriting code in the ASF interpreter. Divided the
   innermost rewriting function into smaller subfunctions.
 * Refactored the code for the traversal functions in the ASF interpreter.
   The interpreter now supports the following traversal attributes:
     - traversal(trafo,bottom-up), 
     - traversal(accu,bottom-up), 
     - traversal(trafo,accu,bottom-up), 
     - traversal(trafo,top-down), 
     - traversal(accu,top-down), 
     - traversal(trafo,accu,top-down) 
 * For backward compatibility the "traverse" attribute is still supported.

2001/09/27 (jurgenv@cwi.nl)
 * Made some important changes in the Sdf grammar:
     - added:   ATerm                      -> Attribute 
     - removed: "cons" "(" term:ATerm ")"  -> Attribute 
                "constructor"              -> Attribute 
                "memo"                     -> Attribute 
                "traverse"                 -> Attribute 
     - refactored the ATerm grammar a bit
 * NOTE: These changes affect any specification that imports the SDF 
         grammar.
 * Adapted compiler frontend to cope with new AsFix attribute format.
 * Changed regression tests terms of asfc and asfe to new AsFix attribute
   format.

2001/08/30 (markvdb@cwi.nl)
 * Improved the efficiency of the Integer addition in the compiler spec.

2001/08/28 (jong@cwi.nl)
 * Code improvements to satisfy gcc-3.0.1
 * version 1.2beta started

2001/08/14 (jong@cwi.nl)
 * Folded configure.in and weeded out some unused libs/dlopen/INSTDIR stuff
 * filtereqssyntaxtool now linked against $(SOCKLIBS)
 * filtereqssyntaxtool.idef added to EXTRA_DIST

2001/08/13 (jong@cwi.nl)
 * Added include directives for ToolBus in filtereqssyntax

2001/08/08 (jurgenv@cwi.nl)
 * Added a new tool: filtereqssyntax that disambiguates ASF equations
   and condition by choosing the least number of injections in the
   left-hand-side. In time, this filter can replace the generic injection 
   count filter in sglr.

2001/08/07 (mdejonge@cwi.nl)
 * asfc/src/c-code.c: Changed -DMAIN_<module-name> to -DASF_MAIN

2001/07/20 (jurgenv@cwi.nl)
 * Added rewriting of ambiguity clusters; addeqssyntax generates
   "amb({Symbol ","}+) -> Symbol" and asfe lifts ambiguity clusters
   to this syntax before rewriting and flattens them back when finished.
 * Fixed asfc such that modules with no equation compile to a binary
   that does nothing but building a normal form.
 * Set version of asfe to 0.3.
 * Set version of addeqssyntax to 2.1

2001/07/19 (jurgenv@cwi.nl)
 * Generalized the optimization for recursive list functions to
   any recursive function.
 * addeqssyntax adds syntax for each declared symbol too.

2001/07/18 (jurgenv@cwi.nl)
 * Fixed optimization of recursive list functions. In combination
   with automatic constructor detection, a large speedup can be
   expected.
 * asfc version to 2.1

2001/07/17 (jurgenv@cwi.nl)
 * Added automatic constructor detection to asfc

2001/07/17 (jong@cwi.nl)
 * version 1.0 released, bumped to 1.1

2001/07/16 (jong@cwi.nl)
 * documented bump to version 1.0

2001/07/12 (jong@cwi.nl)
  * patched Makefile.am's to comply with new location of -lATB

2001/07/10 (jurgenv@cwi.nl)
  * Added support for rewrite rules with a list as outermost function
    to asfc

2001/07/09 (jurgenv@cwi.nl)
  * started new collection of regression tests for asfc

2001/07/06 (jurgenv@cwi.nl, markvdb@cwi.nl)
  * version now 1.0
  * Removed C code generated by old compiler from RemoveVarSyntax.
  * Removed C code generated by old compiler from AddEqsSyntax.
  * Added C code generated by new compiler.

2001/07/04 (jurgenv@cwi.nl)
  * Replaced asfix2muasf frontend by a new frontend, written in C: asf2muasf
  * Removed reshuffling from the compiler
  * Slightly altered the backend, muasf2c to be able to handle asfix2me muasf.
  * Changed the interface of asfc to read in a .eqs file and print out C code.
  * Bootstrapped the compiler to obtain an AsFix2ME compliant asf compiler.
  * See also: asc-support package

2001/07/04 (markvdb@cwi.nl)
  * Removed a bug from the evaluator, which was there all the time,
    nested sublist were not treated correctly!

2001/06/18 (jurgenv@cwi.nl)
  * Fixed a compiler bug. Coming back from an optimized recursive
    function, checking of the expected function symbols was not done at all.

2001/06/15 ({jurgenv,olivierp}@cwi.nl)
  * Fixed bug in rewriting with layout
  * Changed TB interface to completely functional approach

2001/06/15 (markvdb@cwi.nl)
  * adapted apply-function in order to be AsFix2ME compatible.

2001/05/31 (jurgenv@cwi.nl)
  * changed extension .eqs to .asf in compiler specification

2001/05/30 (markvdb@cwi.nl)
  * Fixed a "bug" in addeqssyntax with respect to prefix functions.
  * Regenerated C code for Remove-Var-Syntax and Add-Eqs-Syntax.

2001/05/23 (markvdb@cwi.nl)
  * Released version 0.2, and bumped into 0.3.  
  * Bumped into version 0.2 in order to make distribution. 

2001/05/04 (markvdb@cwi.nl)
  * asc-support.h replaced by asc-support2.h in order to make
    recompilation of generated code independent of changes in
    libMEPT.

2001/04/27 (markvdb@cwi.nl)
  * Adapted asfe to support AsFix2ME to its full extent.

2001/03/23 (jurgenv@cwi.nl)
  * added concat-asf, a tool that reads in parse trees of .asf files and
    dumps their equations concatenated in a single list of equations.

2001/03/08 (jurgenv@cwi.nl)
  * addeqssyntax and removevarsyntax based on PT and SDF libraries

2001/03/02 (jurgenv@cwi.nl)
  * asfe keeps all ATerm annotations during rewriting
  * added one term for Pico-typecheck to test which contains pos-info

2001/02/22 (jurgenv@cwi.nl)
  * all ATerm annotations are removed from both equations and term 
    before asfe begins rewriting

2001/02/20 (jurgenv@cwi.nl)
  * asfe now based on ASF and PT support libraries
  * asfe can now only rewrite WITH layout

2001/02/6 (jurgenv@cwi.nl)
  * evaluator is renamed to asfe
  * compiler is renamed to asfc

2001/02/5 (jurgenv@cwi.nl)
  * asf contains the following components, which are inherited from
    the deprecated new-meta package: compiler, evaluator, addeqssyntax
    removevarsyntax, genmakefile, genamakefile
