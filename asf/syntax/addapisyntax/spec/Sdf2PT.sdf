module Sdf2PT

imports sdf2/syntax/Sdf2

exports

context-free syntax

sdf2pt(Production, "lex" | "cf") -> ATerm
normal(Production)               -> Production

hiddens

context-free syntax
normal({Symbol ","}*) -> Symbol*

context-free syntax

asyms(Symbol*, "lex" | "cf")  -> {ATerm ","}*
asymsep({Symbol ","}+)        -> {ATerm ","}+
asym(Symbol)                  -> ATerm
aattributes(Attributes)       -> ATermList
aattrs({Attribute ","}+)      -> {ATerm ","}+
aattr(Attribute)              -> ATerm {prefer}
aseqlist(Symbol+)             -> {ATerm ","}+

hiddens

variables 

"Attributes"[0-9]*   -> Attributes
"Attribute"[0-9]*    -> Attribute
"Attribute+"[0-9]*   -> { Attribute ","}+
"Production"[0-9]*   -> Production
"Lhs"                -> Symbol*
"Rhs"                -> Symbol
"Symbol,*"[0-9]* -> {Symbol ","}*
"Symbol,+"[0-9]* -> {Symbol ","}+
"Symbol*"[0-9]*  -> Symbol*
"c*"[0-9]*           -> CHAR*
"c+"[0-9]*           -> CHAR+
"c"[0-9]*            -> CHAR
"Term"[0-9]*         -> ATerm
"Intcon"[0-9]*       -> IntCon
"Natcon"[0-9]*       -> NatCon
"lex|cf"[0-9]*       -> "lex" | "cf"
"$"? "Symbol+"[0-9]* -> Symbol+
"$"? "Symbol"[0-9]*  -> Symbol
"$"? "Literal"[0-9]* -> Literal
"ATerm"[0-9]*        -> ATerm
