%%
%%    PGEN - the SDF2 parse table generator.
%%    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, 
%%                        The Netherlands. 
%%
%%    This program is free software; you can redistribute it and/or modify
%%    it under the terms of the GNU General Public License as published by
%%    the Free Software Foundation; either version 2 of the License, or
%%    (at your option) any later version.
%%
%%    This program is distributed in the hope that it will be useful,
%%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%%    GNU General Public License for more details.
%%
%%    You should have received a copy of the GNU General Public License
%%    along with this program; if not, write to the Free Software
%%    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
%%

module Add-TagId-Rejects

imports Sdf2 Booleans

exports
  context-free syntax
    "add-tagid-rejects" "(" Definition ")" -> Productions

hiddens
  context-free syntax
    "add-tir-for-mod" "(" Module ")"              -> Productions
    "add-tir-for-sections" "(" Section* ")"       -> Productions
    "add-tir-for-section" "(" Section ")"         -> Productions
    "add-tir-for-grammar" "(" Grammar ")"         -> Productions
    "add-tir-for-productions" "(" Productions ")" -> Productions
    "add-tir-for-production" "(" Production ")"   -> Productions
    "add-tir-for-symbols" "(" Symbols ")"         -> Productions
    "add-tir-for-symbol" "(" Symbol ")"           -> Productions

hiddens
  context-free syntax
    "are-tagid-chars" "(" Literal ")" -> Bool

hiddens
  variables
    "Attrs"[0-9]*        -> Attributes
    "ImpSection*"[0-9]*  -> ImpSection*
    "Grammar"[0-9]*      -> Grammar
    "ModName"[0-9]*      -> ModuleName
    "Module"[0-9]*       -> Module
    "Module*"[0-9]*      -> Module*
    "Prod"[0-9]*         -> Production
    "Prod*"[0-9]*        -> Production*
    "Section"[0-9]*      -> Section
    "Section*"[0-9]*     -> Section*
    "Sort"[0-9]*        -> Sort
    "Symbol*"[0-9]*      -> Symbol*
    "Symbol"[0-9]*      -> Symbol

    "Char"[0-9]*         -> CHAR
    "Char*"[0-9]*        -> CHAR*
    "Char+"[0-9]*        -> CHAR+
