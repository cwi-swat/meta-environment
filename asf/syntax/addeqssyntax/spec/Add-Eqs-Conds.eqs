%%
%%    PGEN - the SDF2 parse table generator.
%%    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 
%%
%%    This program is free software; you can redistribute it and/or modify
%%    it under the terms of the GNU General Public License as published by
%%    the Free Software Foundation; either version 2 of the License, or
%%    (at your option) any later version.
%%
%%    This program is distributed in the hope that it will be useful,
%%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%%    GNU General Public License for more details.
%%
%%    You should have received a copy of the GNU General Public License
%%    along with this program; if not, write to the Free Software
%%    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
%%
equations

    [ceac-1'1] create-eqs-and-conds() =

  [ceac-1'2] eqs-and-conds-for-mod(Module) = Prod*1,
             create-eqs-and-conds(Module*) = Prod*2
             ======================================
             create-eqs-and-conds(Module Module*) = Prod*1 Prod*2

  [eacfm-1'1] eqs-and-conds-for-sections(Section*) = Prod*
              ============================================
              eqs-and-conds-for-mod(module ModName ImpSection* Section*) = Prod*

  [eacfs-1'1] eqs-and-conds-for-sections() =

  [eacfs-1'2] eqs-and-conds-for-section(Section) = Prod*1,
              eqs-and-conds-for-sections(Section*) = Prod*2
              =============================================
              eqs-and-conds-for-sections(Section Section*) = Prod*1 Prod*2

  [eacfs-2'1] eqs-and-conds-for-section(exports Grammar) =
                eqs-and-conds-for-grammar(Grammar)

  [eacfs-2'2] eqs-and-conds-for-section(hiddens Grammar) =
                eqs-and-conds-for-grammar(Grammar)

  [eacfg-1'1] eqs-and-conds-for-grammar(Grammar1) = Prod*1,
              eqs-and-conds-for-grammar(Grammar2) = Prod*2
              ============================================
              eqs-and-conds-for-grammar(Grammar1 Grammar2) = Prod*1 Prod*2

  [eacfg-1'2] eqs-and-conds-for-symbols(Symbol*) = Prod*
              ==========================================
              eqs-and-conds-for-grammar(sorts Symbol*) = Prod*

  [default-eacfg-1'3] eqs-and-conds-for-grammar(Grammar) =

  [eacfg-1'1] eqs-and-conds-for-symbols() =

  [eacfg-1'2] eqs-and-conds-for-symbols(Symbol*) = Prod*
              ==========================================
              eqs-and-conds-for-symbols($Sort Symbol*) =
                $Sort "=" $Sort  -> Equation
                $Sort "=" $Sort  -> Condition
                $Sort "!=" $Sort -> Condition
                Prod*
