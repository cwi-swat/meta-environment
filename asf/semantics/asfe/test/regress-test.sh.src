#! /bin/sh
#
#    Meta-Environment - An environment for language prototyping.
#    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
#    $Id$

toolbus=__TOOLBUS__
aterm=__ATERM__
datadir=__DATADIR__
srcdir=__SRCDIR__

evaluator=../src/asfe
removeannos="${aterm}/bin/atremove-annotation -a"
diff=${aterm}/bin/atdiff

# HOW TO ADD A REGRESSION TEST:
#
# 1. add <modulename>.eqs.asfix1 to ./eqs. This file should contain a 
#    dump of the needed equations
# 2. add terms to ./terms of the form <modulename>.[0-9]+.trm.asfix1.
#    These files will be used in conjunction with the eqs file you provided
# 3. add normal forms to ./ref of the form <modulename>.[0-9]+.ref.asfix1
#    that correspond with the terms in ./terms

# HOW TO ADD TESTS THAT SHOULD FAIL
#
# 1. Steps 1 and 2 from above.
# 2. You don't need a reference term of course

# first we do all equations that should succeed, and check if the normal
# forms are what we expected.

for e in ${srcdir}/eqs/*.eqs.asfix1; do
  for t in ${srcdir}/terms/`basename $e .eqs.asfix1`*; do
    res=`basename $t .trm.asfix1`.res.asfix1
    rm -f $res
    ref=${srcdir}/ref/`basename $t .trm.asfix1`.ref.asfix1
    ${evaluator} -w on -e $e -i $t | ${removeannos} -o $res
    ${diff} $ref $res
    if [ $? -ne 0 ]; then
       echo "term failed: $t"
       exit 1
    fi
    rm -f $res
    printf "."
  done
done

# now we do all equations that should generate error messages from
# the evaluator
for e in ${srcdir}/fail/*.eqs.asfix1; do
  for t in ${srcdir}/terms/`basename $e .eqs.asfix1`*; do
    res=`basename $t .trm.asfix1`.res.asfix1
    rm -f $res
    ref=${srcdir}/ref/`basename $t .trm.asfix1`.ref.asfix1
    ${evaluator} -w on -e $e -i $t -o /dev/null 2> /dev/null
    if [ $? -eq 0 ]; then
       echo "term failed: $t"
       exit 1
    fi
    rm -f $res
    printf "."
  done
done

printf "\n"
