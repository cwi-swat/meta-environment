#ifndef __ASFE__
#define __ASFE__

tool asfe is { command = "__PREFIX__/bin/asfe" }

process Asfe is
let
  Eval       : asfe,
  ModuleName : str,
  Term       : term,
  Equations  : term,
  NormalForm : term,
  ErrorList  : list,
  Id         : term,
  Tide       : term,
  ParseTable : term,
  Tests : term
in
  Id := process-id
  . subscribe(asfe-abort)
  .
  (
    (
      rec-msg(asfe-rewrite(ModuleName?, Equations?, Term?, Tide?))
      . ParseTable := none
    +
      rec-msg(asfe-rewrite(ModuleName?, Equations?, ParseTable?, Term?, Tide?))
    ) 
    . execute(asfe, Eval?) 
    . snd-eval(Eval, interpret(ModuleName, Equations, ParseTable, Term, Tide))
    .
    (
      (
        rec-value(Eval, rewrite-result(NormalForm?)) 
        . snd-msg(asfe-rewrite-result(NormalForm))
      +
        rec-value(Eval, rewrite-result-with-errors(NormalForm?,ErrorList?))
        . snd-msg(asfe-rewrite-result-with-errors(NormalForm, ErrorList))
      )
      . snd-terminate(Eval,"done")
    +
      rec-disconnect(Eval)
      . snd-msg(asfe-rewrite-errors([error("the ASFE reducer was aborted",[])]))
    +
      rec-note(asfe-abort)
      . snd-kill(Eval, "Killed by user")
      . snd-msg(asfe-rewrite-errors([]))
    )
    /* Equations and terms can be big, so we clear the variables here */
    . Equations := none
    . Term := none 
  +
    rec-msg(asfe-run-tests(Equations?, Tests?, ParseTable?, Tide?)) 
    . execute(asfe, Eval?) 
    . snd-eval(Eval, run-tests(Equations, Tests, ParseTable, Tide)) 
    .
    (
      (
        rec-value(Eval, test-results(ErrorList?)) 
        . snd-msg(asfe-test-results(ErrorList))
      +
        rec-value(Eval, rewrite-errors(ErrorList?)) 
        . snd-msg(asfe-rewrite-errors(ErrorList))
      )
      . snd-terminate(Eval,"done")
    +
      rec-disconnect(Eval)
      . snd-msg(asfe-rewrite-errors([error("the ASFE reducer was aborted",[])]))
    +
      rec-note(asfe-abort)
      . snd-kill(Eval, "Killed by user")
      . snd-msg(asfe-rewrite-errors([]))
    ) 
    . Equations := none 
    . Tests := none
  +
    rec-note(asfe-abort)
  ) 
  *
  delta
endlet

toolbus(Asfe)

#endif /* __ASFE__ */
