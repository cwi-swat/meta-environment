
\subsection{AsFix layout}

<<preparation.h*>>=
#ifndef PREPARATION_H
#define PREPARATION_H

#include <aterm.h>

<<typedef equation_entry>>
<<typedef equation_table>>

<<RWprepareTerm>>
<<RWprepareEqs>>
<<RWrestoreTerm>>

equation_entry *find_equation(equation_entry *prev, aterm *top_ofs, aterm *first_ofs);
void select_equations(aterm *module);
void enter_equations(aterm *module, aterm_list *eqs);

#endif
@

%{{{ typedef equation_entry

<<typedef equation_entry>>=
typedef struct equation_entry
{
  struct equation_entry *hnext;
  unsigned hashnr;
  aterm *top_ofs;
  aterm *first_ofs;
  aterm *equation;
} equation_entry;
@

%}}}
%{{{ typedef equation_table

<<typedef equation_table>>=
typedef struct equation_table
{
  struct equation_table *next;
  aterm *module;
  unsigned size;
  equation_entry **table;
} equation_table;
@ %def equation_table

%}}}


%{{{ RWprepareTerm

\Function{RWprepareTerm}{aterm *}{arena *ar, aterm *t}{Prepare a term for
rewriting.}
<<RWprepareTerm>>=
aterm *RWprepareTerm(arena *ar, aterm *t);
@ %def RWprepareTerm

%}}}
%{{{ RWprepareEqs

\Function{RWprepareEqs}{aterm\_list *}{arena *ar, aterm\_list *eqs}{Prepare a 
list of equations for rewriting.}
<<RWprepareEqs>>=
aterm_list *RWprepareEqs(arena *ar, aterm_list *eqs);
@ %def RWprepareEqs

%}}}
%{{{ RWrestoreTerm

\Function{RWrestoreTerm}{aterm *}{arena *ar, aterm *t}{Restore layout after
rewriting.}
<<RWrestoreTerm>>=
aterm *RWrestoreTerm(arena *ar, aterm *t);
@ %def RWrestoreTerm

%}}}

%{{{ AFfilterLayout

\Function{AFfilterLayout}{aterm\_list *}{arena *ar, aterm\_list *elems}{
Remove all layout from an asfix term.}
<<asfix layout>>=
aterm_list *AFfilterLayout(arena *ar, aterm_list *elems);
@
\FunDescr{This functions removes all elements of the form {\tt w(<str>)}
from elems.}

%}}}
%{{{ AFremoveLayout

\Function{AFremoveLayout}{aterm *}{aterm *t}{Remove
all layout from an asfix term.}
<<asfix layout>>=
aterm *AFremoveTermLayout(aterm *t);
@ %def AFremoveTermLayout

%}}}
