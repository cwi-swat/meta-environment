# Directory: compiler/c-source

# Configure variable substitutions
PRODUCT     = @PRODUCT@
VERSION     = @VERSION@

@SET_MAKE@

srcdir      = @srcdir@
VPATH       = @srcdir@
top_srcdir  = @top_srcdir@
prefix      = @prefix@
exec_prefix = @exec_prefix@
bindir		= @bindir@
libdir		= @libdir@
includedir  = $(prefix)/include
docdir      = $(top_srcdir)/docs

RANLIB      = @RANLIB@
SHELL       = @SHELL@
CC          = @CC@
CFLAGS      = @CFLAGS@ ${XCFLAGS}
CPP         = @CPP@
CPPFLAGS    = @CPP@ ${XCPPFLAGS}
DEFS        = @DEFS@ ${XDEFS}
INCLUDES    = @INCLUDES@ ${XINCLUDES}
LIBS        = @LIBS@ ${XLIBS}
SOCKLIBS    = @SOCKLIBS@ 

INSTALL     = @INSTALL@
INSTALL_DATA    = @INSTALL_DATA@
INSTALL_PROG    = @INSTALL_PROG@
UNINSTALL   = @UNINSTALL@

ATERM		= @ATERM@
ATERMBIN	= @ATERMBIN@
ATERMLIB	= @ATERMLIB@
ATERMINC	= @ATERMINC@

include Make.modules

XCFLAGS = ${INCLUDE}
INCLUDE = -I../support -I$(includedir) -I$(ATERMINC)
LIBS	= -L$(ATERMLIB)   \
	-L../support -L$(libdir) -lsupport-${CC} -lATerm-${CC}	\
	-lAsFix-${CC} -lATB-${CC} \
	$(SOCKLIBS) 
AR	= ar

BASE	= ..

FILES	:= $(notdir $(ASFIX))
NAMES   := $(patsubst %.asfix,%,$(FILES))
CSRC	:= $(patsubst %.asfix,%.c,$(FILES)) 
MODS	:= init.o $(patsubst %.asfix,%.o,$(FILES))
INIT	:= $(patsubst %.asfix,%();,$(FILES))
REGALL	:= $(patsubst %,register_%,$(INIT))
EREGALL	:= $(patsubst %,extern void register_%,$(INIT))
RESALL	:= $(patsubst %,resolve_%,$(INIT))
ERESALL := $(patsubst %,extern void resolve_%,$(INIT))
CLEANFILES = AsFix2C libasfix2c.a init.c

all: AsFix2C libasfix2c.a

AsFix2C : $(MODS)
	$(CC) -o AsFix2C $(MODS) $(LIBS)

libasfix2c.a: $(MODS)
	$(AR) cr libasfix2c.a $(MODS)
	$(RANLIB) $@

%.o: %.c
	$(CC) $(CFLAGS) -c $<

init.o: init.c

init.c:
	../mk-init.sh >> $@

clean: 
	rm -f *.o *~ $(CLEANFILES)

install: all
