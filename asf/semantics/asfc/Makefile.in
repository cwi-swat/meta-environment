# Directory: compiler

# Configure variable substitutions
PRODUCT		= @PRODUCT@
VERSION		= @VERSION@

@SET_MAKE@

srcdir		= @srcdir@
VPATH		= @srcdir@
top_srcdir	= @top_srcdir@
prefix		= @prefix@
exec_prefix	= @exec_prefix@
bindir		= @bindir@
libdir		= @libdir@
includedir	= $(prefix)/include
docdir		= $(top_srcdir)/docs

SHELL		= @SHELL@
CC		= @CC@
CFLAGS		= -O4 ${XCFLAGS}
CPP		= @CPP@
CPPFLAGS	= @CPP@ ${XCPPFLAGS}
DEFS		= @DEFS@ ${XDEFS}
INCLUDES	= @INCLUDES@ ${XINCLUDES}
LIBS		= @LIBS@ ${XLIBS}
SOCKLIBS	= @SOCKLIBS@ 

INSTALL		= @INSTALL@
INSTALL_DATA	= @INSTALL_DATA@
INSTALL_PROG	= @INSTALL_PROG@
UNINSTALL	= @UNINSTALL@

AR		= @AR@

ATERM		= @ATERM@
ATERMBIN	= @ATERMBIN@
ATERMLIB	= @ATERMLIB@
ATERMINC	= @ATERMINC@
TOOLBUS		= @TOOLBUS@
TOOLBUSBIN	= @TOOLBUSBIN@
TOOLBUSLIB	= @TOOLBUSLIB@
TOOLBUSINC	= @TOOLBUSINC@

# Implicit rules
include ${top_srcdir}/implicit-rules 

# The eXtra parts of some variables
XCFLAGS		=
XCPPFLAGS	=
XINCLUDES	= -I${top_srcdir}/asc-support -I$(ATERMINC)
XLIBS		= -L${top_srcdir}/asc-support -lasc-support-${CC} \
		  -Lc-source -lasfix2c \
		  -L$(ATERMLIB) -lATerm-${CC} -lAsFix-${CC} -lATB-${CC} \
		  $(SOCKLIBS)

# Other variables
# CSRC/CHDR are used to calculate dependencies.
#CSRC		= compiler.c compile-one-module.c
CSRC		= compiler.c 
CHDR		= compiler.tif.c compiler.tif.h
# All files in BINFILES are installed in $(bindir)
#BINFILES	= compiler compile-one-module 
BINFILES	= compiler 
# All files in LIBFILES are installed in $(libdir)
LIBFILES	=
# All files in INCLUDEFILES are installed in $(includedir)
INCLUDEFILES	=
# All files in DOCFILES are copied to $(docdir)
DOCFILES	=

# CLEANFILES are removed by 'make clean'
#CLEANFILES	= compiler compile-one-module compiler.tif.c compiler.tif.h
CLEANFILES	=  *.o *~ ${BINFILES}
# DISTCLEANFILES are removed by 'make distclean'
DISTCLEANFILES	= Makefile compiler.tif.c compiler.tif.h

SUBDIRS		= c-source support-muasf

# The all target must be defined:
all: depend subdirs $(BINFILES) $(LIBFILES) $(INCLUDEFILES)

subdirs:
	@for dir in $(SUBDIRS); \
	do \
		echo "make all in $$dir"; \
		cd $$dir; ${MAKE} all; \
		cd ..; \
	done

# Explicit rules
# example: 'mytest.c: mytest.c.nw'

compiler.tif.h: $(top_srcdir)/toolbus/meta.tifs
	$(ATERMBIN)/tifstoc -tool compiler $(top_srcdir)/toolbus/meta.tifs

compiler: compiler.o compiler.tif.o 
	$(CC) -o compiler compiler.o compiler.tif.o $(LIBS)

#compile-one-module: compile-one-module.o
#	$(CC) -o compile-one-module compile-one-module.o $(LIBS)

##########################################################
### Everything below this line should remain unchanged ###
##########################################################

# install target (install binaries, include files, and libraries)
install: all
	mkdir -p $(bindir) $(libdir) $(includedir)
	@$(INSTALL_PROG) $(INSTALL) $(bindir) $(BINFILES)
	@$(INSTALL_DATA) $(INSTALL) $(libdir) $(LIBFILES)
	@$(INSTALL_DATA) $(INSTALL) $(includedir) $(INCLUDEFILES)
	@for DIR in $(SUBDIRS); \
	do \
	   echo Make $@ in $$DIR; \
	   cd $$DIR; \
	   $(MAKE) $@; \
	   cd ..; \
	done


# uninstall target (remove all files installed by 'install' target)
uninstall:
	@$(UNINSTALL) $(bindir) $(BINFILES)
	@$(UNINSTALL) $(libdir) $(LIBFILES)
	@$(UNINSTALL) $(includedir) $(INCLUDEFILES)
	@for DIR in $(SUBDIRS); \
	do \
	   echo Make $@ in $$DIR; \
	   cd $$DIR; \
	   $(MAKE) $@; \
	   cd ..; \
	done

# doc target (copy generated documentation files to $(docdir))
doc: $(DOCFILES)
	@$(INSTALL_DATA) $(INSTALL) $(docdir) $(DOCFILES)

# clean target (remove all easily build components and temporary files)
clean:
	rm -f $(CLEANFILES)
	@for DIR in $(SUBDIRS); \
	do \
	   echo Make $@ in $$DIR; \
	   cd $$DIR; \
	   $(MAKE) $@; \
	   cd ..; \
	done

# distclean target (also remove any files created by 'configure')
distclean: clean
	rm -f $(DISTCLEANFILES)

# distclean target


# Updating of included dependencies (CC needs to be gcc!)
depend: $(CSRC)
	@$(CC) -MM $(CFLAGS) $(INCLUDES) $(CSRC) > depend

# Included dependencies
-include depend

