#
# $Id$
#   Date: 3/19/1998
# Author: Merijn de jonge
#
# This script generates on standard output a Makefile suitable to compile
# the C code corresponding to a compiled specification.
#
# usage:
#    genmakefile <target>
#
# where <target> is the name of the desired stand-alone executable program.
#
# The generated Makefile understands the following targets:
#
# all, or <target>        This will build <target>
# debug                   This will build <target>-db (i.e., a
#                         stand-alone program suitable for debugging)
# profile                 This will build <target>-prof (i.e., a
#                         stand-alone program suitable for profiling)
# clean                   This will remove <target>, <target>-db
#                         <target>-prof, *.o init.c
#
#
# You might want to change to following variables below:
# 
#       DEBUG_LIBS: libraries containing debugging information
#   DEBUG_CC_FLAGS: compiler flags to store debugging information in object files
#   DEBUG_LD_FLAGS: optional flags for linking with debugging information
#       DEBUG_COMP: compiler to use
#     PROFILE_LIBS: libraries containing profile information
# PROFILE_CC_FLAGS: compiler flags to store profile information in object files
# PROFILE_LD_FLAGS: optional flags for linking profiled object code
#     PROFILE_COMP: compiler to use

      DEBUG_LIBS="-lasfix-dbg -laterm-dbg"
  DEBUG_CC_FLAGS=-g
  DEBUG_LD_FLAGS=
      DEBUG_COMP=gcc
    PROFILE_LIBS="-lasfix-prof -laterm-prof"
PROFILE_CC_FLAGS=-pg
PROFILE_LD_FLAGS=-pg
    PROFILE_COMP=gcc

## No changes below

# display usage message
usage() 
{
   cat<<ENDCAT
$0 
   generates on standard output a Makefile for the compilation of the
   C code corresponding to a compiled specification.


usage:
$0 [-h] <target>
   where <target> is the name of the desired stand-alone executable program.

ENDCAT
}


# parse command line
if [ $# -ne 1 ]
then
   usage
   exit 1
fi

if [ $1 = "-h" -o $1 = "-help" ]
then
   usage
   exit 0 
fi


cat <<ENDCAT 
# Makefile for target "$1" generated automatically on `date`
#

# DEBUG-LIBS:     libraries containing debugging information
# DEBUG-CC-FLAGS: compiler flags to store debugging information in object files
# DEBUG-LD-FLAGS: optional flags for linking with debugging information
# DEBUG-COMP:     compiler to use
DEBUG-LIBS     = ${DEBUG_LIBS}
DEBUG-CC-FLAGS = ${DEBUG_CC_FLAGS}
DEBUG-LD-FLAGS = ${DEBUG_LD_FLAGS}
DEBUG-COMP     = ${DEBUG_COMP}

# PROFILE-LIBS:     libraries containing profile information
# PROFILE-CC-FLAGS: compiler flags to store profile information in object files
# PROFILE-LD-FLAGS: optional flags for linking profiled object code
# PROFILE-COMP:     compiler to use
PROFILE-LIBS     = ${PROFILE_LIBS}
PROFILE-CC-FLAGS = ${PROFILE_CC_FLAGS}
PROFILE-LD-FLAGS = ${PROFILE_LD_FLAGS}
PROFILE-COMP     = ${PROFILE_COMP}


# There should be no need to change anything below

prefix          = @prefix@ 
exec_prefix     = @exec_prefix@
bindir          = $(exec_prefix)/bin
libdir          = $(exec_prefix)/lib
includedir      = $(prefix)/include

SHELL           = @SHELL@
CC              = @CC@
CPP             = @CPP@
CPPFLAGS        = @CPP@ $(XCPPFLAGS)
DEFS            = @DEFS@ $(XDEFS)
INCLUDES        = @INCLUDES@ $(XINCLUDES)
LIBS            = @LIBS@ $(XLIBS)
SOCKLIBS        = @SOCKLIBS@
GELLIBS         = @GELLIBS@

GEL             = @GEL@
ATERM           = @ATERM@
TOOLBUS         = @TOOLBUS@

XINCLUDES       = -I$(ATERM)/include -I$(includedir)
XLIBS           = -L$(prefix)/lib -L$(ATERM)/lib -lsupport -ltoolbus\\
                  $(VAR-LIBS) $(SOCKLIBS) $(GELLIBS)
VAR-LIBS        = -lasfix -laterm
VAR-FLAGS       = @CFLAGS@ $(XCFLAGS)

SRCS=\\
`ls AUX*.c | sed 's/^/     /g'|fmt | sed 's/$/ \\\\/g'`
     init.c

OBJS=$(SRCS:.c=.o)

# Make rules 
.c.o:
	$(CC) $(CFLAGS) $(VAR-FLAGS) $(DEFS) $(INCLUDES) -c $< -o \$@

$1 : $(OBJS)
	$(CC) $(LDFLAGS) -o $1 $(OBJS) $(LIBDIR) $(LIBS) 

debug:
	$(MAKE) $1-db CC="$(DEBUG-COMP)" VAR-FLAGS="$(DEBUG-FLAGS)" VAR-LIBS="$(DEBUG-LIBS)"

profile:
	$(MAKE) $1-prof CC="$(PROFILE-COMP)" VAR-FLAGS="$(PROFILE-CC-FLAGS)" VAR-LIBS="$(PROFILE-LIBS)"

$1-db : $(OBJS)
	$(CC) $(LDFLAGS) $(DEBUG-LD-FLAGS) -o $1-db $(OBJS) $(LIBDIR) $(LIBS) 

$1-prof : $(OBJS)
	$(CC) $(LDFLAGS) $(PROFILE-LD-FLAGS) -o $1-prof $(OBJS) $(LIBDIR) $(LIBS) 


init.c:
	(echo "/*GENERATED AUTOMATICALLY, DO NOT MODIFY */" ;\\
	NAMES=\`ls AUX*.c | sed 's/.c\$\$//g;s/-/_/g'\`; export NAMES ;\\
	for file in \$\${NAMES}; do \\
		echo "extern void register_\$\$file();" ;\\
		echo "extern void resolve_\$\$file();"  ;\\
	done ;\\
	echo "void register_all() {" ;\\
	for file in \$\${NAMES}; do \\
		echo "  register_\$\$file();" ;\\
	done ;\\
	echo "}" ;\\
	echo "void resolve_all() {" ;\\
	for file in \$\${NAMES}; do \\
		echo "  resolve_\$\$file();"  ;\\
	done ;\\
	echo "}" ) > \$@

clean:
	$(RM) $(OBJS) init.c $1 $1-db $1-prof
ENDCAT
