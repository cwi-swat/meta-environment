/* This C code is generated by the AsfSdfCompiler version 0.1 */

#include  "asc-support.h"
static Symbol lf_AUX_Pico_Booleans2_1sym ;
static ATerm lf_AUX_Pico_Booleans2_1 ( ATerm arg1 , ATerm arg2 ) ;
static Symbol ef1sym ;
static funcptr ef1 ;
static Symbol ef2sym ;
static funcptr ef2 ;
void register_AUX_Pico_Booleans2 ( ) {
lf_AUX_Pico_Booleans2_1sym = ATmakeSymbol ( "prod(id(\"Pico-Booleans\"),w(\"\"),[sort(\"PICO-BOOL\"),w(\"\"),ql(\"|\"),w(\"\"),sort(\"PICO-BOOL\")],w(\"\"),l(\"->\"),w(\"\"),sort(\"PICO-BOOL\"),w(\"\"),attrs(l(\"{\"),w(\"\"),[l(\"left\"),w(\"\"),sep(\",\"),w(\"\"),l(\"memo\")],w(\"\"),l(\"}\")))"
 , 2 , ATtrue ) ;
ATprotectSymbol ( lf_AUX_Pico_Booleans2_1sym ) ;
register_prod ( ATparse ( "prod(id(\"Pico-Booleans\"),w(\"\"),[sort(\"PICO-BOOL\"),w(\"\"),ql(\"|\"),w(\"\"),sort(\"PICO-BOOL\")],w(\"\"),l(\"->\"),w(\"\"),sort(\"PICO-BOOL\"),w(\"\"),attrs(l(\"{\"),w(\"\"),[l(\"left\"),w(\"\"),sep(\",\"),w(\"\"),l(\"memo\")],w(\"\"),l(\"}\")))" ) , lf_AUX_Pico_Booleans2_1 , lf_AUX_Pico_Booleans2_1sym ) ;
}
void resolve_AUX_Pico_Booleans2 ( ) {
ef1 = lookup_func ( ATreadFromString ( "prod(id(\"Pico-Booleans\"),w(\"\"),[ql(\"true\")],w(\"\"),l(\"->\"),w(\"\"),sort(\"PICO-BOOL\"),w(\"\"),no-attrs)" ) ) ;
ef1sym = lookup_sym ( ATreadFromString ( "prod(id(\"Pico-Booleans\"),w(\"\"),[ql(\"true\")],w(\"\"),l(\"->\"),w(\"\"),sort(\"PICO-BOOL\"),w(\"\"),no-attrs)" ) ) ;
ef2 = lookup_func ( ATreadFromString ( "prod(id(\"Pico-Booleans\"),w(\"\"),[ql(\"false\")],w(\"\"),l(\"->\"),w(\"\"),sort(\"PICO-BOOL\"),w(\"\"),no-attrs)" ) ) ;
ef2sym = lookup_sym ( ATreadFromString ( "prod(id(\"Pico-Booleans\"),w(\"\"),[ql(\"false\")],w(\"\"),l(\"->\"),w(\"\"),sort(\"PICO-BOOL\"),w(\"\"),no-attrs)" ) ) ;
}
static ATermTable table_lf_AUX_Pico_Booleans2_1 ;
void init_AUX_Pico_Booleans2 ( ) {
create_table ( table_lf_AUX_Pico_Booleans2_1 , 0 ) ;
}
ATerm lf_AUX_Pico_Booleans2_1 ( ATerm arg0 , ATerm arg1 ) {
ATerm interm = make_tuple2 ( arg0 , arg1 ) ;
ATermTable table = get_table ( table_lf_AUX_Pico_Booleans2_1 ) ;
ATerm result = get_result ( table , interm ) ;
if ( result ) return result ;
else {
if ( check_sym ( arg0 , ef1sym ) ) {
( result = arg0 ) ;
put_result ( table , interm , result ) ;
return result ;
}
if ( check_sym ( arg0 , ef2sym ) ) {
( result = arg1 ) ;
put_result ( table , interm , result ) ;
return result ;
}
FUNC_EXIT ( make_nf2 ( lf_AUX_Pico_Booleans2_1sym , arg0 , arg1 ) ) ;
}
}

