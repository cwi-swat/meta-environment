/* This C code is generated by the AsfSdfCompiler version 1.3 */

#include  "asc-support.h"
static Symbol lf_AUX_Set3_1sym ;
static ATerm lf_AUX_Set3_1 ( ATerm arg1 , ATerm arg2 ) ;
static Symbol ef1sym ;
static funcptr ef1 ;
static Symbol lf2sym ;
static ATerm lf2 ( ATerm arg1 ) ;
void register_AUX_Set3 ( ) {
lf_AUX_Set3_1sym = ATmakeSymbol ( "prod(id(\"Set\"),w(\"\"),[ql(\"filter\"),w(\"\"),sort(\"E\"),w(\"\"),ql(\"from\"),w(\"\"),sort(\"S\")],w(\"\"),l(\"->\"),w(\"\"),sort(\"S\"),w(\"\"),no-attrs)"
 , 2 , ATtrue ) ;
ATprotectSymbol ( lf_AUX_Set3_1sym ) ;
lf2sym = ATmakeSymbol ( "listtype(sort(\"E\"))" , 1 , ATtrue ) ;
ATprotectSymbol ( lf2sym ) ;
register_prod ( ATparse ( "prod(id(\"Set\"),w(\"\"),[ql(\"filter\"),w(\"\"),sort(\"E\"),w(\"\"),ql(\"from\"),w(\"\"),sort(\"S\")],w(\"\"),l(\"->\"),w(\"\"),sort(\"S\"),w(\"\"),no-attrs)" ) , lf_AUX_Set3_1 , lf_AUX_Set3_1sym ) ;
register_prod ( ATparse ( "listtype(sort(\"E\"))" ) , lf2 , lf2sym ) ;
}
void resolve_AUX_Set3 ( ) {
ef1 = lookup_func ( ATreadFromString ( "prod(id(\"Set\"),w(\"\"),[ql(\"[\"),w(\"\"),iter(sort(\"E\"),w(\"\"),l(\"*\")),w(\"\"),ql(\"]\")],w(\"\"),l(\"->\"),w(\"\"),sort(\"S\"),w(\"\"),attrs(l(\"{\"),w(\"\"),[l(\"constructor\")],w(\"\"),l(\"}\")))" ) ) ;
ef1sym = lookup_sym ( ATreadFromString ( "prod(id(\"Set\"),w(\"\"),[ql(\"[\"),w(\"\"),iter(sort(\"E\"),w(\"\"),l(\"*\")),w(\"\"),ql(\"]\")],w(\"\"),l(\"->\"),w(\"\"),sort(\"S\"),w(\"\"),attrs(l(\"{\"),w(\"\"),[l(\"constructor\")],w(\"\"),l(\"}\")))" ) ) ;
}
void init_AUX_Set3 ( ) {
}
ATerm lf_AUX_Set3_1 ( ATerm arg0 , ATerm arg1 ) {
{
ATerm tmp [ 1 ] ;
FUNC_ENTRY ( lf_AUX_Set3_1sym , ATmakeAppl ( lf_AUX_Set3_1sym , arg0 , arg1 ) ) ;
{
ATerm ltmp [ 2 ] ;
lbl_lf_AUX_Set3_1 : ltmp [ 0 ] = arg0 ;
( ltmp [ 1 ] = arg1 ) ;
if ( check_sym ( ltmp [ 1 ] , ef1sym ) ) {
{
ATerm atmp10 = arg_0 ( arg1 ) ;
if ( check_sym ( atmp10 , lf2sym ) ) {
( tmp [ 0 ] = arg_0 ( atmp10 ) ) ;
{
ATerm atmp10010 ;
ATerm atmp1000 [ 2 ] ;
( atmp1000 [ 0 ] = tmp [ 0 ] ) ;
( atmp1000 [ 1 ] = tmp [ 0 ] ) ;
while ( not_empty_list ( tmp [ 0 ] ) ) {
( atmp10010 = list_head ( tmp [ 0 ] ) ) ;
( tmp [ 0 ] = list_tail ( tmp [ 0 ] ) ) ;
if ( term_equal ( ltmp [ 0 ] , atmp10010 ) ) {
( arg1 = make_nf1 ( ef1sym , lf2 ( cons ( slice ( atmp1000 [ 0 ] , atmp1000 [ 1 ] ) , tmp [ 0 ] ) ) ) ) ;
goto lbl_lf_AUX_Set3_1 ;
}
( atmp1000 [ 1 ] = list_tail ( atmp1000 [ 1 ] ) ) ;
( tmp [ 0 ] = atmp1000 [ 1 ] ) ;
}
}
}
}
}
FUNC_EXIT ( ltmp [ 1 ] ) ;
FUNC_EXIT ( make_nf2 ( lf_AUX_Set3_1sym , ltmp [ 0 ] , ltmp [ 1 ] ) ) ;
}
}
}
ATerm lf2 ( ATerm arg0 ) {
CONS_ENTRY ( lf2sym , ATmakeAppl ( lf2sym , arg0 ) ) ;
CONS_EXIT ( make_nf1 ( lf2sym , arg0 ) ) ;
}

