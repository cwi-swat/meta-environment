%%  Normalize-Conds

imports MuASF-Equations-Ops

exports
  context-free syntax
    normalize-conditions(Module) -> Module
    normalize-list-in-rule(Rule)  -> Rule

hiddens
  context-free syntax
    normalize-rulesopt(RulesOpt)  -> RulesOpt
    normalize-rules({Rule ";"}*)  -> RuleList
    normalize-rule(Rule)          -> Rule

hiddens
  sorts TC-tuple
  context-free syntax
    "(" {Term ","}* "," {Cond "&"}* "," IntCon")" -> TC-tuple
  context-free syntax
    normalize-conds({Cond "&"}+,IntCon)          -> TC-tuple
    normalize-cond(Cond,IntCon)                  -> TC-tuple
    normalize-list-in-conds({Cond "&"}+,IntCon)  -> TC-tuple
    normalize-list-in-cond(Cond,IntCon)          -> TC-tuple
  context-free syntax
    normalize-terms({Term ","}+,IntCon)         -> TC-tuple
    normalize-term(Term,IntCon)                 -> TC-tuple
    normalize-list-in-term(Term,IntCon)         -> TC-tuple
    normalize-list-in-terms({Term ","}+,IntCon) -> TC-tuple
    normalize-list-arg(Term,IntCon)             -> TC-tuple
    normalize-list-args({Term ","}+,IntCon)     -> TC-tuple

%%%exports
%%%  context-free syntax
%%%    transform-list-rule(Rule,AInt) -> FuncRuleTuple

%%%hiddens
%%%  context-free syntax
%%%    transform-list-conds(Term,{Cond "&"}+,
%%%                           {Cond "&"}*,Term,Term,AInt) -> FuncRuleTuple
hiddens
  variables
    Char[0-9]*       -> CHAR
    Char[\*][0-9]*   -> CHAR*
    Char[\+][0-9]*   -> CHAR+
