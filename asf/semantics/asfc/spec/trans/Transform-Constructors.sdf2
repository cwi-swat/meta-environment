%%
%%    Meta-Environment - An environment for language prototyping.
%%    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 
%%
%%    This program is free software; you can redistribute it and/or modify
%%    it under the terms of the GNU General Public License as published by
%%    the Free Software Foundation; either version 2 of the License, or
%%    (at your option) any later version.
%%
%%    This program is distributed in the hope that it will be useful,
%%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%%    GNU General Public License for more details.
%%
%%    You should have received a copy of the GNU General Public License
%%    along with this program; if not, write to the Free Software
%%    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
%%
module Transform-Constructors

imports VarEnv MuASF-Equations-Ops

exports
  context-free syntax
    transform-constructor-terms-in-rules({Rule ";"}*,{NamePair ","}*)     -> RuleList
hiddens
  sorts TCE TsCE
  context-free syntax
    "[" Term "," {Cond "&"}* "," IntCon "]"                      -> TCE
    "[" {Term ","}* "," {Cond "&"}* "," IntCon "]"               -> TsCE
    move-cons-terms-in-rule(Rule,{NamePair ","}*)                -> Rule
    move-cons-terms-in-terms({Term ","}+,{NamePair ","}*,IntCon) -> TsCE
    move-cons-terms-in-term(Term,{NamePair ","}*,IntCon)         -> TCE
    are-constructor-terms({Term ","}+,{NamePair ","}*)           -> Bool
    is-constructor-term(Term,{NamePair ","}*)                    -> Bool

hiddens
  variables
    "Char*"[0-9]*  -> CHAR*
    "Char+"[0-9]*  -> CHAR+
