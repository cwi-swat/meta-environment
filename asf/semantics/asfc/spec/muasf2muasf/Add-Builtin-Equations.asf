equations

[] Rule*2 := abe(Funcdef*)
   ===>
   add-builtin-equations(module Modid signature Funcdef* rules Rule*) =
     module Modid signature Funcdef* rules Rule*; Rule*2


[] abe(Funid { Term*1, type(Type), Term*2, built-in(funid("""Char*""")), Term*3 }) =
     Funid = innermost(remove-dashes(funid("A""S""C""_"Char*)(parse_sort(Type))))

[] Term+ := make-arg-list(Sigarg+,0)
   ===>
   abe(Funid ( Sigarg+ ) { Term*1, type(Type), Term*2,  built-in(funid(""" Char* """)), Term*3}) =
     Funid ( Term+ ) = innermost (remove-dashes(funid("A""S""C""_"Char*))(parse_sort(Type), Term+ ))

[] Rule*1 := abe(Funcdef),
   Rule*2 := abe(Funcdef+)
   ===>
   abe(Funcdef; Funcdef+) = Rule*1; Rule*2

[default-abe]
   abe(Funcdef*) =

[remove-dashes-0]
remove-dashes(funid(Char*1 "-" Char*2)) = 
remove-dashes(funid(Char*1 "_" Char*2))

[default-remove-dashed]
remove-dashes(Funid) = Funid



