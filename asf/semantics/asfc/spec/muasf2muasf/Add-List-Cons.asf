equations

[alc]
add-list-cons(Module) = alc-module(Module)

[alc-0]
alc-rules(Rulesopt) = Rulesopt2
===>
alc-module(module Modid Signopt Rulesopt) = module Modid Signopt Rulesopt2

[alc-1]
alc-rulesopt() =

[alc-2]
alc-rulelist(Rulelist) = Rulelist2
===>
alc-rulesopt(rules Rulelist) = rules Rulelist2

[alc-3]
alc-rulelist() =

[alc-4] alc-rulelist(Rule) = alc-rule(Rule)

[alc-5]
alc-rule(Rule) = Rule2,
alc-rulelist(Rule*) = Rule*2
===>
alc-rulelist(Rule; Rule*) = Rule2; Rule*2

[alc-6]
alc-term(Term1) = Term3,
alc-term(Term2) = Term4
===>
alc-rule(Term1 = Term2) = Term3 = Term4

[alc-7]
alc-term(Term1) = Term3,
alc-term(Term2) = Term4
===>
alc-rule(default: Term1 = Term2) = default: Term3 = Term4

[alc-8]
alc-term(Term1) = Term3,
alc-term(Term2) = Term4,
alc-condlist(Condlist) = Condlist2
===>
alc-rule(Condlist ==> Term1 = Term2) = Condlist2 ==> Term3 = Term4

[alc-9]
alc-term(Term1) = Term3,
alc-term(Term2) = Term4,
alc-condlist(Condlist) = Condlist2
===>
alc-rule(default: Condlist ==> Term1 = Term2) = default: Condlist2 ==> Term3 = Term4

[alc-10]
is-list-funid(Funid) = true,
alc-termlist(Term+) = Term+2,
list-to-conslist(Term+2) = Term
===>
alc-term(Funid(Term+)) = Funid(Term)

[alc-11]
is-list-funid(Funid) = false,
alc-termlist(Term+) = Term+2
===>
alc-term(Funid(Term+)) = Funid(Term+2)

[alc-12]
alc-term(Funid) = Funid

[alc-13]
alc-term(Var) = Var

[alc-13]
alc-termlist(Term) = alc-term(Term)


[alc-14]
alc-term(Term) = Term2,
alc-termlist(Term+) = Term+2
===>
alc-termlist(Term, Term+) = Term2, Term+2

[l2cl-0]
list-to-conslist() = null

[l2cl-1]
list-to-conslist(Term+) = Term2
===>
list-to-conslist(Term, Term+) = cons(Term, Term2)

[l2cl-2]
list-to-conslist(Term) = cons(Term2, null)