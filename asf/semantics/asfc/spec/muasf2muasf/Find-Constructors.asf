equations

[find-constr] 
fc-funcdeflist(Funcdef*,Rule*,Nametable) = <Funcdef*2, Nametable2>
===>
find-constructors(module Modid signature Funcdef* rules Rule*,Nametable) =
(module Modid signature Funcdef*2 rules Rule*, Nametable2)

[fc-0]
fc-funcdeflist(,Rule*,Nametable) = <,Nametable>

[fc-1]
fc-funcdef(Funcdef,Rule*,Nametable) = <Funcdef2,Nametable2>,
fc-funcdeflist(Funcdef*,Rule*,Nametable2) = <Funcdef*2,Nametable3>
===>
fc-funcdeflist(Funcdef; Funcdef*,Rule*,Nametable) =
<Funcdef2; Funcdef*2, Nametable3>

[fc-2]
has-rule(Funcdef,Rule*)               = false,
is-builtin(Funcdef)                   = false,
add-attr(Funcdef,constructor)         = Funcdef2,
get-funcdef-funid(Funcdef) = Funid,
add-attr(Funid,Nametable,constructor) = Nametable2
===>
fc-funcdef(Funcdef,Rule*,Nametable) = <Funcdef2, Nametable2>

[fc-3]
has-rule(Funcdef,Rule*) = true
===>
fc-funcdef(Funcdef,Rule*,Nametable) = <Funcdef, Nametable>

[hr]
has-rule(Funcdef, ) = false

[hr]
get-funcdef-funid(Funcdef) = get-funid(Rule)
===>
has-rule(Funcdef,Rule; Rule*) = true

[default-hr]
has-rule(Funcdef,Rule; Rule*) = has-rule(Funcdef,Rule*)

[aca-sig]
add-attr(Funid,Term) = Funid {Term}

[aca-sig]
add-attr(Funid(Sigarg+),Term) = Funid(Sigarg+) {Term}

[aca-sig]
add-attr(Funid { Term*1, Term, Term*2 },Term) = Funid { Term*1, Term, Term*2}

[default-aca-sig]
add-attr(Funid { Term+ },Term) = Funid { Term, Term+}

[aca-sig]
add-attr(Funid(Sigarg+) { Term*1, Term, Term*2 }, Term) = 
Funid(Sigarg+) {Term*1, Term, Term*2}

[default-aca-sig]
add-attr(Funid(Sigarg+) { Term+ }, Term) = 
Funid(Sigarg+) {Term, Term+}

[aca-nt]
Nametable = (Namepair*1,(Funid, Funid1, Term*), Namepair*2,Funid0,Aint0,Aint1)
===>
add-attr(Funid1,Nametable,Term) = 
(Namepair*1,(Funid,Funid1,Term,Term*),Namepair*2,Funid0,Aint0,Aint1)

[default-aca-nt]
add-attr(Funid,Nametable) = Nametable

[ib-0]
is-builtin(Funid { Term*1, built-in(Term), Term*2 }) = true

[ib-1]
is-builtin(Funid (Sigarg+) { Term*1, built-in(Term), Term*2 }) = true

[default-ib]
is-builtin(Funcdef) = false