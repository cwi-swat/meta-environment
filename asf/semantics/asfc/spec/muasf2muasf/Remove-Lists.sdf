%%
%% The module {\tt Remove-Lists} takes care of the
%% transformation of rewrite rules with list
%% matching into rewrite rules without
%% list matching. The current specification only
%% deals with list constructs in which at most one list
%% variable occurs.

module muasf2muasf/Remove-Lists

imports muasf/RenameVars
imports muasf2muasf/Normalize-Conds
imports muasf2muasf/Trans-Set-Pats
 

exports
  context-free syntax
    remove-list-matching(Module) -> Module

hiddens
  context-free syntax
    rem-lists-from-ruleopt(RulesOpt)           -> FuncRulePair
    rem-lists-from-rules({Rule ";"}*,IntCon)     -> FuncRuleTuple
    rem-lists-from-rule(Rule,IntCon)             -> FuncRuleTuple
    rem-listvars-from-rules({Rule ";"}*,IntCon)  -> FuncRuleTuple
    rem-listvars-from-rule(Rule,IntCon)          -> FuncRuleTuple
    rem-lists-from-simple-rule(Bool,Rule,IntCon) -> FuncRuleTuple
    rem-lists-from-default-rule(Rule,IntCon)     -> FuncRuleTuple
    remove-simple-lists(Rule)                  -> Rule

  context-free syntax
    rem-lists-from-lhs-term(Term,IntVarEnv)             -> Term-CList-VarEnv
    rem-lists-from-lhs-terms({Term ","}+,IntVarEnv)     -> Term-CList-VarEnv
    rem-lists-from-rhs-term(Term,IntVarEnv)             -> Term-CList-VarEnv
    rem-lists-from-rhs-terms({Term ","}+,IntVarEnv)     -> Term-CList-VarEnv
    rem-lists-from-cond(Cond,IntVarEnv)                 -> CList-VarEnv
    rem-lists-from-conds({Cond "&"}+,IntVarEnv)         -> CList-VarEnv
    transform-lhs-list-terms({Term ","}+,IntVarEnv)     -> Term-CList-VarEnv
    transform-rhs-list-terms({Term ","}+,IntVarEnv)     -> Term-CList-VarEnv
    transform-no-list-terms({Term ","}+,IntVarEnv)      -> Term-CList-VarEnv
    transform-lhs-list-var(Term,IntVarEnv)              -> Term-CList-VarEnv
    transform-rhs-list-var(Term,IntVarEnv)              -> Term-CList-VarEnv
    transform-lhs-single-term({Term ","}+,IntVarEnv)    -> Term-CList-VarEnv
    transform-lhs-double-terms({Term ","}+,IntVarEnv)   -> Term-CList-VarEnv
    transform-lhs-multiple-terms({Term ","}+,IntVarEnv) -> Term-CList-VarEnv
