%%
%%    Meta-Environment - An environment for language prototyping.
%%    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 
%%
%%    This program is free software; you can redistribute it and/or modify
%%    it under the terms of the GNU General Public License as published by
%%    the Free Software Foundation; either version 2 of the License, or
%%    (at your option) any later version.
%%
%%    This program is distributed in the hope that it will be useful,
%%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%%    GNU General Public License for more details.
%%
%%    You should have received a copy of the GNU General Public License
%%    along with this program; if not, write to the Free Software
%%    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
%%
equations

  %%%[nws-1'1] nws-print(T) = print(remove-all-ws(T))
  [nws-1'1] nws-print(T) = print(change-all-ws(T))

  [printX] print(w) = "w"
  [printX] print(l) = "l"
  [printX] print(sort) = "sort"
  [printX] print(iter) = "iter"
  [printX] print(iter-sep) = "iter-sep"

  [printX] print(abbrevs)                 = "abbrevs"
  [printX] print(Abbreviations)           = "Abbreviations"
  [printX] print(abbreviations)           = "abbreviations"
  [printX] print(agroup)          = "agroup"
  [printX] print(appl)            = "appl"
  [printX] print(aprod)           = "aprod"

[printX] print(args)            = "args"
[printX] print(AsFix)           = "AsFix"
[printX] print(asfix)           = "asfix"
[printX] print(AsFixTerm)               = "AsFixTerm"
[printX] print(Assoc)           = "Assoc"
[printX] print(assoc)           = "assoc"

[printX] print(Attribute)               = "Attribute"
[printX] print(Attributes)              = "Attributes"
[printX] print(attr)            = "attr"
[printX] print(attrs)           = "attrs"
[printX] print(ceq-equ)                 = "ceq-equ"
[printX] print(ceq-impl)                = "ceq-impl"
[printX] print(ceq-when)                = "ceq-when"
[printX] print(CharClass)               = "CharClass"
[printX] print(char-class)              = "char-class"
[printX] print(chars)           = "chars"
[printX] print(CondEquation)            = "CondEquation"
[printX] print(cond-equations)          = "cond-equations"
[printX] print(Condition)               = "Condition"
[printX] print(condition)               = "condition"
[printX] print(conditions)              = "conditions"
[printX] print(context-free-syntax)     = "context-free-syntax"
[printX] print(cop)             = "cop"
[printX] print(decr-chain)      = "decr-chain"
[printX] print(elems)           = "elems"
[printX] print(Equations)       = "Equations"
[printX] print(equations)       = "equations"
[printX] print(exports)         = "exports"
[printX] print(ExtAsFixTerm)    = "ExtAsFixTerm"
[printX] print(fun)             = "fun"
[printX] print(Grammar)         = "Grammar"
[printX] print(grammars)        = "grammars"
[printX] print(Group)           = "Group"
[printX] print(group)           = "group"
[printX] print(groups)          = "groups"
[printX] print(hiddens)         = "hiddens"
[printX] print(Id)              = "Id"
[printX] print(id)              = "id"
[printX] print(ids)             = "ids"
[printX] print(Imports)         = "Imports"
[printX] print(imports)         = "imports"
[printX] print(impl)            = "impl"
[printX] print(incr-chain)      = "incr-chain"

[printX] print(label)           = "label"
[printX] print(left)            = "left"
[printX] print(lex)             = "lex"

[printX] print(lexical-syntax)  = "lexical-syntax"
[printX] print(lhs)             = "lhs"
[printX] print(Literal)         = "Literal"
[printX] print(modules)         = "modules"
[printX] print(Module)          = "Module"
[printX] print(module)          = "module"
[printX] print(module-name)     = "module-name"
[printX] print(name)            = "name"
[printX] print(neg)             = "neg"
[printX] print(no-attrs)        = "no-attrs"
[printX] print(no-equations)    = "no-equations"
[printX] print(priorities)      = "priorities"
[printX] print(Pair)            = "Pair"
[printX] print(pairs)           = "pairs"
[printX] print(Priority)        = "Priority"
[printX] print(prio-assoc)      = "prio-assoc"
[printX] print(prod)            = "prod"
[printX] print(prods)           = "prods"
[printX] print(prod-skel)       = "prod-skel"
[printX] print(ProdSkel)        = "ProdSkel"
[printX] print(Production)      = "Production"
[printX] print(productions)     = "productions"
[printX] print(QLiteral)        = "QLiteral"
[printX] print(ql)              = "ql"
[printX] print(rhs)             = "rhs"
[printX] print(right)           = "right"
[printX] print(Sort)            = "Sort"
[printX] print(sorts)           = "sorts"
[printX] print(Section)         = "Section"
[printX] print(sections)        = "sections"
[printX] print(sep)             = "sep"
[printX] print(Separator)       = "Separator"
[printX] print(sym)             = "sym"
[printX] print(syms)            = "syms"
[printX] print(Symbol)          = "Symbol"
[printX] print(symbol)          = "symbol"
[printX] print(tag)             = "tag"
[printX] print(terms)           = "terms"
[printX] print(Term)            = "Term"
[printX] print(term)            = "term"
[printX] print(text)            = "text"
[printX] print(uses)            = "uses"
[printX] print(variables)       = "variables"
[printX] print(var)             = "var"


[printX] print(list)            = "list"
