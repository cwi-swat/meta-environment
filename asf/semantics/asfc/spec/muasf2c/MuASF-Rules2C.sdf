module MuASF-Rules2C

imports RenameVars Improve-C-code Transform-Constructors Locate-Constants

exports
  context-free syntax
    rulesopt2cfuncs(ModId,{FuncDef ";"}*,RulesOpt,NameTable)  -> FT-tuple
    sigargs2cstats(FunId,{SigArg ","}*)                 -> Statement-list-opt
    funargs2cstats(FunId,Argument-expression-list,TermList,{NamePair ","}*, IntCon) -> 
        SlI-tuple

hiddens
  context-free syntax
    restore-ignored-funids-in-nf(Argument-expression-list, TermList, {NamePair ","}*) -> 
                                                              Argument-expression-list
    restore-ignored-funids-in-arg(Expression, Term, {NamePair ","}*) -> Expression 
    lookup-ignored-funid(FunId, {NamePair ","}*) -> FunId

  context-free syntax
    asfrules2cfuncs({FuncDef ";"}*,{Rule ";"}+,
                    {NamePair ","}*)                   -> FT-tuple
    asfrules2cfuncs({FuncDef ";"}*,{Rule ";"}*,
                    {Rule ";"}*,{NamePair ","}*)       -> FT-tuple
    asfrules2cfunc({Rule ";"}+,{NamePair ","}*)        -> Declaration
    funargs2cargs({Term ","}+,IntCon)                    -> PA-tuple
    asfrules2cstats({Rule   ";"}*,{NamePair ","}*) -> SlI-tuple
    asflistrules2cstats({Rule ";"}*,{NamePair ","}*) -> SlI-tuple

  sorts MakeSelectStat
  context-free syntax

    "make-select-stat"    -> MakeSelectStat
    "no-select-stat"      -> MakeSelectStat

  context-free syntax
    asfrules2cstats({C-Rule ";"}*,{C-Rule ";"}*,
                    {NamePair ","}*,IntCon, MakeSelectStat) -> SlI-tuple

    asfrules2cstats1({C-Rule ";"}*,
                     {NamePair ","}*,IntCon)             -> SlI-tuple
    asfrules2cstats2({C-Rule ";"}*,
                     {NamePair ","}*,IntCon)             -> SlI-tuple

  context-free syntax
    sigargs2cbuild({SigArg ","}+,IntCon) -> ADS-tuple

  context-free syntax
    list2cstats({C-Rule ";"}+,{NamePair ","}*,IntCon) -> SlI-tuple
    listpatterns2cstats({C-Rule ";"}*,Expression,
                        {NamePair ","}*,IntCon)       -> SlI-tuple
    listpattern2cstats({C-Rule ";"}+,Expression,
                       {NamePair ","}*,IntCon)        -> ADSI-tuple
    listpattern2cstats(Bool,{FV-Path ","}+,{C-Rule ";"}+,
                       Expression,{NamePair ","}*,
                       IntCon)                              -> ADSI-tuple

    
hiddens
  variables
    "Char"[0-9]*     -> CHAR
    "Char*"[0-9]*    -> CHAR*
    "Char+"[0-9]*    -> CHAR+
    "Aexp"[0-9]*     -> Expression
    "Cint"[0-9]*     -> Integer-constant
    "Expression+"[0-9]* -> { Expression ","}+
    "Expression"[0-9]* -> Expression
    "MakeSelectStat"[0-9]* -> MakeSelectStat
    "Identifier"[0-9]* -> Identifier
