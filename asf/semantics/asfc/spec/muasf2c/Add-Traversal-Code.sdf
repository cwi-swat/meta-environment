module muasf2c/Add-Traversal-Code
imports muasf2c/Rules2C-Aux

exports

context-free syntax

add-traversal-code(FunId, Argument-expression-list, Declaration) -> Declaration

hiddens

context-free start-symbols
  Declaration

context-free syntax

make-tail-calls(Statement-list-opt, 
                TraversalType, 
                Identifier, 
                Argument-expression-list) -> Statement-list-opt
                {traversal(trafo, top-down, break)}

context-free syntax

count-args(Argument-expression-list) -> Integer-constant
extra(Argument-expression-list)      -> Expression

context-free syntax

<Declaration, Declaration> -> Declaration

variables

"Char*"[0-9]* -> CHAR*
"Funid"[0-9]* -> FunId
"Declaration"[0-9]* -> Declaration
"Arg*"[0-9]* -> {Parameter-declaration ","}*
"TrafoArg"[0-9]* -> Parameter-declaration
"AccuArg"[0-9]* -> Parameter-declaration
"Statement*"[0-9]* -> Statement*
"Statement+"[0-9]* -> Statement+
"Declaration*"[0-9]* -> Declaration*
"Decls" -> Declaration-list-opt
"Id"[0-9]* -> Identifier
"Kids"[0-9]* -> {Expression ","}*
"Expr*"[0-9]* -> {Expression ","}*
"EntryArgs" -> {Expression ","}*
"NormalForm" -> Expression
"Expression"[0-9]* -> Expression
"Traversed" -> Expression
"Accumulated" -> Expression
"Extra" -> {Expression ","}*
