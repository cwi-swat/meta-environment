%%
%%    Meta-Environment - An environment for language prototyping.
%%    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 
%%
%%    This program is free software; you can redistribute it and/or modify
%%    it under the terms of the GNU General Public License as published by
%%    the Free Software Foundation; either version 2 of the License, or
%%    (at your option) any later version.
%%
%%    This program is distributed in the hope that it will be useful,
%%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%%    GNU General Public License for more details.
%%
%%    You should have received a copy of the GNU General Public License
%%    along with this program; if not, write to the Free Software
%%    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
%%
%%%% $Id$
module Integers

imports Basic-Integers ATerm-Booleans
exports
  context-free syntax
    Int "-" Int            -> Int {left}
    Int "*" Int            -> Int {left}
    "(" Int ")"            -> Int {bracket}

    Int ">" Int            -> Bool
    Int ">=" Int           -> Bool
    Int "<" Int            -> Bool
    Int "<=" Int           -> Bool
  context-free priorities
     Int "*" Int -> Int > 
     {left: Int "+" Int -> Int Int "-" Int -> Int}

hiddens
  context-free syntax
    NatCon "-/"  NatCon          -> NatCon
    NatCon "-//" NatCon          -> NatCon
    NatCon ">-"  NatCon          -> NatCon
    "(" NatCon ")"               -> NatCon {bracket}
    gt "(" NatCon "," NatCon ")" -> Bool
  variables
    "c"  [0-9]*            -> CHAR
    "c*" [0-9]*            -> CHAR*
    "c+" [0-9]*            -> CHAR+
