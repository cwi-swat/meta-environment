%%
%%    Meta-Environment - An environment for language prototyping.
%%    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 
%%
%%    This program is free software; you can redistribute it and/or modify
%%    it under the terms of the GNU General Public License as published by
%%    the Free Software Foundation; either version 2 of the License, or
%%    (at your option) any later version.
%%
%%    This program is distributed in the hope that it will be useful,
%%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%%    GNU General Public License for more details.
%%
%%    You should have received a copy of the GNU General Public License
%%    along with this program; if not, write to the Free Software
%%    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
%%
%% The module {\tt MuASF-Signs} defines a number
%% of operations on the signature of a \muasf
%% specification.

imports ATerm-Booleans MuASF

exports
  context-free syntax
    FuncDefList "++" FuncDefList -> FuncDefList {left}

exports
  context-free syntax
    remove-funcdef(FunId,FuncDefList)   -> FuncDefList

hiddens
  context-free syntax
    FuncDef "in" FuncDefList            -> Bool
    is-external-funcdef(FuncDef)        -> Bool
    add-external-funcdef(FuncDef)       -> FuncDef
    remove-external-funcdef(FuncDef)    -> FuncDef
    remove-funcdef(FuncDef,FuncDefList) -> FuncDefList

exports
  context-free syntax
    make-funcdef(FunId,TermList)            -> FuncDef
    make-external-funcdef(FunId,TermList)   -> FuncDef
    is-external(Annotations)                 -> Bool
%%%    make-new-funcdef(Term,FunId)            -> FuncDef

  context-free syntax
    addto-sign(SignatureOpt,{FuncDef ";"}*) -> SignatureOpt

hiddens
  variables
    Char[0-9]*       -> CHAR
    Char[\*][0-9]*   -> CHAR*
    Char[\+][0-9]*   -> CHAR+
