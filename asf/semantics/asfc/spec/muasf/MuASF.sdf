module muasf/MuASF

imports utils/Basic-Integers
imports muasf/MuLiterals

%%
%% \ssasf\ can be characterized by:
%% \begin{itemize}
%% \item Left-linear rewrite rules.
%% \end{itemize}

exports
%% \vspace{\baselineskip}
%% \noindent
%% The signature of \ssasf\ consists of a collection
%% of function definitions. Each function definition
%% consists of a function name and a list of arguments
%% to indicate how many arguments a function has.
%% \ssasf\ is single-sorted, so there is no need to
%% give the type of the arguments. The number of
%% arguments of the functions applied in a rewrite
%% rule should equal the number of arguments in its
%% definition.

%% \noindent The definition of the terms in \ssasf.
  sorts Var Term TermList
  context-free syntax
    VarId                     -> Var
    Var                       -> Term
    FunId                     -> Term
    Int                       -> Term
    FunId "(" {Term ","}+ ")" -> Term
   "[" TermList "]"           -> Term 

    {Term ","}*               -> TermList

%% Terms can be annotated by types
    Term ":" Term             -> Term {assoc}

%% \vspace{\baselineskip}
  sorts Annotations FuncDef FuncDefList SigArg SigArgList
  context-free syntax
    "_" -> SigArg

    FunId                                   -> FuncDef
    FunId Annotations                       -> FuncDef
    FunId "(" {SigArg ","}+ ")"             -> FuncDef
    FunId "(" {SigArg ","}+ ")" Annotations -> FuncDef

    "{" {Term ","}+ "}" -> Annotations

    {SigArg ","}+  -> SigArgList
    {FuncDef ";"}* -> FuncDefList

%% \vspace{\baselineskip}
%% \noindent The definition of the rules in \ssasf.
  sorts Rule RuleList Cond CondList
  context-free syntax
    Term "=" Term -> Rule

    {Rule ";"}*   -> RuleList

exports
  context-free syntax
    "default:" Term "=" Term                -> Rule
    "default:" CondList "==>" Term "=" Term -> Rule

exports
  context-free syntax
    "_" "*" -> SigArg
    "_" "+" -> SigArg

  context-free syntax
    "*" VarId -> Var
    "+" VarId -> Var

exports
  context-free syntax
    CondList "==>" Term "=" Term -> Rule
    {Cond "&"}*                  -> CondList

  variables
    "Cond"[0-9]*    -> Cond
    "Cond+"[0-9]* -> {Cond "&"}+
    "Cond*"[0-9]* -> {Cond "&"}*

exports
  context-free syntax
    Term "=:" Term -> Cond

exports
  context-free syntax
    Term "==" Term -> Cond
    Term "!=" Term -> Cond

%% \vspace{\baselineskip}
%% \noindent The definition of the complete module structure of
%% \muasf. The imports section will always be empty.
  sorts Module RulesOpt SignatureOpt
  context-free syntax
                                                 -> SignatureOpt
    "signature" FuncDefList                      -> SignatureOpt
                                                 -> RulesOpt
    "rules" RuleList                             -> RulesOpt

    "module" ModId SignatureOpt RulesOpt         -> Module

  variables
    "Funcdef"[0-9]*  -> FuncDef
    "Funcdef*"[0-9]* -> {FuncDef ";"}*
    "Funcdef+"[0-9]* -> {FuncDef ";"}+
    "Rule"[0-9]*     -> Rule
    "Rule*"[0-9]*    -> {Rule ";"}*
    "Rule+"[0-9]*    -> {Rule ";"}+
    "Rulesopt"[0-9]* -> RulesOpt
    "Sigarg"[0-9]*   -> SigArg
    "Sigarg*"[0-9]*  -> {SigArg ","}*
    "Sigarg+"[0-9]*  -> {SigArg ","}+
    "Signopt"[0-9]*  -> SignatureOpt
    "Term"[0-9]*     -> Term
    "Term*"[0-9]*    -> {Term ","}*
    "Term+"[0-9]*    -> {Term ","}+
    "Module"[0-9]*   -> Module
    "Var"[0-9]*      -> Var
    "Attrs"[0-9]*    -> Annotations
    "Annos"[0-9]*    -> Annotations
    "Mname"[0-9\']*  -> ModId
