module  muasf/MuASF-Equations-Ops

imports muasf/MuASF-Signature-Ops
imports utils/VarEnv


exports
  sorts FuncRuleTuple FuncRulePair
        RuleListPair FuncTermTableTuple 
        FuncRuleTableTuple FuncCondTableTuple
        TraversalType TraversalStrategy TermList
  context-free syntax
    "(" {FuncDef ";"}* "," {Rule ";"}* "," IntCon ")"    -> FuncRuleTuple
    "(" {FuncDef ";"}* "," {Rule ";"}* ")"               -> FuncRulePair
    "(" {FuncDef ";"}* "," TermList "," NameTable ")"    -> FuncTermTableTuple
    "(" {FuncDef ";"}* "," {Rule ";"}* "," NameTable ")" -> FuncRuleTableTuple
    "(" {FuncDef ";"}* "," {Cond "&"}* "," NameTable ")" -> FuncCondTableTuple
    "(" {Rule ";"}* "," {Rule ";"}* ")"                  -> RuleListPair

  context-free syntax
    create-new-rulesopt({Rule ";"}*)               -> RulesOpt
    addto-rulesopt(RulesOpt,{Rule ";"}*)           -> RulesOpt

  aliases
    "bottom-up" | "top-down"        -> TraversalStrategy
     "trafo" | "accu" | "accutrafo" -> TraversalType

  context-free syntax
    get-funid(Term)                   -> FunId
    get-funid(Rule)                   -> FunId
    get-funid(Term,{NamePair ","}*)   -> FunId
    get-funargs(Term)                 -> TermList
    get-funargs(Rule)                 -> TermList
    is-traversal-funid(FunId)         -> Bool
    get-traversal-strategy(FunId)     -> TraversalStrategy
    get-traversal-type(FunId)         -> TraversalType
    is-list-funid(FunId)              -> Bool
    is-trans-list-funid(FunId)        -> Bool
    is-returns-list-funid(FunId)      -> Bool {prefer}
    remove-returns-list(FunId)        -> FunId
    is-string-funid(FunId)            -> Bool
    is-list-var-term(Term)            -> Bool
    are-star-vars({Term ","}+)        -> Bool
    is-var-term(Term)                 -> Bool
    is-boolean-term(Term)             -> Bool
    is-default-rule(Rule)             -> Bool
    is-cons(Term)                     -> Bool
    term-contains-var(Term)           -> Bool
    args-contain-var({Term ","}*)     -> Bool
    make-trans-list-id(FunId)         -> FunId {prefer}
    remove-trans-from-list-id(FunId)  -> FunId {prefer}
    make-ignored-funid(FunId)         -> FunId {prefer}
    is-ignored-funid(FunId)           -> Bool  {prefer}
    remove-ignored-from-funid(FunId)  -> FunId {prefer}
    make-func(FunId,{Term ","}*)      -> Term
    make-list-func(FunId,{Term ","}*) -> Term
    prefix-id(FunId,FunId,IntCon)     -> FunId {prefer}
    is-internal-funid(FunId)          -> Bool
    is-quoted-funid(FunId)            -> Bool
    is-plus-var(Term)                 -> Bool
    is-star-var(Term)                 -> Bool
    make-arg-list(SigArgList, NatCon) -> TermList

  context-free syntax
    make-list-args({Term ","}*)  -> Term

  context-free syntax
    select-on-ofs(FunId,{Rule ";"}*)                   -> RuleListPair
    select-on-defaults({Rule ";"}*)                    -> RuleListPair

  context-free syntax
    make-default-rule(Rule)                 -> Rule
    make-conditional-rule({Cond "&"}*,Rule) -> Rule
    make-rule(Bool,Term,Term)               -> Rule
    make-rule(Bool,{Cond "&"}*,Term,Term)   -> Rule

hiddens
  context-free syntax
    is-internal-funid-new(FunId)   -> Bool

hiddens
  variables
    "Char"[0-9]*    -> CHAR
    "Char*"[0-9]*   -> CHAR*
    "Char+"[0-9]*   -> CHAR+

exports
variables
    "Strategy"[0-9]* -> TraversalStrategy
    "Type"[0-9]*     -> TraversalType
    "Natcon"[0-9]*   -> NatCon
