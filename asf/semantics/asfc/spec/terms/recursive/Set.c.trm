#include "asc-support.h"
static Symbol lf_AUX_Set2_2sym;
static ATerm lf_AUX_Set2_2 (ATerm arg1);
static Symbol lf_AUX_Set2_1sym;
static ATerm lf_AUX_Set2_1 (ATerm arg1);
void
register_AUX_Set2 ()
{
  lf_AUX_Set2_2sym =
    ATmakeSymbol
    ("prod(id(\"Set\"),w(\"\"),[iter(sort(\"E\"),w(\"\"),l(\"*\"))],w(\"\"),l(\"->\"),w(\"\"),sort(\"S\"),w(\"\"),no-attrs)",
     1, ATtrue);
  ATprotectSymbol (lf_AUX_Set2_2sym);
  lf_AUX_Set2_1sym = ATmakeSymbol ("listtype(sort(\"E\"))", 1, ATtrue);
  ATprotectSymbol (lf_AUX_Set2_1sym);
  register_prod (ATparse ("listtype(sort(\"E\"))"),
		 lf_AUX_Set2_1, lf_AUX_Set2_1sym);
    register_prod (ATparse
		   ("prod(id(\"Set\"),w(\"\"),[iter(sort(\"E\"),w(\"\"),l(\"*\"))],w(\"\"),l(\"->\"),w(\"\"),sort(\"S\"),w(\"\"),no-attrs)"),
		   lf_AUX_Set2_2, lf_AUX_Set2_2sym);
}

void
resolve_AUX_Set2 ()
{

}
void
init_AUX_Set2 ()
{

}
ATerm
lf_AUX_Set2_2 (ATerm arg0)
{
  {
    ATerm tmp[6];
    FUNC_ENTRY (lf_AUX_Set2_2sym, ATmakeAppl (lf_AUX_Set2_2sym, arg0));
    if (check_sym (arg0, lf_AUX_Set2_1sym))
      {
	(tmp[0] = arg_0 (arg0));
	{
	  ATerm atmp001110;
	  ATerm atmp00110[2];
	  ATerm atmp0010;
	  ATerm atmp000[2];
	  (atmp000[0] = tmp[0]);
	  (atmp000[1] = tmp[0]);
	  while (not_empty_list (tmp[0]))
	    {
	      (atmp0010 = list_head (tmp[0]));
	      (tmp[0] = list_tail (tmp[0]));
	      (atmp00110[0] = tmp[0]);
	      (atmp00110[1] = tmp[0]);
	      while (not_empty_list (tmp[0]))
		{
		  (atmp001110 = list_head (tmp[0]));
		  (tmp[0] = list_tail (tmp[0]));
		  if (term_equal (atmp0010, atmp001110))
		    {
		      (tmp[1] =
		       lf_AUX_Set2_2 (lf_AUX_Set2_1
				      (cons (make_list (atmp0010), tmp[0]))));
		      if (check_sym (tmp[1], lf_AUX_Set2_2sym))
			{
			  (tmp[2] = arg_0 (tmp[1]));
			  if (check_sym (tmp[2], lf_AUX_Set2_1sym))
			    {
			      (tmp[3] = arg_0 (tmp[2]));
			      if (not_empty_list (tmp[3]))
				{
				  (tmp[4] = list_head (tmp[3]));
				  (tmp[3] = list_tail (tmp[3]));
				  (tmp[5] =
				   lf_AUX_Set2_2 (lf_AUX_Set2_1
						  (cons
						   (slice
						    (atmp000[0], atmp000[1]),
						    cons (make_list (tmp[4]),
							  cons (slice
								(atmp00110[0],
								 atmp00110
								 [1]),
								tmp[3]))))));
				    FUNC_EXIT (tmp[5]);
				}
			    }
			}
		    }
		  (atmp00110[1] = list_tail (atmp00110[1]));
		  (tmp[0] = atmp00110[1]);
		}
	      (atmp000[1] = list_tail (atmp000[1]));
	      (tmp[0] = atmp000[1]);
	    }
	}
      }
    FUNC_EXIT (make_nf1 (lf_AUX_Set2_2sym, arg0));
  }
}
ATerm
lf_AUX_Set2_1 (ATerm arg0)
{
  CONS_ENTRY (lf_AUX_Set2_1sym, ATmakeAppl (lf_AUX_Set2_1sym, arg0));
  CONS_EXIT (make_nf1 (lf_AUX_Set2_1sym, arg0));
}
