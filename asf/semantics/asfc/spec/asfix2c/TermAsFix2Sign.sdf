%%
%%    Meta-Environment - An environment for language prototyping.
%%    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 
%%
%%    This program is free software; you can redistribute it and/or modify
%%    it under the terms of the GNU General Public License as published by
%%    the Free Software Foundation; either version 2 of the License, or
%%    (at your option) any later version.
%%
%%    This program is distributed in the hope that it will be useful,
%%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%%    GNU General Public License for more details.
%%
%%    You should have received a copy of the GNU General Public License
%%    along with this program; if not, write to the Free Software
%%    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
%%
%%  TermAsFix2Sign
module TermAsFix2Sign

imports TermAsFixAccess VarEnv

exports
  sorts FNT-tuple
  context-free syntax
    "(" FuncDefList "," NameTable ")" -> FNT-tuple
  sorts FuncSortStruct
  context-free syntax
    "(" FuncDefList "," SortList "," NameTable ")" -> FuncSortStruct

  context-free syntax
    "term-lexfunc2sign" "(" ATerm "," SortList "," NameTable ")" -> FuncSortStruct
    "term-cffunc2sign" "(" ATerm "," ATerm "," NameTable ")"     -> FNT-tuple

    "term-cfelems2args" "(" ATermList "," NameTable ")" -> FuncTermTableTuple
    "term-cfelem2args" "(" ATerm "," NameTable ")"      -> FuncTermTableTuple

  context-free syntax
    "make-lex-cons-func" "(" Literal ")"     -> FunId

hiddens
  context-free syntax
    "term-attrs2terms" "(" ATerm ")"         -> TermList
    "term-attrlist2terms" "(" ATerms ")"     -> TermList
    "term-attr2term" "(" ATerm ")"           -> Term
    "term-cffunc2id" "(" ATerm "," ATerm ")" -> FunId
    "symbols2id" "(" ATerm ")"               -> FunId
    "symbollist2id" "(" ATerm ")"            -> FunId
    "symbolplus2id" "(" ATerms ")"           -> FunId
    "argslist2id" "(" ATerm ")"              -> FunId
    "argsplus2id" "(" ATerms ")"             -> FunId   
    "symbol2id" "(" ATerm ")"                -> FunId
    "term-sort2id" "(" ATerm ")"             -> FunId
    "literal2id" "(" ATerm ")"               -> FunId
    "attrs2id" "(" ATerm ")"                 -> FunId
    "attrlist2id" "(" ATerm ")"              -> FunId
    "attrplus2id" "(" ATerms ")"             -> FunId
    "attr2id" "(" ATerm ")"                  -> FunId
    "associativity-attr2id" "(" ATerm ")"    -> FunId
    "term-iter2id" "(" ATerm ")"             -> FunId
    "ext-term-iter2id" "(" ATerm ")"         -> FunId

exports
  context-free syntax
    Term "++del" {Term ","}*     -> TermList

hiddens
  variables
    "Aname"[0-9\']*        -> ATerm
    "CfArgs"[0-9\']*       -> ATermList
    "Symbols"[0-9\']*      -> ATerm
    "Symbol+"[0-9\']*      -> ATerms
    "$Symbol"[0-9\']*      -> ATerm
    "SymbolList"[0-9\']*   -> ATerm
    "Attr"[0-9\']*         -> ATerm
    "AttrList"[0-9\']*     -> ATerm
    "Attr+"[0-9\']*        -> ATerms
    "AcAttrs"[0-9\']*      -> ATerm
    "CfFunc"[0-9\']*       -> ATerm
    "LexFunc"[0-9\']*      -> ATerm
    "Ws"[0-9\']*           -> ATerm
    "Sep"[0-9\']*          -> ATerm
    "Prod"[0-9\']*         -> ATerm
    "Iter"[0-9\']*         -> ATerm
    "$Sort"[0-9\']*        -> ATerm
    "$Literal"[0-9\']*     -> ATerm
    "$Lexical"[0-9\']*     -> Literal
    "CfElems"[0-9\']*      -> ATermList
    "CfElem*"[0-9\']*      -> ATerms
    "CfElem"[0-9\']*       -> ATerm
    "Char*"[0-9]*          -> CHAR*
    "Sortlist"[0-9]*       -> SortList
