equations

  [fdlc-2'1] ++_ss Funcdef* = Funcdef*

  [fdlc-2'2] is-external-ssfuncdef(Funcdef1) = true,
             remove-external-ssfuncdef(Funcdef1) = Funcdef2,
             Funcdef2 in_ss Funcdef*2 = false,
             Funcdef1 in_ss Funcdef*2 = true
             ============================
             Funcdef1;Funcdef*1 ++_ss Funcdef*2 = Funcdef*1 ++_ss Funcdef*2

  [fdlc-2'3] is-external-ssfuncdef(Funcdef1) = true,
             remove-external-ssfuncdef(Funcdef1) = Funcdef2,
             Funcdef2 in_ss Funcdef*2 = true
             ============================
             Funcdef1;Funcdef*1 ++_ss Funcdef*2 = Funcdef*1 ++_ss Funcdef*2

  [fdlc-2'4] is-external-ssfuncdef(Funcdef) = false,
             Funcdef in_ss Funcdef*2 = true
             ===========================
             Funcdef;Funcdef*1 ++_ss Funcdef*2 = Funcdef*1 ++_ss Funcdef*2

  [fdlc-2'5] is-external-ssfuncdef(Funcdef1) = false,
             Funcdef1 in_ss Funcdef*2 = false,
             add-external-ssfuncdef(Funcdef1) = Funcdef2,
             Funcdef2 in_ss Funcdef*2 = true,
             remove-ssfuncdef(Funcdef2,Funcdef*2) = Funcdef*3,
             Funcdef*1 ++_ss Funcdef*3 = Funcdef*4
             ==================================
             Funcdef1;Funcdef*1 ++_ss Funcdef*2 = Funcdef1;Funcdef*4

  [fdlc-2'6] is-external-ssfuncdef(Funcdef1) = true,
             Funcdef1 in_ss Funcdef*2 = false,
             remove-external-ssfuncdef(Funcdef1) = Funcdef2,
             Funcdef2 in_ss Funcdef*2 = false,
             Funcdef*1 ++_ss Funcdef*2 = Funcdef*3
             ==================================
             Funcdef1;Funcdef*1 ++_ss Funcdef*2 = Funcdef1;Funcdef*3

  [fdlc-3'7] is-external-ssfuncdef(Funcdef1) = false,
             Funcdef1 in_ss Funcdef*2 = false,
             add-external-ssfuncdef(Funcdef1) = Funcdef2,
             Funcdef2 in_ss Funcdef*2 = false,
             Funcdef*1 ++_ss Funcdef*2 = Funcdef*3
             ==================================
             Funcdef1;Funcdef*1 ++_ss Funcdef*2 = Funcdef1;Funcdef*3

  [rdl-2'1] remove-ssfuncdef(Funcdef,) =

  [rdl-2'2] remove-ssfuncdef(Funcdef,Funcdef;Funcdef*) = Funcdef*

  [rdl-2'3] Funcdef1 != Funcdef2,
            remove-ssfuncdef(Funcdef1,Funcdef*1) = Funcdef*2
            ==============================================
            remove-ssfuncdef(Funcdef1,Funcdef2;Funcdef*1) =
              Funcdef2;Funcdef*2

  [iefd-2'1] is-external-ssfuncdef(Funid {external}) = true

  [iefd-2'2] is-external-ssfuncdef(Funid2(Sigarg+) {external}) = true

  [default-iefd-2'3] is-external-ssfuncdef(Funcdef) = false

  [ae-2'1] add-external-ssfuncdef(Funid) =
             Funid {external}

  [ae-2'2] add-external-ssfuncdef(Funid(Sigarg+)) =
             Funid(Sigarg+) {external}

  [default-ae-2'3] add-external-ssfuncdef(Funcdef) = Funcdef

  [re-2'1] remove-external-ssfuncdef(Funid {external}) =
             Funid

  [re-2'2] remove-external-ssfuncdef(Funid(Sigarg+) {external}) =
             Funid(Sigarg+)

  [default-re-2'3] remove-external-ssfuncdef(Funcdef) = Funcdef

  [fdli-2'1] Funcdef in_ss = false

  [fdli-2'2] Funcdef in_ss Funcdef;Funcdef* = true

  [fdli-2'3] Funcdef1 != Funcdef2
             ====================
             Funcdef1 in_ss Funcdef2;Funcdef* = Funcdef1 in_ss Funcdef*

%% Auxilary functions to create new function definition to be
%% included in the signature.
 [mfd-1'1] make-funcdef(Funid,) = Funid

 [mfd-1'2] make-funcdef(Funid,Term) = Funid(_)

 [mfd-1'3] make-funcdef(Funid1,Term+) = Funid2(Sigarg+)
           ============================================
           make-funcdef(Funid1,Term,Term+) = Funid2(_,Sigarg+)

%% Equations to create external function definitions.
 [mefd-1'1] make-external-funcdef(Funid,) = Funid {external}

 [mefd-1'2] make-external-funcdef(Funid,Term) =
              Funid(_) {external}

 [mefd-1'3] make-external-funcdef(Funid1,Term+) = Funid2(Sigarg+) {external}
            ================================================================
            make-external-funcdef(Funid1,Term,Term+) =
              Funid2(_,Sigarg+) {external}

%% Auxilary functions to create new function definition to be
%% included in the signature.
%%% [mnfd-1'1] make-new-funcdef(Funid1,) = Funid1

%%% [mnfd-1'1] make-new-funcdef(Funid1,Term+) =
%%%              make-new-funcdef(Funid1(Term+),Funid1)

%%% [mnfd-1'1] make-new-funcdef(Funid1,,Funid2) = Funid2

%%% [mnfd-1'2] make-new-funcdef(Funid1,Term+,Funid2) =
%%%              make-new-funcdef(Funid1(Term+),Funid2)

 [mnfd-1'1] make-new-funcdef(Funid1(Term),Funid2) = Funid2(_)

 [mnfd-1'2] make-new-funcdef(Funid1(Term+),Funid2) = Funid3(Sigarg+)
            ========================================================
            make-new-funcdef(Funid1(Term,Term+),Funid2) = Funid3(_,Sigarg+)

%%% Auxilary functions to create new function definition to be
%%% included in the signature.
%%% [mnfd-1'1] make-new-funcdef2(Funid1(Term),Funid2) = Funid2(_,_)

%%% [mnfd-1'2] make-new-funcdef2(Funid1(Term+),Funid2) = Funid3(Sigarg+)
%%%            =========================================================
%%%            make-new-funcdef2(Funid1(Term,Term+),Funid2) = Funid3(_,Sigarg+)

%% An auxilary function to add new created function definitions
%% to the (existing) signature.
 [ats-1'1] addto-sign(,) =

 [ats-2'3] addto-sign(signature,) =

 [ats-1'2] addto-sign(,Funcdef+) = signature Funcdef+

 [ats-1'2] addto-sign(signature,Funcdef+) = signature Funcdef+

 [ats-1'3] addto-sign(signature Funcdef+,) = signature Funcdef+

 [ats-1'4] Funcdef+1 ++_ss Funcdef+2 = Funcdef+3
           ==================================
           addto-sign(signature Funcdef+1,Funcdef+2) =
             signature Funcdef+3
