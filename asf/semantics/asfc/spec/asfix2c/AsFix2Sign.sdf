%%
%%    Meta-Environment - An environment for language prototyping.
%%    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 
%%
%%    This program is free software; you can redistribute it and/or modify
%%    it under the terms of the GNU General Public License as published by
%%    the Free Software Foundation; either version 2 of the License, or
%%    (at your option) any later version.
%%
%%    This program is distributed in the hope that it will be useful,
%%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%%    GNU General Public License for more details.
%%
%%    You should have received a copy of the GNU General Public License
%%    along with this program; if not, write to the Free Software
%%    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
%%
%% The module {\tt AsFix2Sign} generates functions for the given
%% module.
%% The translation is based on the {\sc Sdf} part of an {\sc Asf+Sdf} specification,
%% its result is a set of function definitions.
module AsFix2Sign

imports TermAsFix2Sign

exports
  context-free syntax
    asfix2sign(ATerm,NameTable) -> FNT-tuple
    attrs2terms(ATerm)          -> TermList

hiddens
  context-free syntax
    syntax2rules(ATerm,ATermList,NameTable)         -> FNT-tuple

    synsecs2sign(ATerm,ATermList,SortList,NameTable) -> FuncSortStruct
    synsec2sign(ATerm,ATerm,SortList,NameTable)      -> FuncSortStruct

    sections2sign(ATerm,ATermList,SortList,NameTable) -> FuncSortStruct
    section2sign(ATerm,ATerm,SortList,NameTable)      -> FuncSortStruct

    cffuncs2sign(ATerm,ATermList,NameTable) -> FNT-tuple
    cffunc2sign(ATerm,ATerm,NameTable)      -> FNT-tuple

    lexfuncs2sign(ATermList,SortList,NameTable) -> FuncSortStruct
    lexfunc2sign(ATerm,SortList,NameTable)      -> FuncSortStruct

    cfelems2args(ATermList,NameTable) -> FuncTermTableTuple
    cfelem2args(ATerm,NameTable)      -> FuncTermTableTuple

    attrlist2terms(ATermList) -> TermList
    attr2term(ATerm)          -> Term

hiddens
  variables
    "Aname"[0-9\']*        -> ATerm
    "Amodule"[0-9\']*      -> ATerm
    "Mname"[0-9\']*        -> ModId
    "Defrules"[0-9\']*     -> MsFuncRulePair
    "$L"[0-9\']*           -> Literal
    "$Lit"[0-9\']*         -> Literal
    "SynSecs"[0-9\']*      -> ATermList
    "SynSec*"[0-9\']*      -> ATerms
    "SynSec"[0-9\']*       -> ATerm
    "Sections"[0-9\']*     -> ATermList
    "Section*"[0-9\']*     -> ATerms
    "$Section"[0-9\']*      -> ATerm
    "LexFuncs"[0-9\']*     -> ATermList
    "LexFunc*"[0-9\']*     -> ATerms
    "LexFunc"[0-9\']*      -> ATerm
    "CfFuncs"[0-9\']*      -> ATermList
    "CfFunc*"[0-9\']*      -> ATerms
    "CfFunc"[0-9\']*       -> ATerm
    "CfElems"[0-9\']*      -> ATermList
    "CfElem*"[0-9\']*      -> ATerms
    "CfElem"[0-9\']*       -> ATerm
    "Iter"[0-9\']*         -> ATerm
    "Sort*"[0-9\']*        -> ATerms
    "Sorts"[0-9\']*        -> ATermList
    "Sort"[0-9\']*         -> ATerm
    "Attr"[0-9\']*         -> ATerm
    "Attrlist"[0-9\']*     -> ATermList
    "Char*"[0-9]*          -> CHAR*
    "Sortlist"[0-9]*       -> SortList
