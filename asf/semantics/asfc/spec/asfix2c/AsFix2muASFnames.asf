equations

  [s2i-1'1] sort2id(sort(Literal)) = literal2id(Literal)

%% The translation of a context-free function to a \muasf\ identifier
%% is performed by the function {\tt cffunc2id}.
  [cf2i-1'1] nws-print(CfFunc) = literal(Char*)
             ==============================
             cffunc2id(CfFunc) = funid(Char*)

%% Function for the construction of \muasf\ identifiers
%% for lists.
  [i2i-1'1] get-cons(Iter) = iter,
            nws-print(Iter[sym]) = literal(Char*)
            =====================================
            iter2id(Iter) = "{" ++ funid(Char*) ++ "}"

  [i2i-1'2] get-cons(Iter) = iter-sep,
            nws-print(Iter[sym]) = literal(Char*1),
            nws-print(Iter[sep]) = literal(Char*2)
            ======================================
            iter2id(Iter) = "{" ++ funid(Char*1) ++ "," ++
                                   funid(Char*2) ++ "}"

  [s2i-2'1] sep2id(ql(Literal)) = qliteral2id(Literal)

  [s2i-2'2] sep2id(literal(""" """)) = funid(""" """)

  [l2i-1'1] literal2id(literal(Char*)) = funid(Char*)

  [ql2i-1'1] qliteral2id(literal(""" Char* """)) =
               funid(""" "\" """ Char* "\" """ """)

  [io2i-1'1] iterop2id(l(Literal)) = literal2id(Literal)

  [sv2mv-1'1] svar2muvar(literal(""" Char* """)) = varid(Char*)

  [av2mv-1'1] Symbol[sym] = Iter,
              get-cons(Iter) = sort,
              svar2muvar(Symbol[name]) = Varid
              ================================
              avar2muvar(Symbol) = Varid

  [av2mv-1'2] Symbol[sym] = Iter,
              get-cons(Iter) = iter-sep,
              Iter[iter] = l("+"),
              svar2muvar(Symbol[name]) = Varid
              ================================
              avar2muvar(Symbol) = +Varid

  [av2mv-1'3] Symbol[sym] = Iter,
              get-cons(Iter) = iter-sep,
              Iter[iter] = l("*"),
              svar2muvar(Symbol[name]) = Varid
              ================================
              avar2muvar(Symbol) = *Varid

  [av2mv-1'4] Symbol[sym] = Iter,
              get-cons(Iter) = iter,
              Iter[iter] = l("+"),
              svar2muvar(Symbol[name]) = Varid
              ================================
              avar2muvar(Symbol) = +Varid

  [av2mv-1'5] Symbol[sym] = Iter,
              get-cons(Iter) = iter,
              Iter[iter] = l("*"),
              svar2muvar(Symbol[name]) = Varid
              ================================
              avar2muvar(Symbol) = *Varid

%%%  [as2ms-1'1] asort2musort(sort(literal(""" Char* """))) = sortid(Char*)

%%%  [as2ms-1'2] get-cons(Symbol) = iter-sep,
%%%              "{" ++ sort2id(Symbol[sym]) ++
%%%                  sep2id(Symbol[sep]) ++ "}" ++
%%%                  iterop2id(Symbol[iter]) = funid(Char*)
%%%              ==========================================
%%%              asort2musort(Symbol) = sortid(Char*)

%%%  [as2ms-1'3] get-cons(Symbol) = iter,
%%%              "{" ++ sort2id(Symbol[sym]) ++ "}" ++
%%%                  iterop2id(Symbol[iter]) = funid(Char*)
%%%              ==========================================
%%%              asort2musort(Symbol) = sortid(Char*)

  [u2l-1'1]  upper2lower(literal("A")) = literal("a")

  [u2l-1'2]  upper2lower(literal("B")) = literal("b")

  [u2l-1'3]  upper2lower(literal("C")) = literal("c")

  [u2l-1'4]  upper2lower(literal("D")) = literal("d")

  [u2l-1'5]  upper2lower(literal("E")) = literal("e")

  [u2l-1'6]  upper2lower(literal("F")) = literal("f")

  [u2l-1'7]  upper2lower(literal("G")) = literal("g")

  [u2l-1'8]  upper2lower(literal("H")) = literal("h")

  [u2l-1'9]  upper2lower(literal("I")) = literal("i")

  [u2l-1'10] upper2lower(literal("J")) = literal("j")

  [u2l-1'11] upper2lower(literal("K")) = literal("k")

  [u2l-1'12] upper2lower(literal("L")) = literal("l")

  [u2l-1'13] upper2lower(literal("M")) = literal("m")

  [u2l-1'14] upper2lower(literal("N")) = literal("n")

  [u2l-1'15] upper2lower(literal("O")) = literal("o")

  [u2l-1'16] upper2lower(literal("P")) = literal("p")

  [u2l-1'17] upper2lower(literal("Q")) = literal("q")

  [u2l-1'18] upper2lower(literal("R")) = literal("r")

  [u2l-1'19] upper2lower(literal("S")) = literal("s")

  [u2l-1'20] upper2lower(literal("T")) = literal("t")

  [u2l-1'21] upper2lower(literal("U")) = literal("u")

  [u2l-1'22] upper2lower(literal("V")) = literal("v")

  [u2l-1'23] upper2lower(literal("W")) = literal("w")

  [u2l-1'24] upper2lower(literal("X")) = literal("x")

  [u2l-1'25] upper2lower(literal("Y")) = literal("y")

  [u2l-1'26] upper2lower(literal("Z")) = literal("z")

  [u2l-1'27] upper2lower(literal(Char1)) = literal(Char2),
             upper2lower(literal(Char+1)) = literal(Char+2)
             ==============================================
             upper2lower(literal(Char1 Char+1)) = literal(Char2 Char+2)

  [default-u2l-1'28] upper2lower(literal(Char)) = literal(Char)

  [i2mn] id2modname(id(literal(""" Char* """))) = modid(Char*)

  [i2mn] id2modname(id(literal(""" Char* """)){Symbol}) = modid(Char*)

  [i2mn] get-org-modname(id(literal(""" Char* """))) = id(literal(""" Char* """))

  [i2mn] get-org-modname(id(literal(""" Char* """)){[module-name,Symbol]}) = Symbol

  [mn2lf] make-c-name(funid(Char*1)) = identifier(Char*2)
          ===============================================
          modname2lf(id(literal(""" Char*1 """))) = funid("l""f""_"Char*2"_")

  [mn2lf] make-c-name(funid(Char*1)) = identifier(Char*2)
          ===============================================
          modname2lf(id(literal(""" Char*1 """)){Symbol}) = funid("l""f""_"Char*2"_")

  [mcf-1'1]  upper2lower(Literal1) = Literal2
             ================================
             make-caller-func(Literal1) =
               "prod(id(\"caller\"),w(\"\")," ++
               "[l(\"" ++ literal2id(Literal2) ++ "\"),w(\"\")," ++
               "ql(\"(\"),w(\"\")," ++
               "iter(sort(\"CHAR\"),w(\"\"),l(\"+\")),w(\"\")," ++
               "ql(\")\")],w(\"\")," ++
               "l(\"->\"),w(\"\")," ++
               "sort(\"" ++ literal2id(Literal1) ++ "\"),w(\"\"),no-attrs)"
