%%
%%    Meta-Environment - An environment for language prototyping.
%%    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 
%%
%%    This program is free software; you can redistribute it and/or modify
%%    it under the terms of the GNU General Public License as published by
%%    the Free Software Foundation; either version 2 of the License, or
%%    (at your option) any later version.
%%
%%    This program is distributed in the hope that it will be useful,
%%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%%    GNU General Public License for more details.
%%
%%    You should have received a copy of the GNU General Public License
%%    along with this program; if not, write to the Free Software
%%    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
%%
%% The module {\tt AsFix2muASFnames} contains all functions to
%% translate the \asfix\ representation of context-free functions
%% into \muasf\ names.

imports AsFixPrint MuASF-Equations-Ops

exports
  context-free syntax
    modname2lf(ATerm)         -> FunId
    cffunc2id(ATerm)          -> FunId
    iter2id(ATerm)            -> FunId
    sort2id(ATerm)            -> FunId
    make-caller-func(Literal) -> FunId

  context-free syntax
    "id2modname" "(" ATerm ")"      -> ModId
    "get-org-modname" "(" ATerm ")" -> ATerm
    "avar2muvar" "(" ATerm ")"      -> Var
    "upper2lower" "(" Literal ")"   -> Literal
    "literal2id" "(" Literal ")"    -> FunId

  context-free syntax
    "make-muasf-name" "(" FunId ")" -> FunId

hiddens
  context-free syntax
    qliteral2id(Literal) -> FunId
    sep2id(ATerm)        -> FunId
    iterop2id(ATerm)     -> FunId
    svar2muvar(ATerm)    -> VarId


hiddens
  variables
    Literal[0-9']*      -> Literal
    CfFunc[0-9']*       -> ATerm
    CfElems[0-9']*      -> ATermList
    CfElem[\*][0-9']*   -> ATerms
    CfElem[0-9']*       -> ATerm
    Symbol[0-9']*       -> ATerm
    Iter[0-9']*         -> ATerm
    Attribs[0-9']*      -> ATermList
    Attrib[\*][0-9']*   -> ATerms
    Attrib[0-9']*       -> ATerm

    Char[\*][0-9]*      -> CHAR*
    Char[\+][0-9]*      -> CHAR+
    Char[0-9]*          -> CHAR
