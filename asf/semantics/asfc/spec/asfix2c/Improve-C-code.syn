%%
%%    Meta-Environment - An environment for language prototyping.
%%    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 
%%
%%    This program is free software; you can redistribute it and/or modify
%%    it under the terms of the GNU General Public License as published by
%%    the Free Software Foundation; either version 2 of the License, or
%%    (at your option) any later version.
%%
%%    This program is distributed in the hope that it will be useful,
%%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%%    GNU General Public License for more details.
%%
%%    You should have received a copy of the GNU General Public License
%%    along with this program; if not, write to the Free Software
%%    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
%%
%%  Improve-C-code

imports Rules2C-Aux

exports
  context-free syntax
    "remove-tail-rec" "(" Statement-list-opt "," Identifier "," Int ")" -> Statement-list

hiddens
  sorts
    SB-tuple
  context-free syntax
    "<" Statement-list-opt "|" Bool ">" -> SB-tuple
  context-free syntax
    add-label "(" Bool  "," Identifier "," Statement-list-opt "," Int ")"          -> Statement-list-opt
    remove-tail-rec-stats "(" Statement-list-opt "," Identifier "," Identifier ")" -> SB-tuple
    remove-tail-rec-stat "(" Statement "," Identifier "," Identifier ")"           -> SB-tuple
    transform-args "(" Argument-expression-list "|" Int ")"                        -> Statement-list-opt
    transform-arg "(" Expression "|" Int ")"                                       -> Statement-list-opt
    transform-arg-in-stats "(" Statement-list-opt ")"                              -> Statement-list-opt
    transform-arg-in-stat "(" Statement ")"                                        -> Statement
    transform-arg-in-exps "(" Argument-expression-list ")"                         -> Argument-expression-list
    transform-arg-in-exp "(" Expression ")"                                        -> Expression
    save-args "(" Int ")"                                                          -> Statement-list-opt

hiddens
  variables
    Expression"*"[0-9]* -> {Expression ","}*
    Expression"+"[0-9]* -> {Expression ","}+
    Id[0-9]*            -> Identifier
    Stats"*"[0-9']*     -> Statement*
    ICon[0-9]*          -> Integer-constant
    "Char*"[0-9]*       -> CHAR*
