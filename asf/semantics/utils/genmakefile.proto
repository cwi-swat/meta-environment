#
#    Meta-Environment - An environment for language prototyping.
#    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
# $Id$

# Template for Makefile(.in) for use with genmakefile.sh
#
#
TARGET=@TARGET@
DEBUG_EXT=dbg
PROFILE_EXT=prof
DEBUG_TARGET=${TARGET}-${DEBUG_EXT}
PROFILE_TARGET=${TARGET}-${PROFILE_EXT}
#
#
# You might need to change some of the variables below:
#	STD_CC_FLAGS: default compiler flags
#	STD_LD_FLAGS: default linker flags

STD_CC_FLAGS	:=
STD_LD_FLAGS	:=

#	FLAGS_$(CC): Compiler dependent settings

FLAGS_cc	:= -O
FLAGS_gcc	:= -Wall -O4

# DEBUG-CC-FLAGS: compiler flags to store debugging information in object files
# DEBUG-LD-FLAGS: optional flags for linking with debugging information

DEBUG_CC_FLAGS	:= -g
DEBUG_LD_FLAGS	:=

# PROFILE_CC_FLAGS: compiler flags to store profile information in object files
# PROFILE_LD_FLAGS: optional flags for linking profiled object code

PROFILE_CC_FLAGS:= -pg
PROFILE_LD_FLAGS:= -pg

LOCALLIBS	:= -lasc-support -lATB -lPT -lASF -lATerm -l${TARGET}

VPATH		:= @srcdir@
srcdir		:= @srcdir@
top_srcdir	:= @top_srcdir@

# Default compiler to use
CC=@CC@
# Building libraries: ar and ranlib
AR=@AR@
AR_FLAGS=cr
RANLIB=@RANLIB@

# DEBUG-LIBS: libraries containing debugging information
DEBUG-LIBS	 = $(LOCALLIBS:=-${DEBUG_EXT}) $(LIBS)
DEBUG-CC-FLAGS	:= ${DEBUG_CC_FLAGS}
DEBUG-LD-FLAGS	:= ${DEBUG_LD_FLAGS}

# PROFILE-LIBS: libraries containing profile information
# PROFILE-CC-FLAGS: compiler flags to store profile information in object files
# PROFILE-LD-FLAGS: optional flags for linking profiled object code
PROFILE-LIBS	 = $(LOCALLIBS:=-${PROFILE_EXT}) $(LIBS)
PROFILE-CC-FLAGS:= ${PROFILE_CC_FLAGS}
PROFILE-LD-FLAGS:= ${PROFILE_LD_FLAGS}

# STD-LIBS: normal libraries
# STD-CC-FLAGS: normal compiler flags
# STD-LD-FLAGS: optional flags
STD-LIBS	 = $(LOCALLIBS) $(LIBS)
STD-CC-FLAGS	:= ${STD_CC_FLAGS}
STD-LD-FLAG	:= ${STD_LD_FLAGS}

# FLAGS_$(CC): compiler dependent flags (e.g., FLAGS-gcc=-Wall)
FLAGS-cc	:= ${FLAGS_cc}
FLAGS-gcc	:= ${FLAGS_gcc}

# There should be no need to change anything below

prefix		:= @prefix@
exec_prefix	:= @exec_prefix@
bindir		:= @bindir@
libdir		:= @libdir@
includedir	:= @includedir@

ATERM		:= @ATERM@
ASC_SUPPORT     := @ASC_SUPPORT@
PT_SUPPORT      := @PT_SUPPORT@
ASF_SUPPORT     := @ASF_SUPPORT@

SOCKLIBS	:= @SOCKLIBS@
XINCLUDES	:= -I$(ASC_SUPPORT)/include \
                   -I$(PT_SUPPORT)/include \
                   -I$(ATERM)/include \
                   -I$(ASF_SUPPORT)/include \
                   -I$(includedir)

XLIBS		:= -L$(srcdir) \
                   -L$(ASC_SUPPORT)/lib \
                   -L$(PT_SUPPORT)/lib \
                   -L$(ATERM)/lib \
                   -L$(ASF_SUPPORT)/lib \
                   -L$(libdir) $(SOCKLIBS)

DEFS		:= @DEFS@
INCLUDES	:= $(XINCLUDES)
LIBS		:= @LIBS@ $(XLIBS)

SPEC_SRCS	:= $(shell grep -v '^\#' $(srcdir)/${TARGET}.module-list)
SRCS		:= $(SPEC_SRCS) init.c

STD-OBJS	:= $(SRCS:.c=.o)
DEBUG-OBJS	:= $(SRCS:.c=-${DEBUG_EXT}.o)
PROFILE-OBJS	:= $(SRCS:.c=-${PROFILE_EXT}.o)

STD-LIB		:= lib${TARGET}.a
DEBUG-LIB	:= lib${DEBUG_TARGET}.a
PROFILE-LIB	:= lib${PROFILE_TARGET}.a

BINFILES	:= ${TARGET}
LIBFILES	:=
INCLUDEFILES	:=

# Make rules

all:	${BINFILES}

libs:	${LIBFILES}

install:	${BINFILES}
	$(foreach tool, $^, cp $(tool) $(bindir); chmod 755 $(bindir)/$(tool);)

%-${DEBUG_EXT}.o:	%.c
	$(CC) $(FLAGS-$(CC)) $(DEBUG-CC-FLAGS) $(DEFS) $(INCLUDES) -c $< -o $@

%-${PROFILE_EXT}.o:	%.c
	$(CC) $(FLAGS-$(CC)) $(PROFILE-CC-FLAGS) $(DEFS) $(INCLUDES) -c $< -o $@

%.o:	%.c
	$(CC) $(FLAGS-$(CC)) $(STD-CC-FLAGS) $(DEFS) $(INCLUDES) -c $< -o $@

$(STD-LIB):	$(STD-OBJS)
	$(AR) $(AR_FLAGS) $@ $^
	$(RANLIB) $@

$(DEBUG-LIB):	$(DEBUG-OBJS)
	$(AR) $(AR_FLAGS) $@ $^
	$(RANLIB) $@

$(PROFILE-LIB):	$(PROFILE-OBJS)
	$(AR) $(AR_FLAGS) $@ $^
	$(RANLIB) $@

${TARGET}:	$(STD-LIB)
	$(CC) $(STD-LD-FLAGS)     -o $@ $(LIBDIR) $(STD-LIBS)

${DEBUG_TARGET}:	$(DEBUG-LIB)
	$(CC) $(DEBUG-LD-FLAGS)   -o $@ $(LIBDIR) $(DEBUG-LIBS)

${PROFILE_TARGET}:	$(PROFILE-LIB)
	$(CC) $(PROFILE-LD-FLAGS) -o $@ $(LIBDIR) $(PROFILE-LIBS)

debug:	${DEBUG_TARGET}

profile prof: ${PROFILE_TARGET}

init.c: $(SPEC_SRCS) $(srcdir)/${TARGET}.module-list
	@(echo "/*GENERATED AUTOMATICALLY, DO NOT MODIFY */" ;\
	SPEC_SRCS="$(SPEC_SRCS)" ;\
	for file in $$SPEC_SRCS; do \
		echo "extern void register_$$file();" ;\
		echo "extern void resolve_$$file();" ;\
		echo "extern void init_$$file();" ;\
	done ;\
	echo "void register_all() {" ;\
	for file in $$SPEC_SRCS; do \
		echo "  register_$$file();" ;\
	done ;\
	echo "}" ;\
	echo "void resolve_all() {" ;\
	for file in $$SPEC_SRCS; do \
		echo "  resolve_$$file();" ;\
	done ;\
	echo "}" ;\
	echo "void init_all() {" ;\
	for file in $$SPEC_SRCS; do \
		echo "  init_$$file();" ;\
	done ;\
	echo "}" ) | sed 's/.c()/()/g;s/-/_/g;s/\.\///g;' > $@

clean:
	$(RM) *.asfix *.o init.c ${STD-LIB} ${DEBUG-LIB} ${PROFILE-LIB} ${TARGET} ${DEBUG_TARGET} ${PROFILE_TARGET}

realclean spotless distclean:	clean
	$(RM) Makefile
