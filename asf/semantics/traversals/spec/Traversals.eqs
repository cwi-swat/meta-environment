equations

%% Interface functions
[G-0] GenerateTraversals(Sdf) = generate_sdf(Sdf)
[G-1] GenerateTraversals(Definition) = generate_definition(Definition,Definition)

[G-2] Definition = Module*1 module ModuleName ImpSection* Section* Module*2,
      Module = generate_module(module ModuleName ImpSection* Section*, Definition)
      =======================================================================
      GenerateTraversals(ModuleName, definition Definition) = 
        definition Module*1 Module Module*2

%% Hiddens

[gd-0]  Definition2 = generate_definition(Definition, Definition)
        ================================================
        generate_sdf(definition Definition) = definition Definition2

[gms-0] generate_definition(, Definition) =

[gms-1]  generate_module(Module, Definition) = Module2,
        generate_definition(Module*, Definition) = Module*2
        =====================================================================
        generate_definition(Module Module*, Definition) = Module2 Module*2


%% This is the main generation function. For each module the traversal productions
%% are retrieved, then removed from the specification. The imports are resolved and
%% all exported (non traversal) productions are collected. Then we make the productions 
%% using the collected information.
%% Finally, we add these new productions to the module in a hiddens section.
%%

[gm-0]  traversal_productions(Module)  = TraversalProductions,
        remove_traversal_productions(Module) = Module2,
        all_productions(Module2) = NormalProduction*1  ,
        find_imports(Definition, Module2) = Import* ,
        normal_exported_productions(Definition, Import*) = NormalProduction*2 ,
        NormalProductions = NormalProduction*1 NormalProduction*2  ,
        make_productions(NormalProductions, TraversalProductions) = Productions ,
%% prefer sorts is not needed while iter sorts are not supported yet
%%        prefer_sorts(Productions) = Productions2,
        add_productions(Module2,Productions) = Module3
        ==========================================================================
        generate_module(Module, Definition) = Module3 



