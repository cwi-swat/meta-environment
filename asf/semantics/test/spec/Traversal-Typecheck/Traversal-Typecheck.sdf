module Traversal-Typecheck

imports languages/pico/syntax/Pico-Syntax

exports sorts {STATEMENT ";"}*

context-free start-symbols
	PROGRAM

context-free syntax

 "type" "(" TYPE ")"  -> PICO-ID

 "replace" "(" EXP              "," ID-TYPE ")" -> EXP       {traversal(top-down,trafo)}
 "replace" "(" PICO-ID          "," ID-TYPE ")" -> PICO-ID   {traversal(top-down, trafo)}
 "replace" "(" {STATEMENT ";"}* "," ID-TYPE ")" -> {STATEMENT ";"}*  
    {traversal(top-down,trafo)}

variables

"Decl*"[0-9]* -> {ID-TYPE ","}*
"Type"[0-9]*  -> TYPE
"Id"[0-9]*    -> PICO-ID
"Program"[0-9]* -> PROGRAM
"Id-type"[0-9]* -> ID-TYPE
"CHAR+"[0-9]*   -> CHAR+
"Str-Con" -> StrCon
"Nat-Con" -> NatCon
"Stat"[0-9]* -> STATEMENT
"Exp"[0-9]* -> EXP
"Stat*"[0-9]* -> {STATEMENT ";"}*