equations

[] <Program2,Tenv> := typecheck(Program,[])
   ====>
   do-typecheck(Program) = Program2

[0] typecheck(Id : Type, Tenv) = <Id : Type, store(Tenv,Id,Type)>

[1] typecheck(Id, Tenv) = < type(lookup(Tenv,Id)),Tenv>
[2] typecheck(Nat-Con,Tenv) = <type(natural),Tenv>
[3] typecheck(Str-Con,Tenv) = <type(string),Tenv>

[4] type(string) || type(string)  = type(string)
[5] type(natural) + type(natural) = type(natural)
[6] type(natural) - type(natural) = type(natural)

[7] Stat*1; if type(natural) then Stat*2 else Stat*3 fi ; Stat*4 
      = Stat*1; Stat*2; Stat*3; Stat*4

[8] Stat*1; while type(natural) do Stat*2 od; Stat*3 
      = Stat*1; Stat*2; Stat*3

[9] Stat*1; type(Type) := type(Type); Stat*2 
      = Stat*1; Stat*2
