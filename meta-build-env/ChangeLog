Wed Jul 27 09:49:01 CEST 2006 <{storm,kooiker,martinrw}@cwi.nl>
 * reverted previous changes.
	
Wed Jul 26 16:54:01 CEST 2006 <{storm,kooiker,jurgenv}@cwi.nl>
 * configure, reconf, Makefile.src: build interface of meta-build-env now
   does not depend on auto-tools anymore; instead it installs them
   itself. This is implemented using a fake ./configure script which
   instantiates a Makefile that mimics standard automake Makefile
   targets. Make install will download autoconf, automake, libtool and
   pkg-config and install them in the prefix passed to the fake ./configure
   script.

Wed Jul 26 14:57:01 CEST 2006 <{storm,kooiker,jurgenv}@cwi.nl>
 * meta-build.m4: added AC_REQUIRE for PKG_CONFIG and m4_allow'd patterns 
   _PKG_ERRORS.

Wed Jul 26 10:45:01 CEST 2006 <{storm,kooiker}@cwi.nl>
 * meta-build.m4: in macro META_REQUIRE_SOFTWARE finding a dependency's
   prefix by executing a program in a path resulted in _PREFIX variables
   containing the path of the executable instead of the prefix proper.

Tue Jul 25 22:39:01 CEST 2006 <jurgenv@cwi.nl>
 * pkg-requires.src: a script that prints the reflexive and
   transitive requirements of a pkg-config package.

Tue Jul 25 20:19:22 CEST 2006 <martin.bravenboer@gmail.com>
  * meta-build.m4: META_JAVA_SETUP: ExternalJars is subsituted, so
    we cannot get it from the pkg-config file. For now, the value of
    JAVA_EXTERNAL_JARS is the variable EXTERNAL_JARS, which has been
    determined earlier.

    However, I'm afraid we'll have to revise the use of ExternalJars
    completely. The essential reason why building against uninstalled
    packages works with pkg-config is that a package should only list
    *its own* properties in a pkg-config file. The ExternalJars is a
    property of a required package, which breaks. So, a package should
    only list the jars that it provides and the required packages. If
    the closure needs to be determined, then this should be done by a
    configure script (meta-build.m4). The  result of that closure
    should not be stored in a pkg-config file.

Tue Jul 25 15:58:43 CEST 2006 <{jurgenv,kooiker}@cwi.nl>
 * meta-build.m4: added META_C_SETUP, common macro calls for
   C packages. Except that AC_PROG_LIBTOOL can not go in there because
   autoreconf scans for it in configure.ac to be able to call
   libtoolize if necessary.
 * meta-build.m4: added META_REQUIRE_SOFTWARE, a macro for adding
   dependencies on third-party packages, like graphviz.

Mon Jul 24 10:55:42 CEST 2006 <{jurgenv,kooiker}@cwi.nl>
 * meta-build.m4: 'Requires' field is comma separated, while we expected
   space separated. Fixed.
 * meta-build.m4: More use of tr to remove accidental newlines
   in data retrieved from pkg-config files.

Thu Jul 20 16:54:24 CEST 2006 <martin.bravenboer@gmail.com>
 * meta-build.m4: the generated PACKAGE-uninstalled.pc where
   broken, since the LocalLibs and LocalCflags did not use the
   required colon syntax. I've tweaked the generator to uncomment
   lines from PACKAGE.pc that start with #uninstalled. Looks much
   better as well :)

   We'll probably need a mechanism to remove configuration lines as
   well (for tools), but that's a matter of coming up with some nice
   convention.

Thu Jul 20 13:16:05 CEST 2006 <jurgenv@cwi.nl>
 * meta-build.m4: generates PACKAGE-uninstalled.pc.in file
   from PACKAGE.pc.in file using the LocalLibs and LocalCFlags 
   variables.

Thu Jul 20 01:45:22 CEST 2006 <martin.bravenboer@gmail.com>
 * meta-build.m4: added PACKAGE-uninstalled.pc to the
   AC_CONFIG_FILES. This introduces the requirement for all packages
   to include this file.

 * meta-build.m4: improved the META_GET_PKG_VARIABLE macro to deal
   with multiple pkg-config files in the same directory. It now picks
   only the first one. Maybe this should even be improved further,
   since stuff might break if the uninstalled package is first in the
   list (which would be very strange).

Thu Jul 20 09:40:23 CEST 2006 <jurgenv@cwi.nl>
 * meta-build.m4: calls META_REQUIRE_PACKAGE automatically using the
   Requires variables from the pc.in file.
 * meta-build.m4: builds up a EXTERNAL_JARS file to be used in the
   setting of ClassPath. This requires each .pc.in file that needs
   to export a classpath to set a variable:
      ExternalJars=@EXTERNAL_JARS@

Wed Jul 19 11:18:07 CEST 2006 <{jurgenv,storm}@cwi.nl>
 * meta-build.m4: call to AM_INIT_AUTOMAKE uses information from
   <package>.pc.in from now on, instead of from 'package'. This makes
   the package files redundant.
 * meta-build.m4: factored out the esyscmd call into a macro, such
   that we can extract any variable from a <package>.pc.in file.
 * meta-build.m4: changed :blank: to :space: in the call to esyscmd,
   such that we can remove the wrapping `printf ` call.
 * Makefile.am,meta-build.src,meta-build.xml: renamed meta-build.xml
   to meta-build.ant
 * Makefile.*.meta: removed use and generation of autobundle 'package' file

Wed Jul 19 09:50:13 CEST 2006 <jurgenv@cwi.nl>
 * meta-build.m4: added a $ to dereference META_FOUND_PREFIX instead
   of putting the variable name itself in it.

Wed Jul 19 01:18:49 CEST 2006 <martin.bravenboer@gmail.com>
  * meta-build.m4: Fix in the determination of the filename for the
    .pc in AC_CONFIG_FILES. Strange that this worked at all ...

    Directories of --with-pkg arguments are now placed in front of the
    PKG_CONFIG_PATH. This can deal with a bit more usual installation
    scenario's.

    Major fix in the check on the found prefix of packages. Of course,
    comparing paths by string comparison is a very bad idea, for
    example /foo will not be equal to /foo/ and also symbolic links
    are not supported. The check now fetches the actual prefix from
    the .pc file in the given prefix itself and compares that value to
    the found prefix. This check had to be disabled for bundles.

    Fix in the reporting of prefixes if the value was not explicitly
    specified.
	
Tue Jul 18 22:56:29 CEST 2006 <martin.bravenboer@gmail.com>
 * meta-build.m4: 
   Added a new macro META_BUNDLE_PKG_CONFIG_PATH, which is invoked
   from META_SETUP. This macro handles the --with-bundled-packages
   argument of autobundle and extends the PKG_CONFIG_PATH with the
   top-level directories of the packages that are available in the
   bundle. In this way, the uninstalled packages can be found by
   pkg-config.

   Basic bundling now works, though there was one minor problem with
   the way autobundle passes the prefix to the subpackages. This
   still needs to be resolved.

Tue Jul 18 10:53:01 CEST 2006 <{kooiker,jurgenv}@cwi.nl,martin.bravenboer@gmail.com>
 * package: a package for the standard (really!) build environment of
   all meta-environment packages, including C, Java, ToolBus
   and ASF+SDF stuff. This package will not depend on anything
   but standard GNU stuff like M4, autoconf, automake, libtool.
   One can see it as an extension to the auto* GNU tools.

