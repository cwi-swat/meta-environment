process SIEVE(Max : int) is
  let ThisSieve: term, N : int, Filter2 : term
  in
     ThisSieve := processId .
     create(FILTER(ThisSieve, 2), Filter2?) .
     N := 3 .
     if less(N, Max) then snd-msg N to Filter2 . N := add(N, 1) fi *
     if equal(N, Max) then shutdown "done" fi
  endlet

process FILTER(NumberSource: process, P : int) is
  let Z : int, N : int, ThisFilter : term, NextPrimeFilter : term
  in
     print P .
     ( rec-msg Z? from NumberSource .
       if equal(mod(Z, P), 0) then tau
       else
	  ThisFilter := processId .
          create(FILTER(ThisFilter, Z), NextPrimeFilter?) .
          ( rec-msg N? .
            if equal(mod(N, P), 0) then tau
            else snd-msg N to NextPrimeFilter fi
          ) * delta
       fi
     ) * delta
  endlet

toolbus(SIEVE(900))
