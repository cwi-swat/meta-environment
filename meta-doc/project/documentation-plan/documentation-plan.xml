<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<article>
  <title>Documentation Plan for the Meta-Environment</title>

  <authorblurb>
    <para><authorinitials>Paul</authorinitials> <authorinitials>Klint and
    Jurgen Vinju</authorinitials>, </para>

    <para><orgname>Centrum voor Wiskunde en Informatica</orgname>, <address>Amsterdam, The Netherlands</address><mediaobject>
        <imageobject>
          <imagedata fileref="./cwi.gif" />
        </imageobject>
      </mediaobject></para>
  </authorblurb>

  <section>
    <title>Background</title>

    <para>The ASF+SDF Meta-Environment is an interactive development
    environment for</para>

    <para><itemizedlist>
        <listitem>
          <para>defining domain-specific languages and the tools to support
          them, and</para>
        </listitem>

        <listitem>
          <para>performing analysis and transformation of existing
          software.</para>
        </listitem>
      </itemizedlist>See <uri>www.meta-environment.org</uri> for further
    details. We are planning to organize the development of this system in the
    fashion of an open source project. First of all, we will relabel the
    project as "Meta-Environment" <remark>(Is this the best name?)</remark>.
    Next we need to present our documentation in a coherent fashion. The
    purpose of the current document is twofold:</para>

    <itemizedlist>
      <listitem>
        <para>to describe a general documentation policy for the
        Meta-Environment, and</para>
      </listitem>

      <listitem>
        <para>to make a selection of tools and techniques that can be used to
        implement this policy.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>Current situation</title>

    <para>Currently, we use the following mechanisms to document (parts of)
    the system:</para>

    <itemizedlist>
      <listitem>
        <para>Scientific papers that describe specific techniques or case
        studies.</para>
      </listitem>

      <listitem>
        <para>LaTex documents to describe either the whole system
        (<emphasis>e.g</emphasis>. user manual) or specific tools or libraries
        (<emphasis>e.g</emphasis>., <productname>aterm library</productname>,
        <productname>toolbus</productname>). HyperLatex is being used for
        generating web pages from LaTex files.</para>
      </listitem>

      <listitem>
        <para>POD files for manual pages.</para>
      </listitem>

      <listitem>
        <para>API documentation generated with
        <application>javadoc</application>.</para>
      </listitem>

      <listitem>
        <para>Web pages in our SEN1 twiki (with frequently asked
        questions)</para>
      </listitem>
    </itemizedlist>

    <para>The bad thing about the current situation is that it does not
    provide:</para>

    <itemizedlist>
      <listitem>
        <para>Documentation on how to perform any specific task with the
        software</para>
      </listitem>

      <listitem>
        <para>Technical documentation on how it works on an engineering level
        (only on a scientific level)</para>
      </listitem>

      <listitem>
        <para>Community support (the only help can be provided by the
        developers, who do not always have the time)</para>
      </listitem>

      <listitem>
        <para>Up-to-date documentation with respect to user-interface and
        syntax issues</para>
      </listitem>

      <listitem>
        <para>An indexable overview of all documentation on the
        Meta-Environment</para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>The ideal situation</title>

    <para>Ideally, we want to present all information about our system in a
    unified manner. This includes:</para>

    <itemizedlist>
      <listitem>
        <para>High-level descriptions of purpose and architecture</para>
      </listitem>

      <listitem>
        <para>User documentation (how-to's, demonstrations, frequently asked
        questions)</para>
      </listitem>

      <listitem>
        <para>Detailed technical explanations of the design, algorithms and
        engineering trade-offs</para>
      </listitem>

      <listitem>
        <para>Interactive online demonstrations</para>
      </listitem>

      <listitem>
        <para>Descriptions of successful applications and application
        areas</para>
      </listitem>

      <listitem>
        <para>Open source project management issues (coding conventions,
        roadmaps)</para>
      </listitem>
    </itemizedlist>

    <para>Other information that is primarily relevant for the website:</para>

    <itemizedlist>
      <listitem>
        <para>Download area with instructions.</para>
      </listitem>

      <listitem>
        <para>Description of the licenses we are using.</para>
      </listitem>

      <listitem>
        <para>Access to bugtracker.</para>
      </listitem>

      <listitem>
        <para>Access to SVN repository.</para>
      </listitem>

      <listitem>
        <para>Access to (archived) mailing lists.</para>
      </listitem>
    </itemizedlist>

    <para>Documentation can be organized in various manners, e.g.
    task-oriented, technology-oriented, user-oriented, developer-oriented,
    etc. Another critical decision is to use large, integrated, manuals or
    more loosely coupled information. In the following subsections a more
    loosely coupled is proposed based on <emphasis>articles</emphasis> that
    fall a number of categoteries and follow common presentation
    styles.</para>

    <para>The general idea is that loosely coupled articles present well in a
    web site, and they can be easily ordered and collected in a more
    book-style oriented PDF format.</para>

    <para>We have contact with the following groups of people:</para>

    <itemizedlist>
      <listitem>
        <para>Users of the ASF+SDF Meta-Environment</para>
      </listitem>

      <listitem>
        <para>ASF+SDF Meta-Environment newbies</para>
      </listitem>

      <listitem>
        <para>Users of SDF</para>
      </listitem>

      <listitem>
        <para>Users of the ATerm library and ApiGen</para>
      </listitem>

      <listitem>
        <para>Bachelor and master students</para>
      </listitem>

      <listitem>
        <para>Developers of any of the components</para>
      </listitem>

      <listitem>
        <para>Advanced users (contributors of applications)</para>
      </listitem>

      <listitem>
        <para>Project managers</para>
      </listitem>

      <listitem>
        <para>Scientific colleagues working on related topics</para>
      </listitem>

      <listitem>
        <para>Scientific colleagues working on topics that could be
        applications of the Meta-Environment</para>
      </listitem>
    </itemizedlist>

    <para>To simplify this complex situation, we split these groups into two
    main groups: <emphasis role="bold">Users</emphasis> and <emphasis
    role="bold">Developers</emphasis>. Users are people that are not
    interested in the source code level of the software: they deal with the
    commandline and GUI interfaces, and nothing else. Developers are all other
    people. Documentation can be targets at <emphasis>Users</emphasis>, or at
    <emphasis>Developers</emphasis>, or at both at the same time. Then, we
    classify members of each group into maturarity levels:</para>

    <itemizedlist>
      <listitem>
        <para><emphasis role="bold">Newbie</emphasis>: has expressed the
        intention of participating, does not know where to start, or where to
        end. Does not have an idea of scope. Has to deal with a new
        paradigm.</para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Professional</emphasis>: has adequate
        experience, has a certain overview of the system, knows the scope and
        limitations, can provide feedback to
        <emphasis>Newbies</emphasis></para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Specialist</emphasis>: has in-depth
        understanding of one or more particular products, can provide feedback
        to <emphasis>Professionals</emphasis></para>
      </listitem>

      <listitem>
        <para><emphasis role="bold">Owner</emphasis>: is the representative of
        one or more particular products or applications, can provide feedback
        to and stimulate <emphasis>Specialists</emphasis></para>
      </listitem>
    </itemizedlist>

    <para>This classification helps us to think about the audience of a
    certain document. Each document should make clear at the beginning what
    the expected audience is.</para>

    <para>The following sections describe the top-level document categories
    that we have in mind.</para>

    <section>
      <title>Getting started ...</title>

      <para><emphasis>Getting started</emphasis> articles describe howto
      download, install and run our software. This is a separate category
      because these articles need to be found easily online (i.e. at the top
      of a page).The idea is of course to make the technology as accessible as
      possible. These articles provide pointers to other articles and online
      resources. Typical issues:</para>

      <itemizedlist>
        <listitem>
          <para>Downloading and installing SDF (on linux, maxos,
          windows)</para>
        </listitem>

        <listitem>
          <para>Downloading and installing the ASF+SDF Meta-Environment</para>
        </listitem>

        <listitem>
          <para>Downloading and installing the ToolBus</para>
        </listitem>

        <listitem>
          <para>Starting the ASF+SDF Meta-Environment</para>
        </listitem>

        <listitem>
          <para>Starting the SDF Meta-Environment</para>
        </listitem>

        <listitem>
          <para>The basic SDF commandline</para>
        </listitem>

        <listitem>
          <para>The basic ASF commandline</para>
        </listitem>
      </itemizedlist>

      <para>Characterization of <emphasis>Getting started</emphasis>
      articles:</para>

      <itemizedlist>
        <listitem>
          <para>Targeted at users with a modest technical background.</para>
        </listitem>

        <listitem>
          <para>Short: 1-2 pages.</para>
        </listitem>

        <listitem>
          <para>Reference immediately to both <emphasis>How to</emphasis>
          documents, <emphasis>Demonstrations</emphasis> and
          <emphasis>Understanding</emphasis> documents</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>How to ...</title>

      <para><emphasis>How to</emphasis> articles provide tutorials for various
      aspects of the software. These articles are written with a particular
      use-case in mind, and provide a domain specific view of the technology.
      The focus is on what you can do with it, and not on how it actually
      works.</para>

      <itemizedlist>
        <listitem>
          <para>How to write a grammar in SDF</para>
        </listitem>

        <listitem>
          <para>How to write equations and functions in ASF</para>
        </listitem>

        <listitem>
          <para>How to fix a parse error</para>
        </listitem>

        <listitem>
          <para>How to fix an ambiguity</para>
        </listitem>

        <listitem>
          <para>How to analyse source code in ASF</para>
        </listitem>

        <listitem>
          <para>How to transform source code in ASF</para>
        </listitem>

        <listitem>
          <para>How to specify language semantics in ASF</para>
        </listitem>

        <listitem>
          <para>How to write ToolBus scripts</para>
        </listitem>

        <listitem>
          <para>How to extend the Meta-Environment</para>
        </listitem>

        <listitem>
          <para>How to use the SDF commandline tools</para>
        </listitem>

        <listitem>
          <para>How to use the ASF commandline tools</para>
        </listitem>

        <listitem>
          <para>How to prototype a domain specific language in ASF+SDF</para>
        </listitem>

        <listitem>
          <para>How to use the generic debugger TIDE</para>
        </listitem>

        <listitem>
          <para>How to write parameterized ASF+SDF modules</para>
        </listitem>
      </itemizedlist>

      <para>The above articles may be cross-linked. Especially if there is a
      hierarchical dependency such as: 'How to analyse source code in ASF',
      which references 'How to write a grammar in SDF'.</para>

      <para>We formulate a number of requirements for each of these
      <emphasis>How to's:</emphasis></para>

      <itemizedlist>
        <listitem>
          <para>Start with a summary of tasks, including a work-flow
          diagram</para>
        </listitem>

        <listitem>
          <para>Targeted at either <emphasis role="bold">Newbie
          Users</emphasis> or <emphasis role="bold">Professional
          Users</emphasis></para>
        </listitem>

        <listitem>
          <para>Mention the necessary knowledge and experience of the
          user</para>
        </listitem>

        <listitem>
          <para>Written by either <emphasis role="bold">Specialist
          Users</emphasis> or <emphasis
          role="bold">Developers</emphasis></para>
        </listitem>

        <listitem>
          <para>Reference <emphasis>Understanding</emphasis> documents where
          the information would become to technical (example: explain how to
          use SDF priorities and what for, but not how they work)</para>
        </listitem>

        <listitem>
          <para>Avoid the use of screen-shots, and other volatile details
          (provide a reference to a <emphasis>Demonstration</emphasis>)</para>
        </listitem>

        <listitem>
          <para>Medium sized (up to 10 pages, average 5)</para>
        </listitem>

        <listitem>
          <para>Targeted at users with modest technical background</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Applications ...</title>

      <para>Contains summaries of successful applications of the software. We
      will invite our main users to write a few pages on their particular
      subject.</para>

      <itemizedlist>
        <listitem>
          <para>Short (1-3) pages</para>
        </listitem>

        <listitem>
          <para>Written by <emphasis role="bold">Professional Users</emphasis>
          or <emphasis role="bold">Developers</emphasis></para>
        </listitem>

        <listitem>
          <para>Targeted at <emphasis role="bold">Users</emphasis></para>
        </listitem>

        <listitem>
          <para>References to relevant websites and scientific
          publications</para>
        </listitem>

        <listitem>
          <para>Mentions domain (application area)</para>
        </listitem>

        <listitem>
          <para>Mentions software used</para>
        </listitem>

        <listitem>
          <para>Mentions future work</para>
        </listitem>

        <listitem>
          <para>Mentions all scientific and industrial partners</para>
        </listitem>

        <listitem>
          <para>Mentions all people involved</para>
        </listitem>

        <listitem>
          <para>The list itself is worth publishing first-class on the website
          (including the names of the authors)</para>
        </listitem>

        <listitem>
          <para>Each application is one docbook file</para>
        </listitem>

        <listitem>
          <para>If possible, each application has a correspondong
          <emphasis>Demonstration</emphasis></para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Demonstrations</title>

      <para>We will use interactive demonstrations (using Flash?) to
      demonstrate GUI related features. These demonstrations:</para>

      <para><itemizedlist>
          <listitem>
            <para>Provide an overview of an <emphasis>How to</emphasis>
            document</para>
          </listitem>

          <listitem>
            <para>Detail typical GUI related stuff (that is likely to be hard
            to guess, but also highly volatile)</para>
          </listitem>

          <listitem>
            <para>Typical applications (demonstrations of COBOL
            transformations, e.g. For use in presentations)</para>
          </listitem>
        </itemizedlist></para>
    </section>

    <section>
      <title>Courses</title>

      <para>The courses section of the documentation contains slides and
      hand-outs for use in bachelor and master level courses on
      Meta-Environment related subjects. Since layout is very important for
      slides, we allow powerpoint, open-office and latex documents.</para>
    </section>

    <section>
      <title>Understanding ...</title>

      <para>Articles in the category <emphasis>understanding</emphasis>
      explain a fundamental concept.</para>

      <itemizedlist>
        <listitem>
          <para>Understanding the architecture of the Meta-Environment</para>
        </listitem>

        <listitem>
          <para>Understanding ATerm data representation and
          manipulation</para>
        </listitem>

        <listitem>
          <para>Understanding SDF disambiguation and filtering</para>
        </listitem>

        <listitem>
          <para>Understanding ASF traversal functions</para>
        </listitem>

        <listitem>
          <para>Understanding ASF conditional term rewriting</para>
        </listitem>

        <listitem>
          <para>Understanding SDF grammar normalization</para>
        </listitem>

        <listitem>
          <para>Understanding source code locations</para>
        </listitem>

        <listitem>
          <para>Understanding SDF scannerless generalized LR parsing</para>
        </listitem>

        <listitem>
          <para>Understanding ToolBus coordination middleware</para>
        </listitem>

        <listitem>
          <para>Understanding the Relational Calculus</para>
        </listitem>

        <listitem>
          <para>Understanding TIDE, the language independent debugging
          interface</para>
        </listitem>

        <listitem>
          <para>Understanding the connection between ASF and SDF</para>
        </listitem>

        <listitem>
          <para>Understanding SDF parse trees</para>
        </listitem>

        <listitem>
          <para>Understanding ATerm API generation</para>
        </listitem>

        <listitem>
          <para>Understanding SDF API generation</para>
        </listitem>

        <listitem>
          <para>Understanding Autobundle source code composition tool</para>
        </listitem>

        <listitem>
          <para>Understanding Sisyphus modular continuous integration
          toolkit</para>
        </listitem>
      </itemizedlist>

      <para>Typically these documents have the following properties:</para>

      <itemizedlist>
        <listitem>
          <para>Written for a more specialized audience (both developers and
          users)</para>
        </listitem>

        <listitem>
          <para>Provide references to scientific publications</para>
        </listitem>

        <listitem>
          <para>Arbitrary length (average 10-15 pages), but shorter is
          better!</para>
        </listitem>

        <listitem>
          <para>Starts with explaining it's position relative to the rest of
          the software</para>
        </listitem>

        <listitem>
          <para>Provides plenty links to related work and related
          software</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Scientific Publications</title>

      <para>This category is targeted at the scientific audience, it is a
      bibliography of our scientific papers, including literal pdf or
      reference to online resource. This can be organized as one docbook
      bibliography file.</para>
    </section>

    <section>
      <title>Project managament ...</title>

      <para><itemizedlist>
          <para>The project management category contains information for
          developers</para>

          <listitem>
            <para>Documentation plan</para>
          </listitem>

          <listitem>
            <para>Communication plan</para>
          </listitem>

          <listitem>
            <para>Software process standard</para>
          </listitem>

          <listitem>
            <para>How to document source code</para>
          </listitem>

          <listitem>
            <para>How to use version control</para>
          </listitem>

          <listitem>
            <para>Coding standards</para>
          </listitem>

          <listitem>
            <para>Roadmaps (per main topic such as SDF, ASF, ToolBus, ATerms,
            Sisyphus)</para>
          </listitem>

          <listitem>
            <para>Testing plans</para>
          </listitem>

          <listitem>
            <para>Source code distribution and source code composition
            manual</para>
          </listitem>
        </itemizedlist></para>
    </section>

    <section>
      <title>Source code documentation</title>

      <para>This is the documentation located with and inside the source
      code:</para>

      <para><itemizedlist>
          <listitem>
            <para>The documentation is organized per package</para>
          </listitem>

          <listitem>
            <para>Every package will have a 'make doc' target, that will
            generate a web page with in <filename>index.html</filename> file
            in <filename>./doc/html</filename></para>
          </listitem>

          <listitem>
            <para>The documentation resides mainly <emphasis>inside</emphasis>
            the source code (such that it can migrate with it)</para>
          </listitem>

          <listitem>
            <para>Only one API, or one tool in one package, such that
            documentation is easier (work in progress)</para>
          </listitem>

          <listitem>
            <para>For C packages we use doxygen</para>
          </listitem>

          <listitem>
            <para>Fox Java packages we use javadoc</para>
          </listitem>

          <listitem>
            <para>For other languages we will extend doxygen with a DSL plugin
            (e.g. ToolBus, SDF)</para>
          </listitem>
        </itemizedlist></para>

      <para>For each package we need:</para>

      <itemizedlist>
        <listitem>
          <para>A global description of purpose and main use cases (to be
          located in the MAIN HEADER FILE of a tool/library, using the
          <code>\mainpage</code> command of doxygen). This should reference to
          other documentation sources such as <emphasis>How to's</emphasis>,
          <emphasis>Understanding</emphasis> and
          <emphasis>Demonstrations</emphasis></para>
        </listitem>

        <listitem>
          <para>A manpage-like description of command-line use of that package
          (to be located in the directory that contains the
          <function>main()</function> function of the tool, and written using
          <productname>docbook</productname>)</para>
        </listitem>

        <listitem>
          <para>Description of the APIs provided by the package (using the
          doxygen <code>\groupdef</code> command (although we strive to have
          only on API in one package)</para>
        </listitem>
      </itemizedlist>
    </section>
  </section>

  <section>
    <title>How to get there?</title>

    <para>It seems that the most widely used technology for documenting
    software projects is DocBook (see, <ulink
    url="http://www.docbook.org">www.docbook.org</ulink>). Docbook is an
    XML-based standard for the semantic mark-up of text and can be used to
    generate a wide variety of output formats including HTML, PDF, man pages,
    javahelp, and eclipsehelp. This means that we can use a single source for
    our webpages, interactive help and printed documentation.</para>

    <para>The downside of using DocBook is that we have to learn yet another
    text processing technology. The number of predefined tags in DocBook is
    large (400) and the markup is more verbose than, for instance,
    LaTex.</para>

    <para>I have tried a number of DocBook editors including:</para>

    <itemizedlist>
      <listitem>
        <para>The <application>xxe</application> editor by XMLMind (<ulink
        url="http://xmlmind.com.xmleditor">www.xmlmind.com/xmleditor</ulink>).
        The standard edition of <application>xxe</application> is freely
        available.</para>
      </listitem>

      <listitem>
        <para>The Eclipse-based editor Vex (<ulink
        url="http://vex.sourceforge.net">vex.sourceforge.net</ulink>).</para>
      </listitem>

      <listitem>
        <para>The conglomerate editor (<ulink
        url="http://www.conglomerate.org">www.conglomerate.org</ulink>).</para>
      </listitem>

      <listitem>
        <para>The nXML extention of <application>emacs</application> (<ulink
        url="http://hack.oreilly.com/pub/h/2044">hacks.oreilly.com/pub/h/2044</ulink>).</para>
      </listitem>

      <listitem>
        <para>The DocBook extension of <application>openoffice</application>
        (<ulink
        url="http://xml.openoffice.org/xmerge/docbook/index.html">xml.openoffice.org/xmerge/docbook/index.html</ulink>).</para>
      </listitem>
    </itemizedlist>

    <para>Based on this experience I recommend to use
    <application>xxe</application> for wysiwyg editing and
    <application>emacs</application> for editing of the XML source.</para>
  </section>

  <section>
    <title>DocBook resources</title>

    <para>Useful links related to DocBook:</para>

    <itemizedlist>
      <listitem>
        <para><ulink url="http://www.docbook.org">www.docbook.org</ulink> (see
        in particular the DocBook wiki at <ulink
        url="http://wiki.docbook.org">wiki.docbook.org</ulink> with many
        tutorials, tools and examples)</para>
      </listitem>

      <listitem>
        <para>The DocBook project (<ulink
        url="http://docbook.sourceforge.net">docbook.sourceforge.net</ulink>)</para>
      </listitem>
    </itemizedlist>

    <para>Useful books related to DocBook are:</para>

    <itemizedlist>
      <listitem>
        <para>N. Walsh and L. Mueller, <emphasis>DocBook: The Definitive
        Guide</emphasis>, O'Reilly, 1999. See also <ulink
        url="http://docbook.org/tdg">www.docbook.org/tdg</ulink>.</para>
      </listitem>

      <listitem>
        <para>Bob Stayton, DocBook XSL, The Complete Guide, Sagehill, 2005.
        See also <ulink
        url="http://www.sagehill.net/docbookxsl">www.sagehill.net/docbookxsl</ulink>.</para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>Plan</title>

    <itemizedlist>
      <listitem>
        <para>Switch to DocBook for writing all documentation.</para>
      </listitem>

      <listitem>
        <para>Existing documentation will be converted to DocBook.</para>
      </listitem>

      <listitem>
        <para>Split up ATerm manual into pieces: transform API to doxygen,
        ToolBus howto for connection tools, and Understanding ATerms for the
        rest, maybe a small 'How to program ATerms'</para>
      </listitem>

      <listitem>
        <para>Existing javadoc documentation in Java will be rendered by
        javadoc Doxygen and included in the Twiki pages.</para>
      </listitem>

      <listitem>
        <para>For all non-java documentation, we will start to write Doxygen
        comment</para>
      </listitem>

      <listitem>
        <para>Use Doxygen to generate documentation for all non-java packages,
        and include in the Twiki pages. (DONE)</para>
      </listitem>

      <listitem>
        <para>Add a <emphasis>doc</emphasis> target to all our packages and
        include the documentation in the website.</para>
      </listitem>

      <listitem>
        <para>Man pages and API documentation will be included in each
        package.</para>
      </listitem>

      <listitem>
        <para>Write manpages in docbook format (in the directory that contains
        the main() of the tool).</para>
      </listitem>

      <listitem>
        <para>More global documents will be included in the meta-doc
        package.</para>
      </listitem>

      <listitem>
        <para>Publish meta-doc documentation in the Twiki pages
        (continuously)</para>
      </listitem>

      <listitem>
        <para>Extend meta-studio with a java help browser. See http <ulink
        url="www.onjava.com/pub/a/onjave/2003/10/15/javahelp_docbook.html">www.onjava.com/pub/a/onjava/2003/10/15/javahelp_docbook.html</ulink></para>
      </listitem>

      <listitem>
        <para>Start write <emphasis>How to</emphasis> and
        <emphasis>Understanding</emphasis> articles, after prioritizing them,
        reusing parts of the old documentation</para>
      </listitem>

      <listitem>
        <para>Replace Pico guided tour by interactive
        <emphasis>Demonstration</emphasis></para>
      </listitem>

      <listitem>
        <para>Make packages smaller (one tool/library, one package)</para>
      </listitem>

      <listitem>
        <para>Invite people to write <emphasis>Applications</emphasis>
        documents: Ralph Oudejans (First result), Mark van den Brand (Risla,
        Elan4), Albert Hofkamp (Chi), Eelco Visser (StrategoXT),
        Pierre-Etienne Moreau (Tom), Peter Mosses (Action Notation), Jan-Friso
        Groote/Jaco van der Pol (muCRL)</para>
      </listitem>
    </itemizedlist>
  </section>
</article>