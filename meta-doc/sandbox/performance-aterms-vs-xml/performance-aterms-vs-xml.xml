<?xml version="1.0" encoding="UTF-8"?>
<article version="5.0" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:mml="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <title>Performance of ATerms compared with XML</title>

    <authorgroup>
      <author>
        <personname><firstname>Paul</firstname><surname>Klint</surname></personname>
      </author>

      <author>
        <personname><firstname>Arnold</firstname><surname>Lankamp</surname></personname>
      </author>
    </authorgroup>
  </info>

  <note>
    <para>This document is under development. See <xref
    linkend="section.to-do" />.</para>
  </note>

  <section>
    <title>Introduction</title>

    <para>ATerms are the ubiquitous data exchange format used in The
    Meta-Environment. ATerms were designed with a specific application domain
    in mind: exchanging parse tables, parse trees and other source code
    related data that emerges in the context of Interactive Development
    Environments and tools for source code analysis and transformation.</para>

    <para>World-wide, XML is the defacto standard for data exchange in many
    application domains and an obvious question to ask is how ATerms and XML
    compare regarding</para>

    <itemizedlist>
      <listitem>
        <para>speed (efficiency of reading and writing data), and</para>
      </listitem>

      <listitem>
        <para>size (the size of the intermediate data).</para>
      </listitem>
    </itemizedlist>

    <para>This document describes experiments to make this comparison. Our
    findings can be summarized as follows:</para>

    <itemizedlist>
      <listitem>
        <para>Writing ATerm ASCII and XML is about as fast.</para>
      </listitem>

      <listitem>
        <para>Parsing ATerm ASCII is both significantly slower and scales
        worse then XML (partially because of the sharing).</para>
      </listitem>

      <listitem>
        <para>ATerm ASCII is more compact (because we don't have close
        tags).</para>
      </listitem>

      <listitem>
        <para>ATerm SAF is useful for reading and writing large documents with
        lots of sharing.</para>
      </listitem>
    </itemizedlist>

    <para>In <xref linkend="section.considerations" /> we sketch the general
    considerations to be taken into account when performing such a comparions
    and in <xref linkend="section.experimental-setting" /> we describe the
    experimental setting. Results are presented in <xref
    linkend="section.results" /> and our overall conclusions can be found in
    <xref linkend="section.conclusions" />.</para>
  </section>

  <section xml:id="section.considerations">
    <title>Considerations</title>

    <para>There are various considerations that influence a fair comparison of
    ATerms and XML.</para>

    <section>
      <title>ATerms versus XML</title>

      <para>There are various differences between ATerms and XML that may
      affect a comparison:</para>

      <itemizedlist>
        <listitem>
          <para>ATerms may have annotations attached to each node; these
          annotations may contain arbitrary ATerms; XML trees may have
          attributes but they may only contain string values.</para>
        </listitem>

        <listitem>
          <para>The implementation of ATerms support the notion of maximal
          subterm sharing; XML has no counterpart for this.</para>
        </listitem>

        <listitem>
          <para>ATerms have a textual and a binary representation; XML only
          has a textual representation.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Potential influences on measurements</title>

      <itemizedlist>
        <listitem>
          <para>Although we would prefer to compare the concepts underlying
          ATerms and XML, it is unavoidable that we can only measure specific
          implementations of these concepts. The implementation and
          optimization effort invested in XML implementations is uncomparable
          to the effort invested in the ATerm implementation.</para>
        </listitem>

        <listitem>
          <para>ATerms only support US-ASCII characters, while XML supports
          Unicode.</para>
        </listitem>

        <listitem>
          <para>The following properties of test data may influence the
          result:</para>

          <itemizedlist>
            <listitem>
              <para>The size of the data.</para>
            </listitem>

            <listitem>
              <para>The amount of sharing.</para>
            </listitem>

            <listitem>
              <para>The number of different function symbols/tags that is
              used.</para>
            </listitem>

            <listitem>
              <para>The width and depth of the data.</para>
            </listitem>
          </itemizedlist>
        </listitem>

        <listitem>
          <para>We will compare Java implementations of ATerms and XML and the
          unpredictable effects of the HotSpot compiler has to be taken into
          account.</para>
        </listitem>
      </itemizedlist>
    </section>
  </section>

  <section xml:id="section.experimental-setting">
    <title>Experimental Setting</title>

    <para></para>

    <section>
      <title>The test data generator</title>

      <para>Due to the functional differences between ATerms and XML, we
      decided to create a synthetic benchmark that creates test data in both
      formats. The test data generator has the following parameters that are
      used to characterize the generated trees:</para>

      <itemizedlist>
        <listitem>
          <para>Number of nodes.</para>
        </listitem>

        <listitem>
          <para>Depth of the tree.</para>
        </listitem>

        <listitem>
          <para>Average arity.</para>
        </listitem>

        <listitem>
          <para>Percentage chance a node in the tree is shared.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Software versions</title>

      <para>For the benchmarks the following software was used:</para>

      <itemizedlist>
        <listitem>
          <para>Sun JDK 1.5.0_12</para>
        </listitem>

        <listitem>
          <para>ATerm-Java, version 1.7pre.24750.52534.</para>
        </listitem>

        <listitem>
          <para>Xerces-J, version 2.6.2 (incorperated in JDK 1.5.0_12).</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Hardware configuration</title>

      <para>The benchmark was executed on a machine with the following
      specifications:</para>

      <itemizedlist>
        <listitem>
          <para>Intel E6420 Core 2 Duo processor (2.13Ghz).</para>
        </listitem>

        <listitem>
          <para>2GB DDR-800 memory.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section>
      <title>Measurement procedure</title>

      <para></para>
    </section>
  </section>

  <section xml:id="section.results">
    <title>Results</title>

    <para></para>

    <section>
      <title>XML vs ATerm ASCII</title>

      <para></para>

      <section>
        <title>Speed comparison</title>

        <para></para>

        <mediaobject>
          <imageobject>
            <imagedata fileref="ATerm_vs_XML_writing.png"></imagedata>
          </imageobject>
        </mediaobject>

        <para></para>

        <mediaobject>
          <imageobject>
            <imagedata fileref="ATerm_vs_XML_reading.png"></imagedata>
          </imageobject>
        </mediaobject>
      </section>

      <section>
        <title>Size comparison</title>

        <para></para>

        <mediaobject>
          <imageobject>
            <imagedata fileref="ATerm_vs_XML_size.png"></imagedata>
          </imageobject>
        </mediaobject>
      </section>
    </section>

    <section>
      <title>ATerm ASCII vs SAF</title>

      <para></para>

      <section>
        <title>Speed comparison</title>

        <para></para>

        <mediaobject>
          <imageobject>
            <imagedata fileref="ASCII_vs_SAF_writing.png"></imagedata>
          </imageobject>
        </mediaobject>

        <para></para>

        <mediaobject>
          <imageobject>
            <imagedata fileref="ASCII_vs_SAF_reading.png"></imagedata>
          </imageobject>
        </mediaobject>
      </section>

      <section>
        <title>Size comparison</title>

        <para></para>

        <mediaobject>
          <imageobject>
            <imagedata fileref="ASCII_vs_SAF_size.png"></imagedata>
          </imageobject>
        </mediaobject>
      </section>
    </section>
  </section>

  <section xml:id="section.conclusions">
    <title>Conclusions</title>

    <para>TODO</para>

    <para><itemizedlist>
        <listitem>
          <para>Writing ATerm ASCII and XML is about as fast.</para>
        </listitem>

        <listitem>
          <para>Parsing ATerm ASCII is both significantly slower and scales
          worse then XML (partially because of the sharing).</para>
        </listitem>

        <listitem>
          <para>ATerm ASCII is more compact (because we don't have close
          tags).</para>
        </listitem>

        <listitem>
          <para>ATerm SAF is useful for reading and writing large documents
          with lots of sharing.</para>
        </listitem>
      </itemizedlist></para>

    <para>TODO</para>
  </section>

  <section>
    <title xml:id="section.to-do">To Do</title>

    <itemizedlist>
      <listitem>
        <para>Write down the findings in the introduction in a better
        way.</para>
      </listitem>

      <listitem>
        <para>Write something usefull in the conclusion chapter.</para>
      </listitem>

      <listitem>
        <para>Paste the graphs in the results chapter.</para>
      </listitem>
    </itemizedlist>
  </section>
</article>