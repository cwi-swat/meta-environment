module Declarations

imports Types Expressions

hiddens
context-free start-symbols
        Declaration

exports
sorts Declaration Stat VarDecl VarDeclInit FunBody Case

context-free syntax
   Type {Variable ","}+          -> VarDecl {cons("variable-decl")}

context-free syntax
   "var" {VarDeclInit ";"}+      -> Declaration {cons("variables")}
   VarDecl (":=" Expression)?    -> VarDeclInit

context-free syntax
   "fun" Type IdCon ("(" {VarDecl  ","}* ")")? "{" FunBody "}"  -> Declaration {cons("function")}
   (VarDeclInit ";")* Stat                                      -> FunBody
   Pattern "=>" Stat ("when" {Predicate ","}+ )?                -> Case
   "select" "(" Expression ")" "{" Case+ "}"                    -> Stat
   Expression                                                   -> Stat
   Pattern                                                      -> Stat



       
