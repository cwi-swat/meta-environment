module Declarations

imports Types Expressions

hiddens
context-free start-symbols
        Declaration

exports
sorts Declaration VarDecl VarDeclInit FunBody SimpleCase SimpleCases RewriteCase RewriteCases

context-free syntax
   Type {Variable ","}+                                            -> VarDecl {cons("variable-decl")}

context-free syntax
   "var" {VarDeclInit ";"}+                                        -> Declaration {cons("variables")}
   VarDecl (":=" Expression)?                                      -> VarDeclInit

context-free syntax
   "fun" Type Variable ("(" {VarDecl  ","}* ")")? "{" FunBody "}"  -> Declaration {cons("function")}
   (VarDeclInit ";")* Expression                                   -> FunBody

   Pattern ("when" {Predicate ","}+ )?                             -> SimpleCase
   "{" SimpleCase+ "}"                                             -> SimpleCases
   Pattern "=>" Expression ("when" {Predicate ","}+ )?             -> RewriteCase
   "{" RewriteCase+ "}"                                            -> RewriteCases

   "select" Expression RewriteCases                                -> Expression
   "replace" Expression Strategy RewriteCases                      -> Expression
   "search" Expression Strategy SimpleCases                        -> Expression
 

       
