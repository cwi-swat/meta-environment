module TypeOperations

imports basic/Booleans basic/Comments
imports Types

exports
context-free syntax
   Name "==" Name                              -> Boolean         
   OptNamedTypes "<:" OptNamedTypes            -> Boolean
   Type "<:" Type                              -> Boolean
   incomparable(OptNamedTypes, OptNamedTypes)  -> Boolean
   may-overload(FunctionType, FunctionType)    -> Boolean

context-free priorities
  Type "<:" Type                      -> Boolean >
  OptNamedTypes "<:" OptNamedTypes    -> Boolean

context-free start-symbols
   Boolean

exports
  variables
   "T" [0-9\']*    -> Type
   "N" [0-9\']*    -> Name
   "ONT" [0-9\']*  -> OptNamedType
   "ONTs" [0-9\']* -> {OptNamedType ","}+
