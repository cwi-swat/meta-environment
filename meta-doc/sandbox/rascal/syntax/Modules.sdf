module Modules

imports Declarations
        Types
        basic/Comments

hiddens
  context-free start-symbols
    Module

exports
  sorts Module ModuleWord ModuleName Import 
        ModuleParameters ModuleActuals ImportedModule
        Renaming Renamings Visibility 

  lexical syntax
    letters:[A-Za-z0-9\_\-]+                       -> ModuleWord {cons("word")} 
    ModuleWord                                     -> ModuleName {cons("leaf")} 
    sep:"/" basename:ModuleName                    -> ModuleName {cons("root")} 
    dirname:ModuleWord sep:"/" basename:ModuleName -> ModuleName {cons("path")} 

  lexical restrictions
    ModuleName -/- [A-Za-z0-9\_\-\/]

  context-free syntax

    "[" {TypeVar ","}+ "]"                         -> ModuleParameters
    "[" {Type ","}+ "]"                            -> ModuleActuals

    ModuleName ModuleActuals? Renamings?           -> ImportedModule
    Name "=>" Name                                 -> Renaming
    "{" {Renaming ","}+ "}"                        -> Renamings

    "import" ImportedModule ";"?                   -> Import
    "extend" ImportedModule ";"?                   -> Import

    ("public" | "private")?                        -> Visibility  {cons("visibility")}

    "module" ModuleName ModuleParameters? 
       DeclarationAnnotations
       Import* 
       (Visibility Declaration ";"?)*              -> Module  

%% Reserved words
     "public" | "private" | "import" | 
     "extend" | "module"                           -> Reserved