module Modules

imports Declarations
        Types
        basic/Comments

hiddens
context-free start-symbols
  Module

exports
sorts Module ModuleWord ModuleName Import 
      ModuleParameters ModuleActuals ImportedModule
      Renaming Renamings

lexical syntax
  letters:[A-Za-z0-9\_\-]+                       -> ModuleWord {cons("word")} 
  ModuleWord                                     -> ModuleName {cons("leaf")} 
  sep:"/" basename:ModuleName                    -> ModuleName {cons("root")} 
  dirname:ModuleWord sep:"/" basename:ModuleName -> ModuleName {cons("path")} 

lexical restrictions
  ModuleName -/- [A-Za-z0-9\_\-\/]

context-free syntax

    "[" {TypeVar ","}+ "]"                       -> ModuleParameters
    "[" {Type ","}+ "]"                          -> ModuleActuals

    ModuleName ModuleActuals? Renamings?         -> ImportedModule
    Name "=>" Name                               -> Renaming
    "{" {Renaming ","}+ "}"                      -> Renamings

    DeclAnnos "import" ImportedModule ";"        -> Import
    DeclAnnos "extend" ImportedModule ";"        -> Import

    DeclAnnos "module" ModuleName ModuleParameters? 
             Import* 
             (DeclAnnos Declaration ";"?)*       -> Module  

%% Define reserved words
    "import" | "module"                          -> Name {reject}
