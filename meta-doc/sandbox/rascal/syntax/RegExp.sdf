module RegExp

imports Names
        Expressions
        languages/sdf2/syntax/Character-Class

exports
  sorts
      RegExp RegModifier 

  lexical syntax

  %% Single characters
         ~[\?\*\+\|\<\>\\\/\^\$\(\)]                 -> RegExp

  %% Character Classes
         CharClass                                   -> RegExp
         "\\" [dDsSwW]                               -> RegExp
         "\\" [pP] "{" Name "}"                      -> RegExp

  lexical priorities
  %% Operators
         { RegExp "*"                                -> RegExp
           RegExp "+"                                -> RegExp
           RegExp "?"                                -> RegExp
         } >
         RegExp RegExp                               -> RegExp {left} >
         RegExp "|" RegExp                           -> RegExp {left}
  lexical syntax
         "(" RegExp ")"                              -> RegExp
  %% Anchors
         [\^\$]                                      -> RegExp
         "\\" [bBAZz]                                -> RegExp
  %% Variables          
         "<" Name ">"                                -> RegExp
         "<" Name ":" RegExp ">"                     -> RegExp
         "<" Call ">"                                -> RegExp
 
  %% Modifiers: case-independent (i), multi-line (m), single-line (s)
  %% different line terminators (d)       
         [imsd]                                      -> RegModifier
