module Types

imports basic/Whitespace
        languages/sdf2/syntax/Regular
        languages/sdf2/syntax/Sorts
        languages/sdf2/syntax/Literals
        Variables

hiddens
context-free start-symbols
  Type

exports
sorts Type LabelledType LabelledTypes TypeVar 
      BasicType StructuredType FunctionType PatternType

context-free syntax

   "&" Variable                                            -> TypeVar
   TypeVar                                                 -> Sort

   Type Variable?                                          -> LabelledType

   "bool"                                                  -> BasicType {cons("bool-type")} 
   "int"                                                   -> BasicType {cons("int-type")} 
   "str"                                                   -> BasicType {cons("str-type")} 
   "loc"                                                   -> BasicType {cons("loc-type")}
   "any"                                                   -> BasicType {cons("any-type")}
   
   {LabelledType ","}+                                     -> LabelledTypes
   "list" "[" Type "]"                                     -> StructuredType {cons("list-type")} 
   "set" "[" Type "]"                                      -> StructuredType {cons("set-type")}
   "rel" "[" LabelledTypes "]"                             -> StructuredType {cons("rel-type")}
   "<" LabelledType "," LabelledTypes ">"                  -> StructuredType {cons("tuple-type")}
   Symbol                                                  -> StructuredType {cons("symbol-type")}

   "fun" Type Variable "(" LabelledTypes ")"               -> FunctionType {cons("function-type")}

   "pat" Type Variable "(" LabelledTypes ")"               -> PatternType {cons("patttern-type")}

   BasicType | StructuredType | FunctionType | PatternType -> Type
 
   "(" Type ")"                                            -> Type {bracket}     

