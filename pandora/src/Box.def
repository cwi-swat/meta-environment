
definition
module languages/box/syntax/Fonts

imports languages/box/syntax/Basic
imports basic/Comments

exports
  sorts FontId
  lexical syntax
    [A-Za-z]+ -> FontId {cons("default")}

exports
  sorts FontParam FontOption FontValue FontOperator
  context-free syntax
    NatCon                   -> FontValue {cons("natural")}
    FontId                   -> FontValue {cons("font-id")}
    FontParam "=" FontValue  -> FontOption
    "F" FontOption*          -> FontOperator
    FontOperator "[" Box "]" -> Box {cons("font-operator")}

    "fn" -> FontParam {cons("name")}
    "fm" -> FontParam {cons("family")}
    "se" -> FontParam {cons("series")}
    "sh" -> FontParam {cons("shape")}
    "sz" -> FontParam {cons("size")}
    "cl" -> FontParam {cons("color")}

    "KW"      -> FontOperator {cons("keyword")}
    "VAR"     -> FontOperator {cons("variable")}
    "NUM"     -> FontOperator {cons("number")}
    "MATH"    -> FontOperator {cons("math")}
    "ESC"     -> FontOperator {cons("escape")}
    "COMM"    -> FontOperator {cons("comment")}
    "STRING"  -> FontOperator {cons("string")}
module languages/box/syntax/Comments

%% The comments occurring in the orginal text must be
%% restored in the resulting text. 

imports languages/box/syntax/Basic
exports
  context-free syntax
    "COMM" "[" list: Box* "]" -> Box

module basic/NatCon

exports

sorts NatCon

lexical syntax
  
 [0-9]+ -> NatCon {cons("digits")}

lexical restrictions

 NatCon -/- [0-9]
module basic/StrCon

exports

sorts StrCon StrChar

lexical syntax
    "\\n"                      -> StrChar {cons("newline")}
    "\\t"                      -> StrChar {cons("tab")}
    "\\\""                     -> StrChar {cons("quote")}
    "\\\\"                     -> StrChar {cons("backslash")}
    "\\" a:[0-9]b:[0-9]c:[0-9] -> StrChar {cons("decimal")}
    ~[\0-\31\n\t\"\\]          -> StrChar {cons("normal")}

    [\"] chars:StrChar* [\"]   -> StrCon  {cons("default")}
module basic/Whitespace

exports
  lexical syntax
    [\ \t\n\r]	-> LAYOUT {cons("whitespace")}

  context-free restrictions
    LAYOUT? -/- [\ \t\n\r]
module basic/Comments

imports
  basic/Whitespace

exports
  lexical syntax
    "%%" line:~[\n]* "\n"	-> LAYOUT {cons("line")}
    "%" content:~[\%\n]+ "%"	-> LAYOUT {cons("nested")}
  context-free restrictions
    LAYOUT? -/- [\%]
module languages/box/syntax/Basic

imports basic/Comments
imports basic/StrCon
imports basic/NatCon
        
exports
  sorts SpaceSymbol SpaceOption

  context-free syntax
    "hs"                    -> SpaceSymbol {cons("horizontal")}
    "vs"                    -> SpaceSymbol {cons("vertical")}
    "is"                    -> SpaceSymbol {cons("indentation")}
    "ts"                    -> SpaceSymbol {cons("tabstop")}
    SpaceSymbol "=" NatCon  -> SpaceOption     

exports
  sorts Box

  context-free syntax
    StrCon                                       -> Box {cons("string")}
    "H" options:SpaceOption* "[" list:Box* "]"   -> Box {cons("h")}
    "V" options:SpaceOption* "[" list:Box* "]"   -> Box {cons("v")}
    "HV" options:SpaceOption* "[" list:Box* "]"  -> Box {cons("hv")}
    "HOV" options:SpaceOption* "[" list:Box* "]" -> Box {cons("hov")}
    "I" options:SpaceOption* "[" Box "]"         -> Box {cons("i")}
    "WD" "[" Box "]"                             -> Box {cons("wd")}
module languages/box/syntax/Alignments

imports languages/box/syntax/Basic

exports
  sorts AlignmentOption AlignmentOptions
  context-free syntax
    "A" alignments:AlignmentOptions options:SpaceOption* "[" list:Box* "]" 
      -> Box {cons("alignment")}
    "R" "[" list:Box* "]" -> Box {cons("row")}

    "l" options:SpaceOption* -> AlignmentOption {cons("left")}
    "c" options:SpaceOption* -> AlignmentOption {cons("centre")}
    "r" options:SpaceOption* -> AlignmentOption {cons("right")}

    "(" {AlignmentOption ","}* ")" -> AlignmentOptions

module languages/box/syntax/Box

imports languages/box/syntax/Alignments
imports languages/box/syntax/Comments
imports languages/box/syntax/Fonts

hiddens
  context-free start-symbols
    Box
