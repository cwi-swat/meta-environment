#ifndef __MODULE_MANAGER_IDEF
#define __MODULE_MANAGER_IDEF

tool module-manager is { 
  command = "module-manager"
}

process ModuleManager is
let
  MM : module-manager,
  Dependency : term,
  Dependencies : list,
  From : int,
  Id : term,
  Key : term,
  ModuleId : int,
  Modulename : term,
  Modules : list,
  Namespace : term,
  NewModuleId : term,
  Path : str,
  To : int,
  Value : term
in
  execute(module-manager, MM?)
  .
  (
    rec-msg(mm-get-module-id-by-attribute(Namespace?, Key?, Value?))
    . snd-eval(MM, get-module-id-by-attribute(Namespace, Key, Value))
    .
    (
      rec-value(MM, module-id(ModuleId?))
      . snd-msg(mm-module-id(Namespace, Key, Value, ModuleId))
    +
      rec-value(MM, no-such-module)
      . snd-msg(mm-no-such-module(Namespace, Key, Value))
    )
  +
    rec-msg(mm-create-module)
    . snd-eval(MM, create-module)
    . rec-value(MM, module-id(ModuleId?))
    . snd-msg(mm-module-created(ModuleId))
  +
    rec-msg(mm-create-module(Modulename?))
    . snd-eval(MM, create-module(Modulename))
    . rec-value(MM, module-id(ModuleId?))
    . snd-msg(mm-module-created(Modulename, ModuleId))
  +
    rec-msg(mm-delete-module(ModuleId?))
    . snd-do(MM, delete-module(ModuleId))
  +
    rec-msg(mm-add-attribute(ModuleId?, Namespace?, Key?, Value?))
    . snd-do(MM, add-attribute(ModuleId, Namespace, Key, Value))
  +
    rec-msg(mm-get-attribute(ModuleId?, Namespace?, Key?))
    . snd-eval(MM, get-attribute(ModuleId, Namespace, Key))
    .
    (
      rec-value(MM, attribute(Value?))
      . snd-msg(mm-attribute(ModuleId, Namespace, Key, Value))
    +
      rec-value(MM, no-such-module)
      . snd-msg(mm-no-such-module(ModuleId, Namespace, Key))
    +
      rec-value(MM, no-such-key)
      . snd-msg(mm-no-such-key(ModuleId, Namespace, Key))
    )
  +
    rec-msg(mm-delete-attribute(ModuleId?, Namespace, Key?))
    . snd-do(MM, delete-attribute(ModuleId, Namespace, Key))
  +
    rec-msg(mm-add-dependency(From?, To?))
    . snd-do(MM, add-dependency(From, To))
  +
    rec-msg(mm-delete-dependency(From?, To?))
    . snd-do(MM, delete-dependency(From, To))
  +
    rec-msg(mm-delete-dependencies(ModuleId?))
    . snd-do(MM, delete-dependencies(ModuleId))
  +
    /* TODO: Remove this message */
    rec-msg(mm-get-dependencies-by-attribute(Namespace?, Key?))
    . snd-eval(MM, get-dependencies-by-attribute(Namespace, Key))
    . rec-value(MM, dependencies-by-attribute(Dependencies?))
    . snd-msg(mm-dependencies-by-attribute(Namespace, Key, Dependencies))
/*
  +
    rec-msg(mm-add-dependencies(Dependencies?))
    . snd-do(MM, add-dependencies(Dependencies))
  +
    rec-msg(mm-get-depending-modules(ModuleId?))
    . snd-eval(MM, get-depending-modules(ModuleId))
    .
    (
      rec-value(MM, depending-modules(Modules?))
      . snd-msg(mm-depending-modules(ModuleId, Modules))
    +
      rec-value(MM, no-such-module(ModuleId))
      . snd-msg(mm-no-such-module(ModuleId))
    )
  +
    rec-msg(mm-get-dependent-modules(ModuleId?))
    . snd-eval(MM, get-dependent-modules(ModuleId))
    .
    (
      rec-value(MM, dependent-modules(Modules))
      . snd-msg(mm-dependent-modules(ModuleId, Modules))
    +
      rec-value(MM, no-such-module)
      . snd-msg(mm-no-such-module(ModuleId))
    )
*/
  )
  *
  delta
endlet

toolbus(ModuleManager)

#endif
