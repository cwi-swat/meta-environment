[[Production,lexical-constructor,prod([lit(<formal-name(str)>),cf(opt(layout)),lit("("),cf(opt(layout)),cf(iter-star(sort("CHAR"))),cf(opt(layout)),lit(")")],<symbol(Symbol)>,attrs([id("GEN-LexConsFuncs")]))],[Implies,lex-to-cf,appl(prod([lex(sort("Implies"))],cf(sort("Implies")),no-attrs),[<lex(Lexical)>])],[TagId,lex-to-cf,appl(prod([lex(sort("TagId"))],cf(sort("TagId")),no-attrs),[<lex(Lexical)>])],[Conditions,Default,appl(prod([cf(iter-sep(sort("Condition"),lit(",")))],cf(sort("Conditions")),attrs([id("Equations")])),[appl(list(cf(iter-sep(sort("Condition"),lit(",")))),<list(Condition-list)>)])],[Condition-list,single,[<head(Condition)>]],[Condition-list,many,[<head(Condition)>,<ws-after-first(Layout)>,lit(<sep(str)>),<ws-after-sep(Layout)>,<[tail(Condition-list)]>]],[Equations,absent,appl(prod([],cf(sort("Equations")),attrs([id("Equations")])),[])],[Equations,present,appl(prod([lit("equations"),cf(opt(layout)),cf(iter-star(sort("CondEquation")))],cf(sort("Equations")),attrs([id("Equations")])),[lit("equations"),<"ws-after-equations"(Layout)>,appl(list(cf(iter-star(sort("CondEquation")))),<list(CondEquation-list)>)])],[CondEquation-list,empty,[]],[CondEquation-list,single,[<head(CondEquation)>]],[CondEquation-list,many,[<head(CondEquation)>,<ws-after-first(Layout)>,<[tail(CondEquation-list)]>]],[CondEquation,simple,appl(prod([cf(sort("Tag")),cf(opt(layout)),cf(sort("Equation"))],cf(sort("CondEquation")),attrs([id("Equations")])),[<Tag(Tag)>,<ws-after-Tag(Layout)>,<Equation(Equation)>])],[CondEquation,implies,appl(prod([cf(sort("Tag")),cf(opt(layout)),cf(sort("Conditions")),cf(opt(layout)),cf(sort("Implies")),cf(opt(layout)),cf(sort("Equation"))],cf(sort("CondEquation")),attrs([id("Equations")])),[<Tag(Tag)>,<ws-after-Tag(Layout)>,<Conditions(Conditions)>,<ws-after-Conditions(Layout)>,<Implies(Implies)>,<ws-after-Implies(Layout)>,<Equation(Equation)>])],[CondEquation,when,appl(prod([cf(sort("Tag")),cf(opt(layout)),cf(sort("Equation")),cf(opt(layout)),lit("when"),cf(opt(layout)),cf(sort("Conditions"))],cf(sort("CondEquation")),attrs([id("Equations")])),[<Tag(Tag)>,<ws-after-Tag(Layout)>,<Equation(Equation)>,<ws-after-Equation(Layout)>,lit("when"),<"ws-after-when"(Layout)>,<Conditions(Conditions)>])],[Tag,empty,appl(prod([lit("["),cf(opt(layout)),lit("]")],cf(sort("Tag")),attrs([id("Equations")])),[lit("["),<"ws-after-["(Layout)>,lit("]")])],[Tag,not-empty,appl(prod([lit("["),cf(opt(layout)),cf(sort("TagId")),cf(opt(layout)),lit("]")],cf(sort("Tag")),attrs([id("Equations")])),[lit("["),<"ws-after-["(Layout)>,<TagId(TagId)>,<ws-after-TagId(Layout)>,lit("]")])],[Tree,lexical-constructor,appl(prod([lit(<formal-name(str)>),cf(opt(layout)),lit("("),cf(opt(layout)),cf(iter-star(sort("CHAR"))),cf(opt(layout)),lit(")")],<symbol(Symbol)>,attrs([id("GEN-LexConsFuncs")])),[<name(Tree)>,<ws-after-name(Layout)>,lit("("),<"ws-after-("(Layout)>,appl(list(cf(iter-star(sort("CHAR")))),<list(CHAR-list)>),<ws-after-list(Layout)>,lit(")")])],[CHAR-list,empty,[]],[CHAR-list,single,[<head(CHAR)>]],[CHAR-list,many,[<head(CHAR)>,<ws-after-first(Layout)>,<[tail(CHAR-list)]>]],[Equation,Default,appl(prod([<lhs-symbol(Symbol)>,cf(opt(layout)),lit("="),cf(opt(layout)),<rhs-symbol(Symbol)>],cf(sort("Equation")),attrs([id("GEN-Equations")])),[<lhs(Tree)>,<ws-after-lhs(Layout)>,lit("="),<"ws-after-="(Layout)>,<rhs(Tree)>])],[Condition,positive,appl(prod([<lhs-symbol(Symbol)>,cf(opt(layout)),lit("="),cf(opt(layout)),<rhs-symbol(Symbol)>],cf(sort("Condition")),attrs([id("GEN-Equations")])),[<lhs(Tree)>,<ws-after-lhs(Layout)>,lit("="),<"ws-after-="(Layout)>,<rhs(Tree)>])],[Condition,negative,appl(prod([<lhs-symbol(Symbol)>,cf(opt(layout)),lit("!="),cf(opt(layout)),<rhs-symbol(Symbol)>],cf(sort("Condition")),attrs([id("GEN-Equations")])),[<lhs(Tree)>,<ws-after-lhs(Layout)>,lit("!="),<ws-after-unequal(Layout)>,<rhs(Tree)>])],[Tree,amb-constructor,appl(prod([lit("amb"),cf(opt(layout)),lit("("),cf(opt(layout)),cf(iter-star-sep(<amb(Symbol)>,lit(","))),cf(opt(layout)),lit(")")],cf(<symbol(Symbol)>),attrs([id("GEN-Equations")])),[lit("amb"),<"ws-after-amb"(Layout)>,lit("("),<"ws-after-("(Layout)>,appl(list(cf(iter-star-sep(<list-symbol(Symbol)>,lit(",")))),<ambs(Tree-ambs)>),<ws-after-ambs(Layout)>,lit(")")])],[Tree-ambs,empty,[]],[Tree-ambs,single,[<head(Tree)>]],[Tree-ambs,many,[<head(Tree)>,<ws-after-first(Layout)>,lit(<sep(str)>),<ws-after-sep(Layout)>,<[tail(Tree-ambs)]>]],[CHAR,lex-to-cf,appl(prod([lex(sort("CHAR"))],cf(sort("CHAR")),no-attrs),[<lex(Lexical)>])]]
