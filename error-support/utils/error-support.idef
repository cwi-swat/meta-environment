/* $Id$ */

tool error-support is {
  command = "error-support"
}

process ErrorSupport is
let
  ES : error-support,
  Summary : term,
  PosInfo : term,
  Feedback : term,
  NewFeedback : term,
  Producer : str,
  Identification : str,
  Description : str,
  Subjects : list
in
  execute(error-support, ES?) .
  (
    rec-msg(convert-feedback(Feedback?)) .
    snd-eval(ES, convert-feedback(Feedback)) .
    rec-value(ES, new-feedback(NewFeedback?)) .
    snd-msg(converted-feedback(NewFeedback))
  +
    rec-msg(get-feedback-producer(Feedback?)) .
    snd-eval(ES, get-feedback-producer(Feedback)) .
    rec-value(ES, producer(Producer?)) .
    snd-msg(producer(Producer))
  +
    rec-msg(get-feedback-identification(Feedback?)) .
    snd-eval(ES, get-feedback-identification(Feedback)) .
    rec-value(ES, identification(Identification?)) .
    snd-msg(identification(Identification))
  +
    rec-msg(get-feedback-subjects(Feedback?)) .
    snd-eval(ES, get-feedback-subjects(Feedback)) .
    rec-value(ES, subjects(Subjects?)) .
    snd-msg(subjects(Subjects))
  +
    rec-msg(get-error-location(Summary?)) .
    snd-eval(ES, get-first-error-location(Summary)) .
    rec-value(ES, error-location(PosInfo?)) .
    snd-msg(error-location(PosInfo))
  +
    rec-msg(get-error-description(Summary?)) .
    snd-eval(ES, get-first-error-description(Summary)) .
    rec-value(ES, error-description(Description?)) .
    snd-msg(error-description(Description))
  +
    rec-msg(display-feedback(Summary?)) .
    snd-do(ES, display-feedback(Summary))
  ) * delta
endlet

toolbus(ErrorSupport)
