definition
module basic/Feedback

imports basic/Strings
imports basic/Locations

exports

sorts Error FatalError Warning Information Producer Description Feedback

context-free syntax

Information -> Feedback {cons("info")}
Warning -> Feedback {cons("warning")}
Error -> Feedback {cons("error")}
FatalError -> Feedback {cons("fatal-error")}

"information" "(" id:String         c1:"," 
                  producer:Producer c2:"," 
                  description:Description c3:","
                  subjects:Subjects
              ")"  -> Information {cons("information")}

"warning"     "(" id:String         c1:"," 
                  producer:Producer c2:"," 
                  description:Description c3:","
                  subjects:Subjects
              ")"  -> Warning {cons("warning")}

"error"       "(" id:String         c1:"," 
                  producer:Producer c2:"," 
                  description:Description c3:","
                  subjects:Subjects
              ")"  -> Error {cons("error")}

"fatal-error" "(" id:String         c1:"," 
                  producer:Producer c2:"," 
                  description:Description c3:","
                  subjects:Subjects
              ")"  -> FatalError {cons("fatal-error")}

producer(id:String,type:String) -> Producer {cons("producer")}
description(String)             -> Description {cons("description")}

"[" subject-list:{Subject ","}* "]" -> Subjects {cons("subjects")}

subject(id:String, location:Location) -> Subject {cons("without-location")}
subject(id:String)                    -> Subject {cons("with-location")}
module basic/Locations

imports basic/Strings
imports basic/Integers

exports

sorts Location Area
 
context-free syntax

location(file:String, area:Area) -> Location {cons("location")}

"area" "(" start-line:NatCon    c1:"," 
           start-column:NatCon  c2:","
           end-line:NatCon      c3:","
           end-column:NatCon    c4:","
           start-offset:NatCon  c5:"," 
           end-offset:NatCon
       ")" -> Area {cons("area")}
