process SIEVE(Max : int) is
  let N : int, Pid : int
  in
     create(FILTER(2), Pid?) .
     N := 3 .
     ( if less(N, Max) then
         snd-msg(com(2, N)) .
         rec-msg(done(2)) .
         N := add(N, 1)
       fi
     ) *
     if equal(N, Max) then shutdown("done") fi
  endlet

process FILTER(P : int) is
  let Z : int, N : int, Pid : int
  in
    printf("%d\n", P).
    rec-msg(com(P, Z?)) .
    snd-msg(done(P)).
    create(FILTER(Z), Pid?) .
    ( rec-msg(com(P, N?)) .
      if equal(mod(N, P), 0) then
        tau
      else
        snd-msg(com(Z, N)) .
        rec-msg(done(Z))
      fi .
      snd-msg(done(P))
    ) * delta
  endlet

toolbus(SIEVE(900))
