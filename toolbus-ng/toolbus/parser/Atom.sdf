module Atom
imports TBTerms

exports
  sorts Atom

  context-free syntax
  
  %% communication atoms
    "snd-msg" "(" TBTermList ")"			    -> Atom	{cons("SndMsg")}
    "snd-msg" "(" TBTermList ")" "to" TBTerm	-> Atom	{cons("SndMsg")}

    "rec-msg""(" TBTermList ")"		            -> Atom {cons("RecMsg")}
    "rec-msg" "(" TBTermList ")" "from" TBTerm	-> Atom {cons("RecMsg")}
    
  %%note atoms
    "subscribe" "(" TBTerm ")"                   -> Atom {cons("Subscribe")}
    "unsubscribe" "(" TBTerm ")"                 -> Atom {cons("UnSubscribe")}
    "snd-note" "(" TBTerm ")"			         -> Atom {cons("SndNote")}
    "rec-note" "(" TBTerm ")"			         -> Atom {cons("RecNote")}   
    "no-note" "(" TBTerm ")"			         -> Atom {cons("NoNote")}
    
  %% Tool atoms

    "execute" "(" TBTerm "," TBTerm ")"          -> Atom {cons("Execute")}
    "rec-connect" "(" TBTerm ")"                 -> Atom {cons("RecConnect")}
    "rec-disconnect" "(" TBTerm ")"              -> Atom {cons("RecDisConnect")}
    "snd-terminate" "(" TBTerm ")"               -> Atom {cons("SndTerminate")}
  
    "rec-event" "(" TBTerm "," TBTerm")"	     -> Atom {cons("Event")}
    "snd-ack-event" "(" TBTerm "," TBTerm ")"	 -> Atom {cons("AckEvent")}
    "snd-eval" "(" TBTerm "," TBTerm ")"         -> Atom {cons("Eval")}
    "rec-value" "(" TBTerm "," TBTerm ")"        -> Atom {cons("RecVal")}
    "snd-do" "(" TBTerm "," TBTerm ")"		     -> Atom {cons("Do")}
 
  %% Delta and Tau
  
    "tau"				                         -> Atom {cons("Tau")}
    "delta"				                         -> Atom {cons("Delta")}
     
  %% Read and Print
  
     "printf" "(" TBTermList ")"			     -> Atom {cons("Print")}
     "read" "(" TBTermList ")"                   -> Atom {cons("Read")}
     
  %% Shutdown
      "shutdown" "(" TBTerm ")"                  -> Atom {cons("ShutDown")}
      
  %% Assign

     Var ":=" TBTerm 			                 -> Atom {cons("Assign")}

 
