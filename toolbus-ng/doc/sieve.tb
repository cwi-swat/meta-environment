process SIEVE(Max : int) is
  let N : int, Fid : int
  in
     create(FILTER(2), Fid?) .
     N := 3 .
     if less(N, Max) then snd-msg(2, N) . N := add(N, 1) fi *
     if equal(N, Max) then shutdown("done") fi
  endlet

process FILTER(P : int) is
  let Z : int, N : int, Fid : int
  in
     printf("%t\n", P) .
     ( rec-msg(P, Z?) .
       if equal(mod(Z, P), 0) then tau
       else
          create(FILTER(Z), Fid?) .
          ( rec-msg(P, N?) .
            if equal(mod(N, P), 0) then tau
            else snd-msg(Z, N) fi
          ) * delta
       fi
     ) * delta
  endlet

toolbus(SIEVE(900))
