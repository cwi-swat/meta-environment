process CREATE-ADDRESS(AB : address-book) is
let
  AID : int
in
  rec-msg(create-address) .
  snd-eval(AB, create-address) .
  rec-value(AB, new-address(AID?)) .
  snd-msg(address-created(AID))
endlet

process UPDATE-ADDRESS(AB : address-book) is
let
  AID : int,
  Name : str,
  Address : str,
  Zip : str
in
  rec-msg(update-address(AID?)) .
  ( rec-msg(set-name(AID, Name?)) .
    snd-do(AB, set-name(AID, Name))
  + rec-msg(set-address(AID, Address?)) .
    snd-do(AB, set-address(AID, Address))
  + rec-msg(set-zip(AID, Zip?)) .
    snd-do(AB, set-zip(AID, Zip))
  ) *
  rec-msg(update-address-done(AID))
endlet

process DELETE-ADDRESS(AB : address-book) is
let
  Name : str,
  AID : int
in
  rec-msg(delete-address(AID?)) .
  snd-do(AB, delete-address(AID)) .
  snd-msg(address-deleted(AID))
endlet

process ADDRESS-BOOK is
let
  AB : address-book
in
  execute(address-book, AB?) .
  ( CREATE-ADDRESS(AB) + UPDATE-ADDRESS(AB) + DELETE-ADDRESS(AB)
  ) * delta
endlet

tool address-book is { command = "java-adapter -class AddressBookService" }

process CLIENT is
let
  AID : int
in
  snd-msg(create-address) .
  rec-msg(address-created(AID?)) .
  snd-msg(update-address(AID)) .
  snd-msg(set-name(AID, "John Doe")) .
  snd-msg(set-address(AID, "1342 Elm Street")) .
  snd-msg(update-address-done(AID))
endlet

toolbus(ADDRESS-BOOK, CLIENT)
