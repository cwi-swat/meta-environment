module sasl/syntax/Sasl

imports basic/Whitespace

exports

sorts 

Infix Prefix CharConst AnyChar BoolConst ScaleFactor Digit Real Numeral Constant String Formal 
NameList Name Struct Rhs Clause Expr Defs Simple Comb OpExp ListExp CondExp
Where

lexical syntax

[a-z][a-z0-9\_]* -> Name
[0-9]            -> Digit
[\'] ~[\"]+ [\"] -> String
~[\t\n\ ]        -> AnyChar

context-free syntax



"WHERE"           -> Where
Expr Where Defs   -> Expr {right}
CondExp           -> Expr

OpExp "->" CondExp ";" CondExp -> CondExp
ListExp                        -> CondExp

OpExp "," ListExp -> ListExp
OpExp ","         -> ListExp
OpExp             -> ListExp

Prefix OpExp      -> OpExp
OpExp Infix OpExp -> OpExp
Comb              -> OpExp

Comb Simple -> Comb
Simple      -> Comb

Name         -> Simple
Constant     -> Simple
"(" Expr ")" -> Simple

Clause ";" Defs -> Defs
Clause          -> Defs

NameList "=" Expr -> Clause
Name Rhs          -> Clause

Formal Rhs -> Rhs
Formal "=" Rhs -> Rhs

Struct "," NameList -> NameList
Struct ","          -> NameList
Struct              -> NameList

Formal ":" Struct -> Struct
Formal            -> Struct

Name             -> Formal
Constant         -> Formal
"(" NameList ")" -> Formal

Numeral   -> Constant
CharConst -> Constant
BoolConst -> Constant
"()"      -> Constant
String    -> Constant

lexical syntax

Real ScaleFactor     -> Numeral
"-" Real ScaleFactor -> Numeral

Digit+            -> Real
Digit+ "." Digit+ -> Real

"e" Digit+     -> ScaleFactor
"e" "-" Digit+ -> ScaleFactor
               -> ScaleFactor

context-free syntax

"true" -> BoolConst
"false" -> BoolConst

lexical syntax

"%" AnyChar -> CharConst
"SP" | "NL" | "NP" | "TAB" -> CharConst

"~" | "+" | "-"                                -> Prefix
":" | "++" | "|" | "&" | ">>" | ">" | ">=" |
"=" | "~=" | "<=" | "<" | "<<" | "+" | "-" |
"*" | "/" | "DIV" | "REM" | "**" | "."         -> Infix

