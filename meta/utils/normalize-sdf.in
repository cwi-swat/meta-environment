#! /bin/sh
#
#    Meta-Environment - An environment for language prototyping.
#    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
# $Id$

prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
libdir=@libdir@

PATH="$PATH:$bindir"

TMP=/tmp/`basename $0`.$$	# Junk files
trap "rm -f $TMP*" 0 1 2 15	# Clean up afterwards

PGEN="${bindir}/ParseTable-Generator"
A2TOA1="${bindir}/a2toa1"
ASOURCE="${bindir}/asource"
ADDFUNC="${bindir}/add-norm-func"
EXTENSIONS=".sdf .sdf2"
VERBOSE=0;

Notify () {
  if [ $VERBOSE -gt 0 ]
  then
    echo $* >&2
  fi
}

version() {
  echo "normalize-sdf v0.1"
  exit 1
}

while [ $# -gt 0 ]	# Handle command line options
do
	case $1
	in
	  -h | --help)
			echo "Usage: $0 [-hvV] file(s) ..."
			exit 0;;
		-v | --verbose)
			VERBOSE=1 ;;
    -V | --version)
		  version ;;
		-*)
			echo Unknown option ignored: $1 ;;
		*)
			Files="$Files $1" ;;
	esac
	shift
done

for f in $Files
do
	# Convert to AsFix1, if necessary
	dir=`dirname $f`
	case $f in
	*.asfix2)
			file=`basename $f .asfix2`
			Notify "Converting Asfix2 file $f to AsFix1 file $dir/$file.asfix1"
			out=$dir/$file.asfix1
			err=$dir/$file.a2toa1.err
			if $A2TOA1 < $f > $out 2> $err;
			then
				rm -f $err
			else
				if [ -f $out -a ! -s $out ]; then rm -f $out; fi
				echo "a2toa1: error (see $err)"
				exit 1
			fi
			f=$out
			;;
	*.asfix1)
			file=`basename $f .asfix1`
			;;
	*.asfix)
			file=`basename $f .asfix`
			;;
	*)
			echo "$f: input must be AsFix1 or AsFix2" 1>&2
			continue
			;;
	esac
	for ext in $EXTENSIONS
	do
		file=`basename $file $ext`
	done
	Notify "Adding Normalize function and normalizing $f..."
	out=$TMP.asrc
	err=$dir/$file.norm.err
	if $ADDFUNC < $f | $PGEN > $out 2> $err
	then
		rm -f $err
	else
		if [ -f $out -a ! -s $out ]; then rm -f $out; fi
		echo "PT-Gen: error (see $err)"
		exit 2
	fi
	in=$out
	Notify "Running asource..."
	out=$dir/$file.norm
	err=$dir/$file.asource.err
	if $ASOURCE $TERMTABLE < $in 2> $err > $out  2>> $err
	then
		rm -f $err
	else
		if [ -f $out -a ! -s $out ]; then rm -f $out; fi
		echo "asource: error (see $err)"
		exit 3
	fi
done
