# $Id$

# Configure variable substitutions
PRODUCT		= @PRODUCT@
VERSION		= @VERSION@

@SET_MAKE@

srcdir		= @srcdir@
VPATH		= @srcdir@
top_srcdir	= @top_srcdir@
prefix		= @prefix@
exec_prefix	= @exec_prefix@
bindir		= @bindir@
libdir		= @libdir@
includedir	= @includedir@
datadir		= @datadir@

RANLIB		= @RANLIB@
SHELL		= @SHELL@
CC              = @CC@
CFLAGS          = @CFLAGS@ ${XCFLAGS}
CPP             = @CPP@
CPPFLAGS        = @CPP@ ${XCPPFLAGS}
DEFS            = @DEFS@ ${XDEFS}
INCLUDES        = @INCLUDES@ ${XINCLUDES}
LIBS            = @LIBS@ ${XLIBS}
SOCKLIBS        = @SOCKLIBS@

INSTALL		= @INSTALL@
INSTALL_DATA	= @INSTALL_DATA@
INSTALL_PROG	= @INSTALL_PROG@
UNINSTALL	= @UNINSTALL@

AR              = @AR@

ATERM		= @ATERM@
ATERMBIN	= @ATERMBIN@
ATERMLIB	= @ATERMLIB@
ATERMINC	= @ATERMINC@
TOOLBUS		= @TOOLBUS@
TOOLBUSBIN	= @TOOLBUSBIN@
TOOLBUSLIB	= @TOOLBUSLIB@
TOOLBUSINC	= @TOOLBUSINC@

# Implicit rules
include ${top_srcdir}/implicit-rules

# The eXtra parts of some variables
XCFLAGS         =
XCPPFLAGS       =
XINCLUDES       = -I$(ATERMINC) -I.
XLIBS           = -L$(ATERMLIB) -lATerm-${CC} -lAsFix-${CC}

# Other variables
# CSRC/CHDR are used to calculate dependencies.
CSRC            = meta-paths.c meta-utils.c imports.c module-utils.c
CHDR            = meta-utils.h module-utils.h libutil.h
#All files in BINFILES are installed in $(bindir)
# Ordering is important here: the toolbus dir. should come first
BINFILES	= genmakefile.sh gen-table \
		  parse-file parse-sdf2 ps-dot \
                  sdf2table meta-paths normalize-sdf imports
LIBFILES	= 
DATAFILES	= genmakefile.proto lang.types
INCLUDEFILES	=

OBJ_CC          = $(patsubst %.c,%-cc.o,$(CSRC))
OBJ_GCC         = $(patsubst %.c,%-gcc.o,$(CSRC))
OBJ_DBG         = $(patsubst %.c,%-dbg.o,$(CSRC))
OBJ_PROF        = $(patsubst %.c,%-prof.o,$(CSRC))

# CLEANFILES are removed by 'make clean'
CLEANFILES      = libutils-*.a

# DISTCLEANFILES are removed by 'make distclean'
DISTCLEANFILES  =

all:	${BINFILES} ${LIBFILES} ${DATAFILES}

# Unit test target
test:	all
	@for f in $(BINFILES); do \
		echo $$f; \
		./test-help ./$$f; \
	done
	
%-cc.o: %.c
	cc -O $(INCLUDES) -c -o $@ $<

%-gcc.o: %.c
	gcc -Wall -O4 $(INCLUDES) -c -o $@ $<

%-dbg.o: %.c
	gcc -Wall -g $(INCLUDES) -c -o $@ $<

%-prof.o: %.c
	gcc -Wall -pg $(INCLUDES) -c -o $@ $<

libutils-cc.a: meta-utils-cc.o module-utils-cc.o
	$(AR) cr $@ meta-utils-cc.o module-utils-cc.o
	$(RANLIB) $@

libutils-gcc.a: meta-utils-gcc.o module-utils-gcc.o
	$(AR) cr $@ meta-utils-gcc.o module-utils-gcc.o
	$(RANLIB) $@

libutils-dbg.a: meta-utils-dbg.o module-utils-dbg.o
	$(AR) cr $@ meta-utils-dbg.o module-utils-dbg.o
	$(RANLIB) $@

libutils-prof.a: meta-utils-prof.o module-utils-prof.o
	$(AR) cr $@ meta-utils-prof.o module-utils-prof.o
	$(RANLIB) $@

meta-paths: meta-paths-${CC}.o libutils-${CC}.a
	${CC} -o $@ meta-paths-${CC}.o libutils-${CC}.a

imports: imports-${CC}.o libutils-${CC}.a
	${CC} -o $@ imports-${CC}.o libutils-${CC}.a $(LIBS)


uninstall:
	@$(UNINSTALL) $(bindir) $(BINFILES)
	@$(UNINSTALL) $(libdir) $(LIBFILES)
	@$(UNINSTALL) $(includedir) $(INCLUDEFILES)
	@$(UNINSTALL) $(datadir) $(DATAFILES)

install:	all
	mkdir -p $(bindir) $(libdir) $(includedir) $(datadir)
	@$(INSTALL_PROG) $(INSTALL) $(bindir) $(BINFILES)
	@$(INSTALL_DATA) $(INSTALL) $(includedir) $(INCLUDEFILES)
	@$(INSTALL_DATA) $(INSTALL) $(datadir) $(DATAFILES)

# clean target (remove all easily build components and temporary files)
clean:
	rm -f *.o *~ $(CLEANFILES)
doc:

distclean:

depend:
