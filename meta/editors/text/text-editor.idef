/*

  $Id$

*/

tool text-editor is {
  command = EDITOR
}

process TextEditor(EditorType: term, EditorId: term, ModuleName: str) is
let
  TE         : text-editor,
  Path       : term,
  Sort       : term,
  Dirty      : int,
  Fid        : str,
  Ignored    : str,
  Count      : int,
  Text       : str,
  FileName   : str,
  Location   : int,
  SortName   : str,
  Direction  : str,
  StartPos   : int,
  Length     : int,
  FocusText  : str,
  Focus      : term,
  ButtonList : list,
  ButtonName : str
in
(
  execute(text-editor, TE?) .
  (
    rec-msg(set-filename(EditorId, FileName?)) .
    snd-eval(TE, edit-file(FileName))
  ) .
  rec-value(TE, file-id(Fid?)) .
  if not-equal(EditorType, "term") then
    snd-do(TE, tb-add-menu-item("Meta-Environment", "Parse"))
  else
    snd-msg(get-auxilary-buttons(EditorType, ModuleName)) .
    rec-msg(button-list(ModuleName, ButtonList?)) .
    (
      if not-equal(ButtonList, []) then
        ButtonName := first(ButtonList) .
        snd-do(TE, tb-add-menu-item("Term-Actions", ButtonName)) .
        ButtonList := next(ButtonList)
      fi
    )*
    if equal(ButtonList, []) then
      tau
    fi
  fi .
  snd-do(TE, tb-add-menu-item("Move", "Left")) .
  snd-do(TE, tb-add-menu-item("Move", "Right")) .
  snd-do(TE, tb-add-menu-item("Move", "Up")) .
  snd-do(TE, tb-add-menu-item("Move", "Down")) .
  (
    rec-msg(set-focus(EditorId,
      focus(Path?, SortName?, area(StartPos?, Length?),Dirty?))) .
    snd-do(TE, tb-set-focus(Fid, SortName, StartPos, Length))
  +
    rec-msg(clear-focus(EditorId)) .
    snd-do(TE, tb-unset-focus(Fid))
  +
    rec-msg(get-focus-text(EditorId,
      focus(Path?, Sort?, area(StartPos?,Length?),Dirty?))) .
    snd-eval(TE, tb-get-focus-text(Fid, StartPos, Length)) .
    rec-value(TE, focus-text(Fid, FocusText?)) .
    snd-msg(focus-text(EditorId, FocusText))
  +
    rec-msg(display-error(EditorId, StartPos?)) .
    snd-do(TE, tb-set-char-pos(Fid, StartPos)).
    snd-do(TE, tb-set-msg("Parse error near cursor"))
  +
    rec-msg(move-editor-to-front(EditorId)) .
    snd-do(TE, move-editor-to-front(Fid))
  +
    rec-msg(reload-file(EditorId, FileName?)) .
    snd-do(TE, reload-file(FileName))
  +
    rec-event(TE, set-current-location(Fid, Location?)) .
    snd-msg(set-current-location(EditorId, Location)) .
    snd-ack-event(TE, set-current-location(Fid, Location))
  +
    rec-event(TE, insert(Fid, Location?, Text?)) .
    snd-msg(insert-chars(EditorId, Location, Text)) .
    rec-msg(ack-insert-chars(EditorId)).
    snd-ack-event(TE, insert(Fid, Location, Text))
  +
    rec-event(TE, delete(Fid, Location?, Count?)) .
    snd-msg(delete-chars(EditorId, Location, Count)).
    rec-msg(ack-delete-chars(EditorId)).
    snd-ack-event(TE, delete(Fid, Location, Count))
  +
    rec-event(TE, modified(Fid)) .
    snd-msg(set-modified(EditorId)) .
    snd-ack-event(TE, modified(Fid))
  +
    rec-event(TE, menu-event("Meta-Environment", "Parse", Fid?)) .
    snd-msg(parse-buffer(EditorId)) .
    snd-ack-event(TE, menu-event("Meta-Environment", "Parse", Fid))
  +
    rec-event(TE, menu-event("Meta-Environment", "Reduce", Fid)) .
    snd-msg(reduce(EditorId)) .
    snd-ack-event(TE, menu-event("Meta-Environment", "Reduce", Fid))
  +
    rec-event(TE, menu-event("Move", Direction?, Fid)) .
    snd-msg(move-focus(EditorId, Direction)) .
    snd-ack-event(TE, menu-event("Move", Direction, Fid))
  +
    rec-event(TE, menu-event("Term-Actions", ButtonName?, Fid)) .
    snd-msg(extra-button-action(EditorId, ButtonName)) .
    snd-ack-event(TE, menu-event("Term-Actions", ButtonName, Fid))
  ) *
  (
    rec-disconnect(TE).
    snd-msg(text-editor-disconnected(EditorId))
  +
    rec-msg(delete-text-editor(EditorId)) .
    snd-terminate(TE, "You have been zapped!")
  ) .
  (
    rec-msg(set-focus(EditorId, Focus?))
  +
    rec-msg(clear-focus(EditorId))
  +
    rec-msg(get-focus-text(EditorId, Focus?)) .
    snd-msg(focus-text(EditorId, ""))
  +
    rec-msg(move-editor-to-front(EditorId))
  +
    rec-msg(display-error(EditorId, StartPos?))
  ) * delta
)
endlet
