/* $Id$ */

tool text-editor is {
  command = EDITOR
}

process TextEditor(EditorId: term, FileName : str, ButtonList : list) is
let
  TE         : text-editor,
  Path       : term,
  Sort       : term,
  Dirty      : int,
  Fid        : str,
  Location   : int,
  SortName   : str,
  Direction  : str,
  StartPos   : int,
  Length     : int,
  FocusText  : str,
  Focus      : term,
  QueryList : list,
  QueryName : str,
  ActionName : str,
  ButtonName : term,
  ButtonWalker : list,
  FileName2  : str
in
  execute(text-editor, TE?) .
  snd-eval(TE, edit-file(FileName)) .
  rec-value(TE, file-id(Fid?)) .
  ButtonWalker := ButtonList .
  (
    if not-equal(ButtonWalker, []) then
      ButtonName := first(ButtonWalker) .
      snd-do(TE, tb-add-menu-item("Actions", ButtonName)) .
      ButtonWalker := next(ButtonWalker)
    fi
  )*
  if equal(ButtonWalker, []) then
    tau
  fi .
  snd-msg(get-query-actions) .
  rec-msg(action-list(QueryList?)) .
  (
    if not-equal(QueryList, []) then
      QueryName := first(QueryList) .
      snd-do(TE, tb-add-menu-item("Queries", QueryName)) .
      QueryList := next(QueryList)
    fi
  )*
  if equal(QueryList, []) then
    tau
  fi .
  snd-do(TE, tb-add-menu-item("Move", "Left")) .
  snd-do(TE, tb-add-menu-item("Move", "Right")) .
  snd-do(TE, tb-add-menu-item("Move", "Up")) .
  snd-do(TE, tb-add-menu-item("Move", "Down")) .
  (
    rec-msg(set-focus(EditorId,
      focus(Path?, SortName?, area(StartPos?, Length?),Dirty?))) .
    snd-do(TE, tb-set-focus(Fid, SortName, StartPos, Length))
  +
    rec-msg(clear-focus(EditorId)) .
    snd-do(TE, tb-unset-focus(Fid))
  +
    rec-msg(get-focus-text(EditorId,
      focus(Path?, Sort?, area(StartPos?,Length?),Dirty?))) .
    snd-eval(TE, tb-get-focus-text(Fid, StartPos, Length)) .
    rec-value(TE, focus-text(Fid, FocusText?)) .
    snd-msg(focus-text(EditorId, FocusText))
  +
    rec-msg(display-error(EditorId, StartPos?)) .
    snd-do(TE, tb-set-char-pos(Fid, StartPos)).
    snd-do(TE, tb-set-msg("Parse error near cursor"))
  +
    rec-msg(move-editor-to-front(EditorId)) .
    snd-do(TE, move-editor-to-front(Fid))
  +
    rec-msg(reload-file(EditorId, FileName2?)) .
    snd-do(TE, reload-file(FileName2))
  +
    rec-event(TE, set-current-location(Fid, Location?)) .
    snd-msg(set-current-location(EditorId, Location)) .
    snd-ack-event(TE, set-current-location(Fid, Location))
  +
    rec-event(TE, modified(Fid)) .
    snd-msg(set-modified(EditorId)) .
    snd-ack-event(TE, modified(Fid))
  +
    rec-event(TE, menu-event("Move", Direction?, Fid)) .
    snd-msg(move-focus(EditorId, Direction)) .
    snd-ack-event(TE, menu-event("Move", Direction, Fid))
  +
    rec-event(TE, menu-event("Queries", ActionName?, Fid)) .
    snd-msg(execute-query(EditorId, ActionName)) .
    snd-ack-event(TE, menu-event("Queries", ActionName, Fid))
  +
    rec-event(TE, menu-event("Actions", ButtonName?, Fid)) .
    snd-msg(extra-button-action(EditorId, ButtonName)) .
    snd-ack-event(TE, menu-event("Actions", ButtonName, Fid))
  ) *
  (
    rec-disconnect(TE).
    snd-msg(text-editor-disconnected(EditorId)) 
  +
    rec-msg(kill-text-editor(EditorId)) .
    snd-terminate(TE, "You have been zapped!") .
    snd-msg(text-editor-killed(EditorId))
  )
endlet
