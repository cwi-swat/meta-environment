tool user-interface is {
  command = "meta-studio"
}

process Status-display(UI: user-interface)  is
let
  Lst : list,
  Str : str,
  Id  : term
in
  subscribe(ui-status(<term>)) .
  ( rec-note(ui-status(stat(Id?, Str?))) .
    snd-do(UI, add-status(Id, Str))
    +
    rec-note(ui-status(statf(Id?, Str?, Lst?))) .
    snd-do(UI, add-statusf(Id, Str, Lst))
    +
    rec-note(ui-status(endstat(Id?))) .
    snd-do(UI, end-status(Id))
    +
    rec-note(ui-status(error(Str?))) .
    snd-do(UI, error(Str))
    +
    rec-note(ui-status(errorf(Str?, Lst?))) .
    snd-do(UI, errorf(Str, Lst))
  ) *
  delta
endlet

process Ui is
let
  SD      : int,
  UI      : user-interface,
  Id      : term,
  Name    : term,
  Str     : term,
  Str1    : term,
  Mod     : term,
  Pairs   : list,
  Mods    : list,
  ModName : str,
  FileName : str,
  Path    : str,
  Extension : str,
  ErrMsg  : str,
  On      : term,
  Graph   : term,
  Info	  : list,
  LayoutedGraph : term,
  ModuleName : str,
  LibraryPath : str,
  SyntaxExt : str,
  SemanticsExt : str,
  TermExt : str,
  EnvironmentName : str,
  Recursive : term,
  EditorId : term,
  GraphId : str,
  ButtonName : list,
  Tree : term,
  Lst : str,
  ButtonList : list,
  Title : str,
  Answer : term,
  T : str
in
  subscribe(display-import-graph(<list>)) .
  Id := process-id.
  execute(user-interface,UI?).
  create(Status-display(UI),SD?).

  snd-msg(environment-name-hook).
  rec-msg(environment-name-hook-result(EnvironmentName?)).

  snd-do(UI, initialize-ui(EnvironmentName)) .
  Mods := [] .
  Pairs := [] .
  ( 
    rec-msg(display-graph(GraphId?, Graph?)) .
    snd-do(UI, display-graph(GraphId, Graph))
  +
    rec-msg(ui-delete-modules(Mods?)).
    snd-do(UI, delete-modules(Mods))
  +
    rec-event(UI,get-module-info(ModName?)).
    snd-msg(get-module-info(ModName)) .           
    rec-msg(module-info(ModName, Info?)) .
    snd-do(UI,module-info(ModName,Info)) .
    snd-ack-event(UI,get-module-info(ModName))
  +
    rec-event(UI,clear-all).
    snd-msg(clear-all).
    rec-msg(cleared-all).
    snd-ack-event(UI,clear-all)
  +
   ( rec-event(UI,debugging(On?)) .
     snd-msg(debugging(On)) .
     snd-ack-event(UI,debugging(On))
   ) +
   ( rec-note(display-import-graph(Pairs?)).
     snd-do(UI,new-graph(Pairs)) .
     Pairs := []
   )
   +
   ( rec-event(UI, layout-graph(GraphId?, Graph?)) .
     snd-msg(layout-graph(Graph)) .
     rec-msg(graph-layouted(LayoutedGraph?)) .
     snd-do(UI, graph-layouted(GraphId, LayoutedGraph)) .
     snd-ack-event(UI, layout-graph(GraphId, Graph))
   )
   + /* Get buttons for UI items */
   ( rec-event(UI, get-buttons(T?, ModuleName?)) .
     snd-msg(get-auxilary-buttons(T, ModuleName)) .
     rec-msg(button-list(ModuleName,ButtonList?)).
     snd-do(UI, buttons-found(T, ModuleName, ButtonList)) .
     snd-ack-event(UI, get-buttons(T, ModuleName))
   )
   +
   ( rec-event(UI, button-selected(T?, ModuleName?, ButtonName?)) .
     snd-msg(extra-button-action(ButtonName, str(ModuleName), T, ModuleName, ui-id)) .
     snd-ack-event(UI, button-selected(T, ModuleName, ButtonName))
   )
   +
   ( rec-event(UI, button-selected(T?, ButtonName?)) .
     snd-msg(extra-button-action(ButtonName, T, "*", ui-id)) .
     snd-ack-event(UI, button-selected(T, ButtonName))
   )
   +
   ( rec-msg(ask-for-file(Title?, Path?, Extension?)) .
     snd-eval(UI, show-file-dialog(Title, Path, Extension)) .
     rec-value(UI, file-name(FileName?)) . 
     snd-msg(ask-for-file-result(FileName)) 
   )
   +
   ( rec-msg(ask-question(Title?)) .
     snd-eval(UI, show-question-dialog(Title)) .
     rec-value(UI, answer(Answer?)) . 
     snd-msg(ask-question-result(Answer)) 
   )
   +
   ( rec-msg(decons-file-name(FileName?, Extension?)) .
     snd-eval(UI, decons-filename(FileName, Extension)) .
     rec-value(UI, file-name(Path?, FileName?, Extension?)) . 
     snd-msg(decons-file-name-result(Path, FileName, Extension)) 
   )
   +
   ( rec-msg(clear-history) .
     snd-do(UI, clear-history) 
   )
   + /*  Message list */
   (
     rec-event(UI, element-selected(ButtonName?, Tree?)).
     snd-msg(extra-button-action(ButtonName, Tree, "message-list", "*", message-id)).
     snd-ack-event(UI, element-selected(ButtonName, Tree)) 
   )
   +
   (  
     rec-msg(update-list-view(Lst?)).
     snd-do(UI, update-list(Lst))
   ) 
  ) *
  (
    rec-event(UI,quit)
  + 
    rec-disconnect(UI)
  ) .
  shutdown("MetaStudio exiting\n")
endlet
