tool user-interface is { command = "meta-studio" }

process Ui is
let
  Aap: term,
  Answer: term,
  Arguments: list,
  EventList: list,
  ButtonNames: str,
  Choice: str,
  Choices: list,
  EditorId: term,
  EnvironmentName: str,
  Error: term,
  Event: term,
  Extension: str,
  FileName: str,
  Graph: term,
  GraphId: str,
  Id: term,
  LayoutedGraph: term,
  List: list,
  Mods: list,
  ModuleList: term,
  ModuleId: str,
  On: term,
  Producer: str,
  Pairs: list,
  Path: str,
  Question: str,
  Str: str,
  Summary: term,
  SummaryId: str,
  Title: str,
  Tree: term,
  Type: term,
  UI: user-interface
in
  subscribe(ui-status(<term>))
  . Id := process-id
  . execute(user-interface, UI?)
  . snd-msg(environment-name-hook)
  . rec-msg(environment-name-hook-result(EnvironmentName?))
  . snd-do(UI, initialize-ui(EnvironmentName))
  .
  (
    (
      rec-note(ui-status(stat(Id?, Str?)))
      . snd-do(UI, add-status(Id, Str))
    +
      rec-note(ui-status(statf(Id?, Str?, Arguments?)))
      . snd-do(UI, add-statusf(Id, Str, Arguments))
    +
      rec-note(ui-status(endstat(Id?)))
      . snd-do(UI, end-status(Id))
    +
      rec-note(ui-status(error(Str?)))
      . snd-do(UI, error(Str))
    +
      rec-note(ui-status(errorf(Str?, Arguments?)))
      . snd-do(UI, errorf(Str, Arguments))
    +
      rec-note(ui-status(warning(Str?)))
      . snd-do(UI, warning(Str))
    +
      rec-note(ui-status(warningf(Str?, Arguments?)))
      . snd-do(UI, warningf(Str, Arguments))
    +
      rec-note(ui-status(message(Str?)))
      . snd-do(UI, message(Str))
    +
      rec-note(ui-status(messagef(Str?, Arguments?)))
      . snd-do(UI, messagef(Str, Arguments))
    +
      rec-msg(ui-show-feedback-summary(Summary?))
      . snd-do(UI, show-feedback-summary(Summary))
    +
      rec-msg(ui-remove-feedback-summary(Producer?, SummaryId?))
      . snd-do(UI, remove-feedback-summary(Producer, SummaryId))
    )
    *
    delta
  ||
    (
      rec-msg(ui-display-graph(GraphId?, Graph?))
      . snd-do(UI, display-graph(GraphId, Graph))
    +
      rec-msg(ui-display-treelist(Str?, List?))
      . snd-do(UI, display-treelist(Str, List))
    +
      rec-event(UI,clear-all)
      . snd-msg(clear-all)
      . rec-msg(cleared-all)
      . snd-ack-event(UI,clear-all)
    +
      rec-event(UI,debugging(On?))
      . snd-msg(debugging(On))
      . snd-ack-event(UI,debugging(On))
    +
      rec-msg(ui-render-graph(GraphId?, Graph?))
      . snd-do(UI, render-graph(GraphId, Graph))
    +
      rec-event(UI, rendered-graph(GraphId?, Graph?))
      . snd-msg(ui-rendered-graph(GraphId, Graph))
    +
      rec-event(UI, get-events(Type?))
      . snd-msg(cm-get-events(Type))
      . rec-msg(cm-events(EventList?))
      . snd-do(UI, add-events(Type, EventList))
      . snd-ack-event(UI, get-events(Type))
    +
      rec-event(UI, get-events(Type?, ModuleId?))

      . snd-msg(cm-get-events(Type))
      . rec-msg(cm-events(EventList?))
      . snd-do(UI, add-events(Type, EventList))

      . snd-msg(cm-get-module-events(Type, ModuleId))
      . rec-msg(cm-module-events(EventList?))
      . snd-do(UI, add-events(Type, ModuleId, EventList))

      . snd-ack-event(UI, get-events(Type, ModuleId))
    +
      rec-event(UI, button-selected(Type?, Event?))
      . snd-msg(ui-button-selected(Type, Event))
      . snd-ack-event(UI, button-selected(Type, Event))
    +
      rec-event(UI, button-selected(Type?, ModuleId?, Event?))
      . snd-msg(ui-button-selected(Type, Event, ModuleId))
      . snd-ack-event(UI, button-selected(Type, ModuleId, Event))
    +
      rec-msg(ask-for-file(Title?, Path?, Extension?))
      . snd-eval(UI, show-file-dialog(Title, Path, Extension))
      . rec-value(UI, file-name(FileName?))
      . snd-msg(ask-for-file-result(FileName))
    +
      rec-msg(ask-question(Title?))
      . snd-eval(UI, show-question-dialog(Title))
      . rec-value(UI, answer(Answer?))
      . snd-msg(ask-question-result(Answer))
    +
      rec-msg(clear-history)
      . snd-do(UI, clear-history)
    +
      rec-event(UI, node-info(ModuleId?, Tree?))
      . snd-msg(ui-node-selected(ModuleId, Tree))
      . snd-ack-event(UI, node-info(ModuleId, Tree))
    +
      rec-event(UI, error-selected(Error?))
      . snd-msg(ui-error-selected(Error))
      . snd-ack-event(UI, error-selected(Error))
    +
      rec-msg(show-list-choice(Title?, Question?, Choices?))
      . snd-do(UI, show-list-choice(Title, Question, Choices))
    +
      rec-event(UI,list-choice(Title, Choice?))
      . snd-msg(list-choice(Title, Choice))
      . snd-ack-event(UI, list-choice(Title, Choice))
    +
      rec-event(UI,cancel-list-choice(Title))
      . snd-msg(cancel-list-choice(Title))
      . snd-ack-event(UI, cancel-list-choice(Title))
    )
    *
    (
      rec-event(UI, quit)
    +
      rec-disconnect(UI)
    )
    . shutdown("MetaStudio exiting\n")
  )
endlet
