#! /bin/sh

# $Id$

Revision='$Revision$'

aterm=__ATERM__
pt_support=__PT_SUPPORT__
sglr=__SGLR__
pgen=__PGEN__
asf=__ASF__
toolbus=__TOOLBUS__
xemacs=__XEMACS__
graphviz=__GRAPHVIZ__
prefix=__PREFIX__

wish=__WISH__

PATH="${prefix}/bin:${aterm}/bin:${pt_support}/bin:${sglr}/bin:${pgen}/bin:\
      ${asf}/bin:${asf}/bin:${toolbus}/bin:${xemacs}/bin:${PATH}"; 
export PATH

TCLLIBPATH=${graphviz}/lib; export TCLLIBPATH

###
#  Handle the command line, &c.
###

myname=`basename $0`
myversion=`echo $Revision| cut -d' ' -f2`
verbose=0
xargs=""

# The argument vector: list of option letters, colons denote option
# arguments.  See Usage function, immediately below, for option
# explanation.
myarguments="C:dhT:vV"

# Usage: displays helpful usage information
Usage() {
cat << E_O_USAGE >&2
Usage: $myname [options]
Options:
    -C file         specifies the configuration file to be processed
    -d              run in debug mode (with viewer)
    -h              display help information (usage)
    -T <port>       specifies TB_PORT for toolbus
    -v              run verbose mode (with logger)
    -V              reveal program version (i.e. $myversion)
E_O_USAGE
}

Version() {
    echo "$myname v$myversion" >&2
    addeqssyntax -V
    unparsePT -V
    baffle -v
    asfc -V
    asfe -V
    graph-browser -V
    in-output -V
    module-db -V
    parsetablegen -V
    removevarsyntax -V
    sglr -V
    toolbus -version
    xemacs -V
    echo 'puts "wish v$tk_version" ;\
          package require Tcldot;\
          puts "tcldot v[package versions Tcldot]";\
          exit;' | $wish
}

# getopt handles command line...
args=`getopt $myarguments $* 2> /dev/null`
if test $? != 0
then
        Usage
        exit 2
fi
set -- $args

# Argument interpretation...

configfile="meta.conf"        

while [ $#  -gt 0 ]
do
    case "$1"
    in
        -C)
                shift
                configfile=$1
                ;;    
        -d)
		xargs="$xargs -viewer" ;;
        -h)
		Usage ; exit 0 ;;
        -t)
		;;
        -T)
		shift; xargs="$xargs -TB_PORT $1" ;;
        -v)
		xargs="$xargs -logger"
		verbose=1 ;;
	-V)
		Version ; exit 0 ;;
	--)
		;;
	*)
		;;
    esac
    shift
done


###
#  Get to the real work now...
###

toolbusdefs="-DCONFIG_FILE=\\\"${configfile}\\\""

if [ $verbose -gt 0 ] ; then
   set -x
fi

toolbus $xargs ${toolbusdefs} \
   -I${prefix}/share \
   -I${aterm}/share \
   -I${pt_support}/share \
   -I${sglr}/share \
   -I${pgen}/share \
   -I${asf}/share \
   ${prefix}/share/meta.tb
