#! /bin/sh

# $Id$

Revision='$Revision$'

aterm=__ATERM__
pt_support=__PT_SUPPORT__
sglr=__SGLR__
pgen=__PGEN__
toolbus=__TOOLBUS__
xemacs=__XEMACS__
prefix=__PREFIX__
metastudio_def=__METASTUDIO_DEF__

PATH="${prefix}/bin:${aterm}/bin:${pt_support}/bin:${sglr}/bin:${pgen}/bin:\
${toolbus}/bin:${xemacs}/bin:${PATH}"; 
export PATH

# use xemacs by default
editor="emacs-editor"

###
#  Handle the command line, &c.
###

myname=`basename $0`
myversion=`echo $Revision| cut -d' ' -f2`
verbose=0
xargs=""

# The argument vector: list of option letters, colons denote option
# arguments.  See Usage function, immediately below, for option
# explanation.
myarguments="C:I:deghm:o:p:sS:t:T:vV"

# Usage: displays helpful usage information
Usage() {
cat << E_O_USAGE >&2
Usage: $myname [options]
Options:
    -C file         specifies the configuration file to be processed
    -I dir          location of extra toolbus scripts
    -d              run in debug mode (with viewer)
    -e              use xemacs editor [default]
    -g              use gvim editor   (experimental)
    -h              display help information (usage)
    -m modulename   specifies the name of the top module to start with
    -o <file>       output file (only works with -P and -E)
    -p <path>       add <path> to PATH of Meta-Environment
    -s              save intermediate files to disk (only works with -P and -E)
    -S              execute the given tb-script
    -t <int>        MetaEnvironment will abort after <int> seconds
    -T <port>       specifies TB_PORT for toolbus
    -v              run verbose mode (with logger)
    -V              reveal program version (i.e. $myversion)
E_O_USAGE
}

Version() {
    echo "$myname v$myversion" >&2
    baffle -v
    configmanager -V
    editor-manager -V
    in-output -V
    module-db -V
    parsetablegen -V
    restorebrackets -V
    se -V
    sglr -V
    toolbus -version
    unparsePT -V
    xemacs -V
}

# getopt handles command line...
args=`getopt $myarguments $* 2> /dev/null`
if test $? != 0
then
        Usage
        exit 2
fi
set -- $args

# Argument interpretation...

configfile="meta.conf"
modulename=""
extra_scripts="-I${prefix}/share/meta"
meta_script=${prefix}/share/meta/meta.tb
time_out_def=""
saving="false"
filename=""

while [ $#  -gt 0 ]
do
    case "$1"
    in
        -C)
                shift
                configfile=$1
                ;;    
        -I)     
		shift
	        extra_scripts="${extra_scripts} -I$1"
		;;
        -d)
		xargs="${xargs} -viewer" 
		;;
	-e)
		editor="emacs-editor" 
		;;
	-g)
		editor="gvim-editor" 
		;;
        -h)
		Usage ; exit 0 
		;;
	-m)
		shift
		modulename=$1
		;;
	-o)     
		shift
	        filename=$1
		;;
	-p)    
	        shift;
	        PATH="$1:${PATH}"
		export PATH
		;;
	-s)     
		saving="true"
		;;
	-S)     
		shift
		meta_script="$1"
		;;
	-t)     
	        shift
		time_out_def="-DTIMEOUT=$1"
		;;
        -T)
		shift; 
		xargs="${xargs} -TB_PORT $1" 
		;;
        -v)
		xargs="${xargs} -logger"
		verbose=1 
		;;
	-V)
		Version ; exit 0 
		;;
	--)
		;;
	*)
		;;
    esac
    shift
done

###
#  Get to the real work now...
###

toolbusdefs="-DEDITOR=\\\"${editor}\\\" -DSAVING=\\\"${saving}\\\" -DFILENAME=\\\"${filename}\\\" -DMODULENAME=\\\"${modulename}\\\" -DCONFIG_FILE=\\\"${configfile}\\\" ${metastudio_def} ${time_out_def}"

if [ $verbose -gt 0 ] ; then
   set -x
fi

toolbus $xargs ${toolbusdefs} \
   -I${toolbus}/share/toolbus \
   -I${prefix}/share/meta \
   -I${aterm}/share \
   -I${pt_support}/share/pt-support \
   -I${sglr}/share/sglr \
   -I${pgen}/share/pgen \
   ${extra_scripts} \
   ${meta_script}
