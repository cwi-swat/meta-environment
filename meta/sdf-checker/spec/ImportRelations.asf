equations

%% Transitive closure computation

  [clos-1] 
      $ImportRelations = {$ImportRelation*1, $ImportRelation1, $ImportRelation*2},
      $ImportRelation1 = [$ModuleName1: 
                          imports($Import*1 $ModuleName2 $Import*2)],

      $ImportRelations = {$ImportRelation*3, 
                          [$ModuleName2 : imports($Import*3)],
                          $ImportRelation*4},
      $ImportRelation2 = [$ModuleName1: 
                          imports($Import*1 $ModuleName2 $Import*2 $Import*3)],
      $ImportRelation1 != $ImportRelation2
      ====================================
      closure($ImportRelations) = 
        closure({$ImportRelation*1, $ImportRelation2, $ImportRelation*2})

  [default-closure] closure($ImportRelations) = $ImportRelations

  [x] get-module($ModuleName, $Definition) = $Module,
      get-imports($ModuleName,  $ImportRelations) = imports($Import*1),
      get-imports($ModuleName,  imports($Import*1)) = imports($Import*2),
      $Grammar1 = expand-imports(imports($Import*2), syntax, $Definition),

      get-hidden-imports($Module, imports()) = imports($Import*3),
      $Grammar2 = expand-imports(imports($Import*3), syntax, $Definition)
      ===================================================================
      expand($ModuleName, $Definition, $ImportRelations) =
        $Module + exports $Grammar1 + hiddens $Grammar2

  [x] closure(get-exported-import-relations($Definition, {})) = 
        $ImportRelations
      =========================================================
      expand($ModuleName, $Definition) = 
        expand($ModuleName, $Definition, $ImportRelations)