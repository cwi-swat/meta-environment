# @configure_input@
# Directory: in-output

# Configure variable substitutions
PRODUCT		= @PRODUCT@
VERSION		= @VERSION@

@SET_MAKE@

srcdir		= @srcdir@
VPATH		= @srcdir@
top_srcdir	= @top_srcdir@
prefix		= @prefix@
exec_prefix	= @exec_prefix@
bindir		= @bindir@
libdir		= @libdir@
includedir	= @includedir@
datadir		= @datadir@
docdir		= $(top_srcdir)/docs

SHELL		= @SHELL@
MAKEDEPEND	= @MAKEDEPEND@
CC		= @CC@
CFLAGS		= @CFLAGS@ ${XCFLAGS}
CPP		= @CPP@
CPPFLAGS	= @CPP@ ${XCPPFLAGS}
DEFS		= @DEFS@ ${XDEFS}
INCLUDES	= @INCLUDES@ ${XINCLUDES}
LIBS		= @LIBS@ ${XLIBS}
SOCKLIBS	= @SOCKLIBS@

INSTALL		= @INSTALL@
INSTALL_DATA	= @INSTALL_DATA@
INSTALL_PROG	= @INSTALL_PROG@
UNINSTALL	= @UNINSTALL@

AR		= @AR@

ATERM		= @ATERM@
ATERMBIN	= @ATERMBIN@
ATERMLIB	= @ATERMLIB@
ATERMINC	= @ATERMINC@
TOOLBUS		= @TOOLBUS@
TOOLBUSBIN	= @TOOLBUSBIN@
TOOLBUSLIB	= @TOOLBUSLIB@
TOOLBUSINC	= @TOOLBUSINC@

# Implicit rules
include ${top_srcdir}/implicit-rules

# The eXtra parts of some variables
XCFLAGS		=
XCPPFLAGS	=
XINCLUDES	= -I$(ATERMINC)
XLIBS		= -L$(ATERMLIB) -lATerm -lAsFix -lATB $(SOCKLIBS)

# Other variables
# CSRC/CHDR are used to calculate dependencies
SRC		= in-output.c
GENCSRC		= in-output.tif.c
CSRC		= ${GENCSRC} ${SRC}
GENCHDR		= in-output.tif.h
CHDR		= ${GENCHDR}
OBJ             = $(subst .c,.o,$(CSRC))
# All files in BINFILES are installed in $(bindir)
BINFILES	= in-output
# All files in LIBFILES are installed in $(libdir)
LIBFILES	= 
DATAFILES	= in-output.idef
# All files in INCLUDEFILES are installed in $(includedir)
INCLUDEFILES	=
# Local includes
LOCALINCLUDES   = in-output.tif.h
# All files in DOCFILES are copied to $(docdir)
DOCFILES	=

# CLEANFILES are removed by 'make clean'
CLEANFILES	= ${BINFILES} ${GENCSRC} ${GENCHDR} *.o *~ 
# DISTCLEANFILES are removed by 'make distclean'
DISTCLEANFILES	= depend Makefile in-output.tif.c in-output.tif.h

# The all target must be defined:
all: depend $(BINFILES) $(LIBFILES) $(INCLUDEFILES)

.PHONY: test

# Unit test target
test:	all
	${top_srcdir}/utils/test-help ./in-output
	${top_srcdir}/utils/test-version ./in-output
	@cd test; $(MAKE) test

# Explicit rules
# example: 'mytest.c: mytest.c.nw'

%.tif.c %.tif.h: %.tifs
	$(ATERMBIN)/tifstoc -tool $* $<

%.tifs: %.idef
	$(TOOLBUSBIN)/idef2tif $<

in-output: ${OBJ} ${LIBFILES} 
	$(CC) -o $@ ${OBJ} $(LIBS)

%.o:	%.c	$(INCLUDEFILES)
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

##########################################################
### Everything below this line should remain unchanged ###
##########################################################

# install target (install binaries, include files, and libraries)
install: all
	mkdir -p $(bindir) $(libdir) $(includedir) $(datadir)
	@$(INSTALL_PROG) $(INSTALL) $(bindir) $(BINFILES)
	@$(INSTALL_DATA) $(INSTALL) $(libdir) $(LIBFILES)
	@$(INSTALL_DATA) $(INSTALL) $(includedir) $(INCLUDEFILES)
	@$(INSTALL_DATA) $(INSTALL) $(datadir) $(DATAFILES)

# uninstall target (remove all files installed by 'install' target)
uninstall:
	@$(UNINSTALL) $(bindir) $(BINFILES)
	@$(UNINSTALL) $(libdir) $(LIBFILES)
	@$(UNINSTALL) $(includedir) $(INCLUDEFILES)

# doc target (copy generated documentation files to $(docdir))
doc: $(DOCFILES)
	@$(INSTALL_DATA) $(INSTALL) $(docdir) $(DOCFILES)

# clean target (remove all easily build components and temporary files)
clean:
	rm -f $(CLEANFILES)
	cd test; $(MAKE) clean

# distclean target (also remove any files created by 'configure')
distclean: clean
	rm -f $(DISTCLEANFILES)

# distclean target

# Updating of included dependencies (CC needs to be gcc!)
depend: $(CSRC)
	-@${MAKEDEPEND} ${INCLUDES} $(CSRC) > $@

-include depend
