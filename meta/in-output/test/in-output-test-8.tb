/*

    Meta-Environment - An environment for language prototyping.
    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

*/
#include "../in-output.idef"

process Test is
let
  SdfText : str,
  SdfTree : term,
  Path    : str,
  Time    : term,
  Msg     : str
in
  snd-msg(open-file("TestSdf")) .
  (
    rec-msg(opened-file("TestSdf", text(SdfText?), Path?, Time?))
  +
    (
      rec-msg(opened-file("TestSdf", tree(SdfTree?), Path?, Time?))
    +
      rec-msg(error-opening("TestSdf"))
    ) .
    printf("in-output-test-8 FAILED!\n")
  +
    shutdown("test-8 FAILED! (timeout)\n") delay(sec(5))
  ) .
  shutdown("") delay(sec(2))
endlet

toolbus(Test, Io)
