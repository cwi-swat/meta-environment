=head1 NAME

Meta-Conventions - New-Meta Tool Programming Conventions


=head1 DESCRIPTION

This document describes some conventions pertaining to the commandline
of tools in the C<New Meta Environment>.


=head2 File Name Conventions

Filenames are:

=over

=item * Standard in- and output; these are referenced on all systems
    using the dash sign, `F<->', which may have to be interpreted
    explicitly.

=item * Names in accordance to local filesystem conventions;
    Examples:
      F</opt/data/file>,
      F<:Hard Disk:Documents:One Of These Files O'Mine>,
      F<C:\SYSTEM\FILE.FIL>.


=back

=head2 Command Line Parameter Conventions

The following parameters must be supported by tools in the Meta-Environment:

=over

=item B<-b>: terms are written as BAF (Binary AsFix)  (default)

=item B<-h>: display helpful usage information

=item B<-i F<file>>: read input from F<file>  (default stdin)

=item B<-o F<file>>: write output to F<file>  (default stdout)

=item B<-t>: terms are written as plain text

=item B<-v>: run in verbose mode

=item B<-V>: reveal program version


=back


=head1 SEE ALSO

Man pages: getopt(3), getopt(1).

Some skeletal implementations supporting command-line handling in
conformance to this convention exist:

=over

=item * I<Bourne Shell Family> F<meta-skel.sh>

=item * I<ANSI C> F<meta-skel.c>

=back


=head1 NOTES

Actually putting the skeletal code to good use will require some
attention.


=head1 RESTRICTIONS

The `long option' convention, in which options are written as two hyphens
followed by a descriptive phrase that can be abbreviated as long as
uniqueness is guaranteed, is not supported.  The reason for this is that
this is implementation-specific to the GNU implementation of the core
command-line handling routine C<getopt>.


=head1 AUTHOR

Jeroen Scheerder <S<js@cwi.nl>>
