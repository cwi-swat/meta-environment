%%
%%    Meta-Environment - An environment for language prototyping.
%%    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 
%%
%%    This program is free software; you can redistribute it and/or modify
%%    it under the terms of the GNU General Public License as published by
%%    the Free Software Foundation; either version 2 of the License, or
%%    (at your option) any later version.
%%
%%    This program is distributed in the hope that it will be useful,
%%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%%    GNU General Public License for more details.
%%
%%    You should have received a copy of the GNU General Public License
%%    along with this program; if not, write to the Free Software
%%    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
%%
equations

[Tc1]  tcp(begin Decls Series end) = tcs(Series, tcd(Decls))

[Tc2]  tcd(declare Id-type*;) = tcits(Id-type*,[])

[Tc3a] tcits(Id:Type, Id-type*, Tenv) = tcits(Id-type*, tcit(Id:Type, Tenv))

[Tc3b] tcits(,Tenv) = Tenv

[Tc4a] lookup(Id,Tenv) = nil-type
       =========================
       tcit(Id:Type, Tenv) = (Id:Type) + Tenv

[Tc4b] lookup(Id,Tenv) != nil-type
       =========================
       tcit(Id:Type, Tenv) = Tenv

[Tc5a] tcs(Stat ; Stat*, Tenv) =
       tcst(Stat,Tenv) & tcs(Stat*,Tenv)

[Tc5b] tcs(,Tenv) = true

[Tc6a] tcst(Id := Exp, Tenv) = compatible(tce(Id,Tenv), tce(Exp,Tenv))

[Tc6b]              tce(Exp,Tenv) = natural
        ======================================================
        tcst(if Exp then Series1 else Series2 fi, Tenv) =
        tcs(Series1, Tenv) & tcs(Series2, Tenv)

[Tc6c]   tce(Exp, Tenv) = natural
        =================================================
         tcst(while Exp do Series od, Tenv) = tcs(Series, Tenv)

[default-Tc6] tcst(Stat, Tenv) = false

[Tc7a]  tce(Id, Tenv) = lookup(Id, Tenv)
[Tc7b]  tce(Nat-con, Tenv) = natural
[Tc7c]  tce(Str-con, Tenv) = string

[Tc7d]  tce(Exp1, Tenv) = natural, tce(Exp2, Tenv) = natural
        ==================================================
           tce(Exp1 + Exp2, Tenv) = natural

[Tc7e]  tce(Exp1, Tenv) = natural, tce(Exp2, Tenv) = natural
        ==================================================
           tce(Exp1 - Exp2, Tenv) = natural

[Tc7f]  tce(Exp1, Tenv) = string, tce(Exp2, Tenv) = string
        ================================================
           tce(Exp1 || Exp2, Tenv) = string

[default-Tc7] tce(Exp,Tenv) = nil-type

