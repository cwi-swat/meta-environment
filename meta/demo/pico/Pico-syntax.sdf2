%%
%%    Meta-Environment - An environment for language prototyping.
%%    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 
%%
%%    This program is free software; you can redistribute it and/or modify
%%    it under the terms of the GNU General Public License as published by
%%    the Free Software Foundation; either version 2 of the License, or
%%    (at your option) any later version.
%%
%%    This program is distributed in the hope that it will be useful,
%%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%%    GNU General Public License for more details.
%%
%%    You should have received a copy of the GNU General Public License
%%    along with this program; if not, write to the Free Software
%%    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
%%
module Pico-syntax
imports Pico-Identifiers Pico-Integers Pico-Strings Types
exports
  sorts PROGRAM DECLS ID-TYPE STATEMENT EXP
  context-free syntax
    "begin" DECLS {STATEMENT ";"}* "end"                          -> PROGRAM
    "declare" {ID-TYPE  ","}* ";"                                 -> DECLS
    PICO-ID ":" TYPE                                              -> ID-TYPE
    PICO-ID ":=" EXP                                              -> STATEMENT
    "if" EXP "then" {STATEMENT ";"}* "else" {STATEMENT ";"}* "fi" -> STATEMENT
    "while" EXP "do" {STATEMENT ";"}* "od"                        -> STATEMENT
    PICO-ID                                                       -> EXP
    PICO-NAT-CON                                                  -> EXP
    PICO-STR-CON                                                  -> EXP
    EXP "+" EXP                                                   -> EXP {left}
    EXP "-" EXP                                                   -> EXP {left}
    EXP "||" EXP                                                  -> EXP {left}
    "(" EXP ")"                                                   -> EXP {bracket}

  context-free priorities
    EXP "||" EXP -> EXP >
    EXP "-" EXP -> EXP >
    EXP "+" EXP -> EXP

  variables
    "Decls" [0-9\']*        -> DECLS
    "Id-type*"[0-9]*     -> { ID-TYPE "," }*
    "Series" [0-9\']*       -> {STATEMENT ";"}+
    "Stat" [0-9\']*         -> STATEMENT
    "Stat*"[0-9\']*       -> {STATEMENT ";"}*
    "Stat+"[0-9\']*       -> {STATEMENT ";"}+
    "Exp" [0-9\']*          -> EXP
