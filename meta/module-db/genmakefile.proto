#
# $Id$
#
# Template for Makefile(.in) for use with genmakefile.sh
#
# You might want to change some of the variables below:
#     STD_CC_FLAGS: default compiler flags
#     STD_LD_FLAGS: default linker flags

    STD_CC_FLAGS=
    STD_LD_FLAGS=

#      FLAGS_$(CC): Compiler dependent settings

        FLAGS_cc="-O"
       FLAGS_gcc="-Wall -O4"


# DEBUG-CC-FLAGS: compiler flags to store debugging information in object files
# DEBUG-LD-FLAGS: optional flags for linking with debugging information

  DEBUG_CC_FLAGS=-g
  DEBUG_LD_FLAGS=

# PROFILE_CC_FLAGS: compiler flags to store profile information in object files
# PROFILE_LD_FLAGS: optional flags for linking profiled object code

PROFILE_CC_FLAGS=-pg
PROFILE_LD_FLAGS=-pg

LOCALLIBS=-lsupport -lATB -lAsFix -lATerm

VPATH           = @srcdir@
srcdir          = @srcdir@
top_srcdir      = @top_srcdir@

# Default compiler to use
CC=@CC@

# DEBUG-LIBS:     libraries containing debugging information
DEBUG-LIBS     = -L$(ATERM)/lib -L$(NEW_META)/lib $(LOCALLIBS:=-dbg) $(LIBS)
DEBUG-CC-FLAGS = ${DEBUG_CC_FLAGS}
DEBUG-LD-FLAGS = ${DEBUG_LD_FLAGS}

# PROFILE-LIBS:     libraries containing profile information
# PROFILE-CC-FLAGS: compiler flags to store profile information in object files
# PROFILE-LD-FLAGS: optional flags for linking profiled object code
PROFILE-LIBS     = -L$(ATERM)/lib -L$(NEW_META)/lib $(LOCALLIBS:=-prof) $(LIBS)
PROFILE-CC-FLAGS = ${PROFILE_CC_FLAGS}
PROFILE-LD-FLAGS = ${PROFILE_LD_FLAGS}

# STD-LIBS:     normal libraries
# STD-CC-FLAGS: normal compiler flags
# STD-LD-FLAGS: optional flags
STD-LIBS      = -L$(ATERM)/lib -L$(NEW_META)/lib $(LOCALLIBS:=-$(CC)) $(LIBS)
STD-CC-FLAGS  = ${STD_CC_FLAGS}
STD-LD-FLAGS  = ${STD_LD_FLAGS}

# FLAGS_$(CC): compiler dependent flags (e.g., FLAGS-gcc=-Wall)
FLAGS-cc      = ${FLAGS_cc}
FLAGS-gcc     = ${FLAGS_gcc}

# There should be no need to change anything below

prefix          = @prefix@
exec_prefix     = @exec_prefix@
bindir          = @bindir@
libdir          = @libdir@
includedir      = @includedir@

DEFS            = @DEFS@ $(XDEFS)
INCLUDES        = @INCLUDES@ $(XINCLUDES)
LIBS            = @LIBS@ $(XLIBS)
SOCKLIBS        = @SOCKLIBS@

ATERM           = @ATERM@
NEW_META        = @NEW_META@

XINCLUDES       = -I$(ATERM)/include -I$(NEW_META)/include -I$(includedir)
XLIBS           = -L$(prefix)/lib $(SOCKLIBS)

SPEC_SRCS=$(shell grep -v '^\#' @TARGET@.module-list)
SRCS=$(SPEC_SRCS) init.c

STD-OBJS=$(SRCS:.c=-$(CC).o)
DEBUG-OBJS=$(SRCS:.c=-dbg.o)
PROFILE-OBJS=$(SRCS:.c=-prof.o)

BINFILES    = @TARGET@
LIBFILES    =
INCLUDEFILES=

# Make rules

all:	${BINFILES}

%-$(CC).o:	%.c
	$(CC) $(FLAGS-$(CC)) $(STD-CC-FLAGS) $(DEFS) $(INCLUDES) -c $< -o $@

%-dbg.o:	%.c
	$(CC) $(FLAGS-$(CC)) $(DEBUG-CC-FLAGS) $(DEFS) $(INCLUDES) -c $< -o $@

%-prof.o:	%.c
	$(CC) $(FLAGS-$(CC)) $(PROFILE-CC-FLAGS) $(DEFS) $(INCLUDES) -c $< -o $@

@TARGET@:	$(STD-OBJS)
	$(CC) $(STD-LD-FLAGS) -o $@ $(STD-OBJS) $(LIBDIR) $(STD-LIBS)

@TARGET@-debug:	$(DEBUG-OBJS)
	$(CC) $(DEBUG-LD-FLAGS) -o $@ $(DEBUG-OBJS) $(LIBDIR) $(DEBUG-LIBS)

@TARGET@-prof:	$(PROFILE-OBJS)
	$(CC) $(PROFILE-LD-FLAGS) -o $@ $(PROFILE-OBJS) $(LIBDIR) $(PROFILE-LIBS)

debug:  @TARGET@-debug

profile: @TARGET@-prof

init.c: $(SPEC_SRCS)
	@(echo "/*GENERATED AUTOMATICALLY, DO NOT MODIFY */" ;\
	SPEC_SRCS="$(SPEC_SRCS)" ;\
	for file in $$SPEC_SRCS; do \
		echo "extern void register_$$file();" ;\
		echo "extern void resolve_$$file();"  ;\
		echo "extern void init_$$file();"  ;\
	done ;\
	echo "void register_all() {" ;\
	for file in $$SPEC_SRCS; do \
		echo "  register_$$file();" ;\
	done ;\
	echo "}" ;\
	echo "void resolve_all() {" ;\
	for file in $$SPEC_SRCS; do \
		echo "  resolve_$$file();"  ;\
	done ;\
	echo "}" ;\
	echo "void init_all() {" ;\
	for file in $$SPEC_SRCS; do \
		echo "  init_$$file();"  ;\
	done ;\
	echo "}" ) | sed 's/.c()/()/g;s/-/_/g;' > $@

clean:
	$(RM) *.o init.c @TARGET@ @TARGET@-db @TARGET@-prof
