/*
    $Id$
*/        

#ifndef CONFIG_FILE
#define CONFIG_FILE "meta.conf"
#endif
#ifndef BUTTON_FILE
#define BUTTON_FILE "meta.buttons"
#endif
#ifndef ASF_LIBRARY_PATH
#define ASF_LIBRARY_PATH "."
#endif

process ProcessButtons(CMNG : configmanager) is
let
  Term          : term
in
  snd-msg(get-button-file(BUTTON_FILE)) .
  (
    rec-msg(button-file(BUTTON_FILE, Term?)) .
    snd-eval(CMNG, process-button-file(BUTTON_FILE, Term))
  +
    rec-msg(no-button-file(BUTTON_FILE)) .
    snd-eval(CMNG, process-button-file(BUTTON_FILE, buttons([])))
  ) .
  rec-value(CMNG, buttons-processed) .
  snd-note(search-paths-processed)
endlet
  

process ConfigManager is
let
  CMNG          : configmanager,
  Text          : str,
  Fid           : str,
  Paths         : list,
  ButtonName    : list,
  ButtonNames   : list,
  ButtonActions : list,
  ModuleName    : str,
  EditorType    : str,
  Tree          : term,
  Term          : term,
  Pid           : int,
  LibraryPath   : str
in
  execute(configmanager, CMNG?) .
  snd-msg(get-config-file(CONFIG_FILE)) .
  (
    rec-msg(config-file(CONFIG_FILE, Text?)) .
    snd-eval(CMNG, process-config-file(CONFIG_FILE, Text))
  +
    rec-msg(no-config-file(CONFIG_FILE)) .
    snd-eval(CMNG, process-config-file(CONFIG_FILE, "."))
  ) .
  rec-value(CMNG, search-paths(Paths?)) .
  snd-msg(library-location-hook).
  rec-msg(library-location-hook-result(LibraryPath?)).
  Paths := join(Paths, LibraryPath) .
  snd-msg(process-search-paths(CONFIG_FILE, Paths)) .
  rec-msg(search-paths-processed(CONFIG_FILE)) .
  ProcessButtons(CMNG) .
  snd-note(search-paths-processed) .
  (
    rec-msg(refresh-buttons) .
    ProcessButtons(CMNG) .
    snd-msg(buttons-refreshed)
  +
    rec-msg(get-auxilary-buttons(EditorType?, ModuleName?)) .
    snd-eval(CMNG, get-button-names(EditorType, ModuleName)) .
    rec-value(CMNG, button-names(ButtonNames?)) .
    snd-msg(button-list(ModuleName, ButtonNames))
  +
    rec-msg(get-button-actions(ButtonName?, EditorType?, ModuleName?)) .
    snd-eval(CMNG, get-button-actions(ButtonName, EditorType, ModuleName)) .
    rec-value(CMNG, button-actions(ButtonActions?)) .
    snd-msg(button-actions(ButtonName,EditorType,ModuleName,ButtonActions))
  ) * delta
endlet

tool configmanager is { command = "configmanager" }
