/* $Id$ */        

#ifndef CONFIG_FILE
#define CONFIG_FILE "meta.conf"
#endif

#ifndef BUTTON_FILE
#define BUTTON_FILE "meta.buttons"
#endif

process AddUserDefinedActions(CMNG: configmanager) is
let
  Contents : str,
  ErrorMessage : str
in
  snd-msg(io-read-file(BUTTON_FILE)) .
  (
    rec-msg(io-file-contents(Contents?)) .
    snd-do(CMNG, set-actions(Contents))
  +
    rec-msg(io-error-reading(ErrorMessage?)) .
    snd-do(CMNG, remove-actions)
  )
endlet

process AddPredefinedActions(CMNG: configmanager) is
let
  Contents : str
in
  snd-msg(actions-hook) .
  rec-msg(actions-hook-result(Contents?)) .
  snd-do(CMNG, add-predefined-actions(Contents))
endlet
  
process ConfigManager is
let
  CMNG : configmanager,
  ButtonActions : list,
  ButtonName : term,
  ButtonNames : list,
  Directories : list,
  EditorType : term,
  ErrorMessage : str,
  Fid : str,
  LibraryPath : str,
  ModuleName : str,
  Pid : int,
  SearchPaths : list,
  Term : term,
  Text : str,
  Tree : term
in
  execute(configmanager, CMNG?) .
  snd-msg(io-read-file(CONFIG_FILE)) .
  (
    rec-msg(io-file-contents(Text?))
  +
    rec-msg(io-error-reading(ErrorMessage?)) .
    Text := "."
  ) .
  snd-eval(CMNG, parse-config-file(Text)) .
  rec-value(CMNG, directories(Directories?)) .
  snd-msg(io-relative-to-absolute(Directories)) .
  rec-msg(io-absolute-directories(Directories?)) .
  snd-do(CMNG, register-user-directories(Directories)) .

  snd-msg(library-location-hook).
  rec-msg(library-location-hook-result(LibraryPath?)).
  snd-do(CMNG, register-library(LibraryPath)) .
  AddUserDefinedActions(CMNG) .
  AddPredefinedActions(CMNG) .
  (
    rec-msg(refresh-buttons) .
    AddUserDefinedActions(CMNG) .
    snd-msg(buttons-refreshed)
  +
    rec-msg(get-auxiliary-buttons(EditorType?, ModuleName?)) .
    snd-eval(CMNG, get-button-names(ModuleName, EditorType)) .
    rec-value(CMNG, button-names(ButtonNames?)) .
    snd-msg(button-list(ModuleName, ButtonNames))
  +
    rec-msg(get-button-actions(ButtonName?, EditorType?, ModuleName?)) .
    snd-eval(CMNG, get-button-actions(ModuleName, EditorType, ButtonName)) .
    rec-value(CMNG, button-actions(ButtonActions?)) .
    snd-msg(button-actions(ButtonName, EditorType, ModuleName, ButtonActions))
  +
    rec-msg(get-search-paths) .
    snd-eval(CMNG, get-search-paths) .
    rec-value(CMNG, search-paths(SearchPaths?)) .
    snd-msg(search-paths(SearchPaths))
  ) * delta
endlet

tool configmanager is { command = "configmanager" }
