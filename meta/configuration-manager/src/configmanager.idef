/*
    Meta-Environment - An environment for language prototyping.
    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam,
                        The Netherlands.

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

    $Id$
*/        

#ifndef CONFIG_FILE
#define CONFIG_FILE "meta.conf"
#endif

process ConfigManager is
let
  CMNG  : configmanager,
  Text  : str,
  Paths : list
in
  execute(configmanager, CMNG?) .
printf("Config file used %s\n", CONFIG_FILE) .
  snd-msg(get-config-file(CONFIG_FILE)) .
  (
    rec-msg(config-file(CONFIG_FILE, Text?)) .
    snd-eval(CMNG, process-config-file(CONFIG_FILE, Text))
  +
    rec-msg(no-config-file(CONFIG_FILE)) .
    snd-eval(CMNG, process-config-file(CONFIG_FILE, "."))
  ) .
  rec-value(CMNG, search-paths(Paths?)) .
  snd-msg(process-search-paths(CONFIG_FILE, Paths)) .
  rec-msg(search-paths-processed(CONFIG_FILE))
endlet

tool configmanager is { command = "configmanager" }
