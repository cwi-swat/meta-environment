buttons([
  button("*",
         ["syntax","equations","term"],
         ["Move","Down"],
         [move-down]),
  button("*",
         ["syntax","equations","term"],
         ["Move","Up"],
         [move-up]),
  button("*",
         ["syntax","equations","term"],
         ["Move","Right"],
         [move-right]),
  button("*",
         ["syntax","equations","term"],
         ["Move","Left"],
         [move-left]),
  button("*",
         ["syntax","equations","term"],
         ["Actions","ViewTree"],
         [get-focus, 
	  show-tree]),
  button("*",
         ["syntax"],
         ["Actions","Parse"],
         [push-active-module, 
	  parse-syntax-action]),
  button("*",
         ["equations"],
         ["Actions","Parse"],
         [push-active-module, 
	  parse-equations-action]),
  button("*",
         ["term"],
         ["Actions","Reduce"],
         [push-active-module,
          get-root,
          push-active-module,
          reduce,
	  push-filename("reduct.out"),
	  push-active-module,
	  close-editor,
          push-filename("reduct.out"),
          push-active-module,
          activate-editor
         ]),
  button("*",
         ["term"],
         ["Actions","Parse"],
         [push-active-module,
	  parse-action]),
   button("*",
	  ["module-popup"],
	  ["Edit Syntax"],
	  [edit-syntax]),
   button("*",
	  ["module-popup"],
	  ["Edit Equations"],
	  [edit-equations]),
   button("*",
	  ["module-popup"],
	  ["Edit Term..."],
	  [prompt-for-file("Edit Term", "", ".trm"),
	   dup,
	   push-string(""),
	   if-equal([],
	   [edit-term])]),
   button("*",
	  ["module-popup"],
	  ["Revert Module"],
	  [revert-module]),
   button("*",
	  ["module-popup"],
	  ["Close Module..."],
	  [ask-question("Do you want to recursively close the imported modules?"),
	   dup,
	   push-term(yes),
	   if-equal([pop,
		     close-module(recursive)], 
		    [push-term(no),
		     if-equal([close-module(top)],
		     [])])
	   ]),
   button("*",
	  ["module-popup"],
	  ["Refactor", "Copy..."],
	  [prompt-for-file("Copy module to", "", ".sdf"),
	   dup,
	   push-string(""),
	   if-equal([],
	   [split-file-name(".sdf"),
	    copy-module])
	   ]),
   button("*",
	  ["module-popup"],
	  ["Refactor", "Delete..."],
	  [ask-question("Are you sure you want delete this module (from disk)?"),
	   dup,
	   push-term(yes),
	   if-equal([pop,
		     delete-module], 
		    [])]),
   button("*",
	  ["module-popup"],
	  ["Refactor", "Rename..."],
	  [prompt-for-file("Rename module to", "", ".sdf"),
	   dup,
	   push-string(""),
	   if-equal([],
	   [split-file-name(".sdf"),
	    rename-module])
	   ]),
   button("*",
	  ["module-popup"],
	  ["Refactor", "Add Import..."],
	  [prompt-for-file("Import module", "", ".sdf"),
	   dup,
	   push-string(""),
	   if-equal([],
	   [split-file-name(".sdf"),
	    import-module])
	  ]),
   button("*",
	  ["module-popup"],
	  ["Refactor", "Remove Import..."],
	  [prompt-for-file("Remove import", "", ".sdf"),
	   dup,
	   push-string(""),
	   if-equal([],
	   [split-file-name(".sdf"),
	    unimport-module])]),
   button("*",
	  ["module-popup"],
	  ["Export","Dump Module"],
	  [dump-module]),
   button("*",
	  ["module-popup"],
	  ["Export","Compile Module"],
	  [compile-module]),
   button("*",
	  ["module-popup"],
	  ["Export","Dump Equations"],
	  [dump-equations]),
   button("*",
	  ["module-popup"],
	  ["Export","Dump Term ParseTable"],
	  [dump-parse-table]),
   button("*",
	  ["module-popup"],
	  ["Export","Dump Equations ParseTable"],
	  [dump-eqs-parse-table]),
   button("*",
	  ["module-popup"],
	  ["Export","Print Module"],
	  [print-module]),
   button("*",
	  ["new-module-popup"],
	  ["Create this module"],
	  [create-module]),
   button("*",
	  ["new-module-popup"],
	  ["Delete this module"],
	  [delete-module]),
   button("*",
	  ["studio-menubar"],
	  ["New Module"],
	  [prompt-for-file("New Module", "", ".sdf"),
	   dup,
	   push-string(""),
	   if-equal([],
	   [split-file-name(".sdf"),
	    new-module])]),
   button("*",
	  ["studio-menubar"],
	  ["Open Module"],
	  [prompt-for-file("Open Module", "", ".sdf"),
	   dup, 
	   push-string(""),
	   if-equal([],
	   [split-file-name(".sdf"),
	    open-module])]),
   button("*",
	  ["studio-menubar"],
	  ["Open Library Module"],
	  [prompt-for-file("Open LibraryModule", "__ASF_LIBRARY__", ".sdf"),
	   dup,
	   push-string(""),
	   if-equal([],
	   [split-file-name(".sdf"),
	    open-module])]),
   button("*",
	  ["studio-menubar"],
	  ["Save Term Store"],
	  [save-all]),
   button("*",
	  ["studio-menubar"],
	  ["Close All"],
	  [clear-all]),
   button("*",
	  ["studio-menubar"],
	  ["Clear History"],
	  [clear-history-list]),
   button("*",
	  ["studio-menubar"],
	  ["Refresh Buttons"],
	  [refresh-buttons]),
   button("*",
	  ["studio-menubar"],
	  ["Exit"],
	  [ask-question("Do you want to save the term store (to disk)?"),
	   dup,
	   push-term(yes),
	   if-equal([save-all,
		     exit], 
		    [exit])])
])
