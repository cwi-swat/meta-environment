#! @SHELL@
# $Id$
Revision='$Revision$'

prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
libdir=@libdir@
datadir=@datadir@
classdir=@prefix@/classes
toolbus=@TOOLBUSBIN@/toolbus

PATH="$PATH:$bindir"; export PATH
CLASSPATH=${classdir}:${CLASSPATH}; export CLASSPATH

###
#  Handle the command line, &c.
###

myname=`basename $0`
myversion=`echo $Revision| cut -d' ' -f2`
verbose=0

# The argument vector: list of option letters, colons denote option
# arguments.  See Usage function, immediately below, for option
# explanation.
myarguments="bc:hi:o:tvV"

if [ $myarguments ] ; then
   arg2explanation='s/\(.:\)/ -\1 /g; s/ \([^-:]\)/ -\1/g; s/:/ file/g';
   myargsexplained=" -`echo $myarguments|sed -e \"$arg2explanation\"`"
fi

# Usage: displays helpful usage information
Usage() {
cat << E_O_USAGE >&2
Usage: $myname$myargsexplained . . .
Options:
    -b              [ignored]
    -c dir          specifies compiler output directory
    -h              display help information (usage)
    -i file         [ignored]
    -o file         [ignored]
    -t              [ignored]
    -v              verbose mode
    -V              reveal program version (i.e. $myversion)
E_O_USAGE
}

Version() {
    echo "$myname v$myversion" >&2
}

# getopt handles command line...
args=`getopt $myarguments $* 2> /dev/null`
if test $? != 0
then
        Usage
        exit 2
fi
set -- $args

# Argument interpretation...
while [ $#  -gt 0 ]
do
myarguments="bc:hi:o:tvV"
    case "$1"
    in
        -b)
		;;
        -c)
		shift
		if [ -d $1 ] ; then
			COMPILER_OUTPUT=$1
			export COMPILER_OUTPUT
		else
			echo "$myname: Ignoring invalid COMPILER_OUTPUT \`$1'"
		fi ;;
        -h)
		Usage ;;
        -i)
		shift ;;
        -o)
		shift ;;
        -t)
		;;
        -v)
		verbose=1 ;;
	-V)
		Version ;;
	--)
		;;
	*)
		echo Invalid $1 ; Usage ;;
    esac
    shift
done


###
#  Get to the real work now...
###

if [ $verbose -gt 0 ] ; then
	echo CLASSPATH: $CLASSPATH
	echo COMPILER_OUTPUT: $COMPILER_OUTPUT
fi

$toolbus $@ -I${datadir} ${datadir}/meta.tb
