#ifndef __GUI_ACTIONS__
#define __GUI_ACTIONS__

#include <graph-utils.tb>
#include <module-manager.tb>

process AskQuestion(Question : str, Answer : term?) is
  snd-msg(ask-question(Question))
  . rec-msg(ask-question-result(Answer?))

process ClearHistoryAction is
  snd-msg(clear-history)

process PromptForFile(Title : str, 
                      Path : str, 
		      Modulename : str, 
		      Cancel: bool?,
		      Filename : str?) is
let
  Extension : str
in
  snd-msg(get-modulename-extension(Modulename))
  .
  (
    rec-msg(modulename-extension(Modulename, Extension?))
  +
    rec-msg(no-modulename-extension(Modulename))
    . snd-msg(file-extension-hook(trm))
    . rec-msg(file-extension-hook-result(Extension?))
  )
  . snd-msg(ask-for-file(Title, Path, Extension))
  .
  (
    rec-msg(ask-for-file-result(Filename?))
    . Cancel := false
  +
    rec-msg(ask-for-file-cancel)
    . Cancel := true
  )
endlet

process PromptForFileWithExtension(String : str, 
                                   Path : str, 
				   Extension : str, 
				   Cancel: bool?,
				   Filename : str?) is
  snd-msg(ask-for-file(String, Path, Extension))
  .
  (
    rec-msg(ask-for-file-result(Filename?))
    . Cancel := false
  +
    rec-msg(ask-for-file-cancel)
    . Cancel := true
  )

process Reduce(EditorId : term, ModuleId : term, Tree : term, RTree : term?) is
  snd-msg(debugging(off)) 
  . ReduceTerm(Tree, ModuleId, RTree?)
  .
  if not-equal(RTree, UNDEFINED) then
    snd-msg(promote-posinfo-to-origin(RTree))
    . rec-msg(promoted-posinfo-to-origin(RTree?))
    . AnnotateTree(RTree, "reduct.out", RTree?)
    . snd-msg(put-term-tree("reduct.out", RTree))
  else
    tau
  fi

process ExitAction is
  shutdown("")

process ShowTreeAction(EditorId : term) is
let
  Tree : term
in
  GetFocus(EditorId, Tree?)
  .
  if not-equal(Tree, UNDEFINED) then
    ShowTree(Tree, false, false)
  else
    tau
  fi
endlet

process ShowFullTreeAction(EditorId : term) is
let
  Tree : term
in
  GetFocus(EditorId, Tree?)
  .
  if not-equal(Tree, UNDEFINED) then
    ShowTree(Tree, true, false)
  else
    tau
  fi
endlet

process ShowSharedTreeAction(EditorId : term) is
let
  Tree : term
in
  GetFocus(EditorId, Tree?)
  .
  if not-equal(Tree, UNDEFINED) then
    ShowTree(Tree, true, true)
  else
    tau
  fi
endlet

#endif /*__GUI_ACTIONS__*/
