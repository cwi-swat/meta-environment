/*

  $Id$

*/

process DeleteAndKillEditor(EditorId : term) is
  snd-msg(kill-editor(EditorId)) .
  rec-msg(kill-editor-done(EditorId)) .
  snd-msg(delete-text-editor(EditorId)) .
  snd-msg(delete-structure-editor(EditorId)) .
  snd-note(delete-editor(EditorId))

process DeleteEditorsForModule(ModuleName: str) is
let
  EditorId   : term,
  EditorList : list
in
  snd-msg(get-editors-by-module(ModuleName)) .
  rec-msg(editors-by-module(EditorList?)) .
  (
    if not-equal(EditorList, []) then
      EditorId := first(EditorList) .
      DeleteAndKillEditor(EditorId) .
      EditorList := next(EditorList)
    fi
  ) *
  if equal(EditorList, []) then
    tau
  fi
endlet

process EditorCreator is
let
  Id         : int,
  Pid1       : int,
  Pid2       : int,
  Path       : term,
  Time       : term,
  Tree       : term,
  EditorId   : term,
  Text       : str,
  ModuleName : str,
  FileName   : str
in
  create(EditorManager, Id?) .
  (
    %% Edit a Syntax file
    rec-msg(edit-syntax(ModuleName?)) .
    snd-msg(get-sdf2-path-from-db(ModuleName)) .
    rec-msg(path(FileName?)) .
    snd-msg(get-editor-id(FileName, ModuleName)) .
    (
      rec-msg(new-editor(FileName, EditorId?)) .
      create(TextEditor("syntax", EditorId, ModuleName), Pid1?) .
      snd-msg(set-filename(EditorId, FileName)) .
      create(EditSyntax(EditorId, ModuleName), Pid2?) .
      rec-msg(initialization-done(EditorId))
    +
      rec-msg(existing-editor(FileName, EditorId?)) .
      snd-msg(move-editor-to-front(EditorId))
    ) .
    snd-msg(edit-syntax(ModuleName, EditorId))
  +
    %% Edit an Equations file
    rec-msg(edit-equations(ModuleName?)) .
    snd-msg(get-eqs-path-from-db(ModuleName)) .
    rec-msg(path(FileName?)) .
    snd-msg(get-editor-id(FileName, ModuleName)) .
    (
      rec-msg(new-editor(FileName, EditorId?)) .
      create(TextEditor("equations", EditorId, ModuleName), Pid1?) .
      snd-msg(set-filename(EditorId, FileName)) .
      create(EditEquations(EditorId, ModuleName), Pid2?) .
      rec-msg(initialization-done(EditorId))
    +
      rec-msg(existing-editor(FileName, EditorId?)) .
      snd-msg(move-editor-to-front(EditorId))
    ) .
    snd-msg(edit-equations(ModuleName, EditorId))
  +
    %% Edit a Term from file
    (
      rec-msg(edit-term-file(ModuleName?, FileName?)).
      Tree := none
    +
      rec-msg(edit-term-file-with-tree(ModuleName?, FileName?, Tree?)) 
    ).
    snd-msg(get-editor-id(FileName, ModuleName)) .
    (
      rec-msg(new-editor(FileName, EditorId?))
    +
      rec-msg(existing-editor(FileName, EditorId?)) .
      DeleteAndKillEditor(EditorId) .
      snd-msg(get-editor-id(FileName, ModuleName)) .
      rec-msg(new-editor(FileName, EditorId?)) 
    ) .
    create(TextEditor("term", EditorId, ModuleName), Pid1?) .
    snd-msg(open-trm-file(FileName)) .
    (
      rec-msg(opened-file(FileName, text(Text?), Path?, Time?)) .
      snd-msg(set-filename(EditorId, Path)) .
      create(EditTerm(EditorId, ModuleName, Text, Tree), Pid2?)
      +
      rec-msg(error-opening(FileName)) .
      snd-msg(set-filename(EditorId, FileName)) .
      create(EditTerm(EditorId, ModuleName, "", Tree), Pid2?)
    ) .
    snd-msg(edit-term-file(ModuleName, EditorId))
  +
    rec-msg(text-editor-disconnected(EditorId?)) .
    DeleteAndKillEditor(EditorId) 
  +
    rec-msg(delete-editors-for-module(ModuleName?)) .
    DeleteEditorsForModule(ModuleName)
  )
  * delta
endlet
