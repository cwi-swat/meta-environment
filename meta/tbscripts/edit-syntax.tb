/*
  $Id$
*/

process EditSyntax(EditorId: term, ModuleName: str) is
let
  Path      : str,
  Focus     : term,
  Tree      : term,
  Time      : term,
  Modules   : term,
  ErrorFoci : term,
  Text      : str,
  DirtyFoci : list,
  ModifiedStatus : term,
  Killed    : term
in
  Text := "" .
  snd-msg(get-sdf2-asfix(ModuleName)).
  (
    rec-msg(syntax(Tree?)) .
    snd-msg(initialize-structure-editor-with-tree(EditorId, Tree)) .
    rec-msg(initial-focus(Focus?))
  +
    rec-msg(unavailable).
    snd-msg(open-syntax-file(ModuleName)) .
    (
      rec-msg(opened-file(ModuleName, text(Text?), Path?, Time?))
    +
      rec-msg(error-opening(ModuleName))
    ) .
    snd-msg(initialize-structure-editor(EditorId, Text)) .
    rec-msg(initial-focus(Focus?))
  ) .
  snd-msg(set-focus(EditorId, Focus)) .
  Killed := false .
  (
    (  
      rec-msg(parse-buffer(EditorId)) .
      snd-msg(invalidate-tree(EditorId)).
      snd-msg(parse-focusses(EditorId, trm("Sdf2"))) .
      (
        rec-msg(parse-ok(trm("Sdf2"))) .
        snd-msg(get-tree(EditorId)) .
        rec-msg(tree(Tree?)) .
        snd-msg(update-module-in-db(ModuleName, Tree, "Sdf2")).
        (
          rec-msg(extra-modules(Modules?)).
          snd-msg(open-modules(Modules)).
          rec-msg(finished-opening-modules) .
          snd-msg(clear-focus(EditorId))
        +
          rec-msg(error-opening(ModuleName, name-inconsistent)).
          snd-msg(invalidate-sdf-in-db(ModuleName)).
          snd-msg(invalidate-tree(EditorId)).
          snd-note(ui-status(
            errorf("Changing the name of %s is not permitted.",[ModuleName])))
        )
      +
        rec-msg(parse-failed(trm("Sdf2"), ErrorFoci?)) .
        snd-msg(invalidate-sdf-in-db(ModuleName))
      )
    ) *
    if equal(Killed, true) then
      tau
    fi
  ) 
  ||
  rec-msg(kill-editor(EditorId)).
  Killed := true .
  snd-msg(get-modified-status(EditorId)) .
  rec-msg(modified-status(EditorId, ModifiedStatus?)) .
  snd-msg(kill-editor-done(EditorId)).
  if equal(ModifiedStatus, modified) then
    snd-msg(revert-module(ModuleName)).
    rec-msg(module-reverted(ModuleName)).
    snd-note(ui-status(errorf("Dirty module %s is reread from disk",
                       [ModuleName])))
  else
    tau
  fi
  
endlet
