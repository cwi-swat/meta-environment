/*
  $Id$
 */
process Edit-term(Mod: str, Term: term) is
let
  Tid   : int,
  Id    : term,
  Rewr  : int,
  Str   : str,
  Name  : term,
  Name2 : term,
  T     : term,
  T1    : term,
  T2    : term,
  Text  : str,
  Path  : str,
  Fid   : str,
  TE    : text-edit,
  Clst  : list,
  Flst  : list,
  Tslst : list,
  Src   : str,
  Table : str,
  I     : int,
  Ch    : int,
  Li    : int,
  Co    : int,
  Char  : term
in
  Id := process-id.
  subscribe(disconnected(<term>)) .
  snd-msg(get-table-from-db(id(Mod))) .
  (
    rec-msg(table(Table?))
  +
    rec-msg(no-table) .
    snd-msg(generate-parsetable(id(Mod))) .
    rec-msg(parsetable(Table?)) .
    snd-msg(Id,locate-parse-table-file(id(Mod))) .
    rec-msg(Id,located-parse-table-file(id(Mod),Table?)) .
    snd-msg(add-table-to-db(id(Mod),Table)) .
    rec-msg(done)
  ) .
  printf("parsetable for %t: %t\n", Mod, Table) .
  snd-msg(Id,open-trm-file(Term)) .
  (
    rec-msg(Id,opened-file(raw,Name?,Text?,Path?)) .
    snd-note(ui-status(stat(Id,"Opening existing term..."))) .
    create(Editor(Name,Text,Path,Mod), Tid?)
    +
    rec-msg(Id,error-opening(Str?)) .
    snd-note(ui-status(stat(Id,"Creating new term..."))) .
    create(Editor(id(Str),"",Str,Mod), Tid?)
  ) .
  snd-msg(open-language(Mod,Table)) .
  snd-note(ui-status(endstat(Id))) .
  rec-note(disconnected(TE))
endlet
