/* $Id$ */

process Parser is
  let
    P  : sglr,
    L  : str,
    G  : str,
    S  : str,
    Id : term,
    FN : str,
    T  : term
  in
    execute(sglr, P?) .
    ( rec-msg(Id?, parse-string(L?, G?, S?)) .
      snd-eval(P, parse-string(L, G, S)) .
      rec-value(P, T?) .
      snd-msg(Id,parse-result(T))
    +
      rec-msg(Id?, parse-string(id(L?), G?, S?)) .
      snd-eval(P, parse-string(L, G, S)) .
      rec-value(P, T?) .
      snd-msg(Id,parse-result(T))
    +
      rec-msg(parse-file(L?, G?, FN?, Id?)) .
      snd-eval(P, parse-file(L, G, FN)) .
      rec-value(P, T?) .
      snd-msg(Id, parse-result(T))
    +
      rec-msg(open-language(L?, FN?)) .
      snd-eval(P, open-language(L, FN)) .
      (
	rec-value(P, language-opened(L?, FN?)) .
	snd-note(language-available(L))
      +
	rec-value(P, open-language-failed(L, FN))
      )
    +
      rec-msg(open-language(id(L?), FN?)) .
      snd-eval(P, open-language(L, FN)) .
      (
	rec-value(P, language-opened(L?, FN?)) .
	snd-note(language-available(L))
      +
	rec-value(P, open-language-failed(L, FN))
      )
    )
    * rec-disconnect(P)
  endlet

tool sglr is {command="sglr"}

#ifdef MAIN
#else
/*toolbus(Parser)*/
#endif
