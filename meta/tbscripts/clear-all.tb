/*

    Meta-Environment - An environment for language prototyping.
    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, 
                        The Netherlands. 

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

*/
/*
  $Id$
 */
process ClearAll is
let
  Id     : term,
  Module : str,
  Modules: list
in
  Id := process-id.
  (
    rec-msg(clear-all) .
    snd-note(ui-status(stat(Id,"Clearing ..."))) .
    snd-msg(get-all-modules) .
    rec-msg(all-modules(Modules?)) .
    (
      if not-equal(Modules, []) then
        Module := first(Modules) .
	snd-msg(delete-editors-for-module(Module)) .
	Modules := next(Modules)
      fi
    ) * if equal(Modules, []) then
      tau
    fi .
    snd-msg(clear-module-db) .
    snd-note(ui-status(endstat(Id))) .
    snd-msg(cleared-all)
  ) *
  delta
endlet
