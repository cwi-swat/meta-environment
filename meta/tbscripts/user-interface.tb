process HandleEvent(Type: term, Event: term) is
let
  Actions: list
in
  snd-msg(cm-get-actions(Type, Event))
  . rec-msg(cm-actions(Actions?))
  . snd-msg(perform-actions(ui-id, Actions, []))
  . rec-msg(actions-performed(ui-id, Actions))
endlet

process HandleModuleEvent(Type: term, Event: term, Modulename: str) is
let
  Actions: list
in
  snd-msg(cm-get-module-actions(Type, Event, Modulename))
  . rec-msg(cm-module-actions(Actions?))
  . snd-msg(perform-actions(ui-id, Actions, [str(Modulename)]))
  . rec-msg(actions-performed(ui-id, Actions))
endlet

process ErrorSelected(Error: term) is
let
  Actions: list
in
  snd-msg(cm-get-actions(feedback-list, click))
  . rec-msg(cm-actions(Actions?))
  . snd-msg(perform-actions(feedback-list, Actions, [Error]))
  . rec-msg(actions-performed(feedback-list, Actions))
endlet

process MessageSelected(Modulename: str, Tree: term) is
let
  Actions: list
in
  snd-msg(get-actions(click, message-list, Modulename))
  . rec-msg(actions(click, message-list, Modulename, Actions?))
  . snd-msg(perform-actions(message-list, Actions, [Tree, str(Modulename)]))
  . rec-msg(actions-performed(message-list, Actions))
endlet

process NodeSelected(GraphId: str, Node: term) is
let
  Actions: list,
  Location: term
in
  snd-msg(gc-get-node-origin(Node))
  .
  (
    rec-msg(gc-origin(Location?))
    . snd-msg(cm-get-actions(tree-panel, click))
    . rec-msg(cm-actions(Actions?))
    . snd-msg(perform-actions(tree-panel, Actions, [Location]))
    . rec-msg(actions-performed(tree-panel, Actions))
  +
    rec-msg(gc-no-origin)
  )
endlet

process UserInterfaceHandler is
let
  Error: term,
  Event: term,
  GraphId: str,
  Modulename: str,
  Node: term,
  Pid: int,
  Tree: term,
  Type: term
in
  (
    rec-msg(ui-button-selected(Type?, Event?))
    . create(HandleEvent(Type, Event), Pid?)
  +
    rec-msg(ui-button-selected(Type?, Event?, Modulename?))
    . create(HandleModuleEvent(Type, Event, Modulename), Pid?)
  +
    rec-msg(ui-error-selected(Error?))
    . create(ErrorSelected(Error), Pid?)
  +
    rec-msg(ui-node-selected(GraphId?, Node?))
    . create(NodeSelected(GraphId, Node), Pid?)
  +
    rec-msg(ui-message-selected(Modulename?, Tree?))
    . create(MessageSelected(Modulename, Tree), Pid?)
  )
  *
  delta
endlet
