/* $Id$ */

process File-creator is
let
  Directory: str,
  Error: str,
  Extension: str,
  Filename: str,
  ModuleId: str,
  Path: str,
  RealModule: str,
  SearchPaths: list,
  Text: str,
  Type: term
in
  (
    rec-msg(create-new-equations(ModuleId?)) .
    snd-msg(is-module-in-db(ModuleId)) .
    (
      rec-msg(not-exists-in-module-db(ModuleId)) 
    +
      rec-msg(exists-in-module-db(ModuleId)) .
      snd-msg(get-path-from-db(ModuleId)) .
      rec-msg(path(Path?)) .
      snd-msg(file-extension-hook(asf)) . 
      rec-msg(file-extension-hook-result(Extension?)) .
      snd-msg(io-get-filename(Path, ModuleId, Extension)) .
      rec-msg(io-filename(Filename?)) .
      snd-msg(io-exists-file(Filename)) .
      (
	rec-msg(io-file-exists) .
	snd-msg(io-read-file(Filename)) .
	rec-msg(io-file-contents(Text?)) .
	snd-msg(add-eqs-to-db(ModuleId, text(Text))) .
	rec-msg(eqs-added) .
	snd-msg(new-equations-created)
      +
	rec-msg(io-file-not-exists) .
	snd-msg(io-write-text-file(Filename, [])) .
	(
	  rec-msg(io-file-written) .
	  snd-msg(io-read-file(Filename)) .
	  (
	    rec-msg(io-file-contents(Text?)) .
	    snd-msg(add-eqs-to-db(ModuleId, text(Text))) .
	    rec-msg(eqs-added) .
	    snd-msg(new-equations-created)
	  +
	    rec-msg(io-error-reading(Error?)) .
	    snd-note(ui-status(errorf("%s: %s", [Filename,Error]))) .
	    snd-msg(new-equations-not-created)
	  )
	+
	  rec-msg(io-file-not-written(Error?)) . 
	  snd-note(ui-status(errorf("%s: %s", [Filename,Error]))) .
	  snd-msg(new-equations-not-created)
	)
      )
    )
  ) * delta
endlet
