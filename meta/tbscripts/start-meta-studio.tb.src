#include "meta.tb"
#include "meta-studio/gui.idef"
#include "dialog.idef"
#include "graph-painter.idef"
#include "module-selection-listener.tb"
#include "module-actions.tb"

/* sdf-meta */
#include "graph-utils.tb"
#include "sdf-import-graph.idef"

/* to be resolved */
#include "button-actions.tb"

process StartNavigator is
  snd-msg(load-jar("file://__PKGDATA__/navigator.jar", ["file://__PKGDATA__/gui-util.jar","file://__PKGDATA__/gui-data.jar"]))

process StartDialogTool is
  snd-msg(load-jar("file://__PKGDATA__/dialog.jar"))

process StartGraphPanel is
  snd-msg(load-jar("file://__PKGDATA__/graph-painter.jar", ["file://__PKGDATA__/gui-util.jar", "file://__PKGDATA__/gui-data.jar"]))

process MetaGUI is
let
  EnvironmentName: str,
  MenuEventList: list,
  Pid: int
in
  create(ButtonActionExecutor, Pid?)
  . create(MetaActions, Pid?)
  . create(MetaCreator, Pid?)
  . rec-msg(creation-finished)

  . snd-msg(environment-name-hook)
  . rec-msg(environment-name-hook-result(EnvironmentName?))
  . snd-msg(set-title(EnvironmentName))

  . snd-msg(cm-get-events(studio-menubar))
  . rec-msg(cm-events(MenuEventList?))
  . snd-msg(gui-add-menu-events(MenuEventList))
 
  . StartNavigator()
  . StartDialogTool()
  . StartGraphPanel()

  . snd-msg(post-initialization-hook)
  . rec-msg(post-initialization-hook-finished)
  . InitializeTermStore(TERMSTORENAME)
  .
  if not-equal(MODULENAME, "") then
    OpenModules([MODULENAME], sdf)
  else
    tau
  fi
endlet

toolbus(MetaGUI)
