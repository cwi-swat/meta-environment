#include "meta.tb"
#include "meta-studio/gui.idef"
#include "meta/dialog.idef"
#include "graph-painter.idef"
#include "progress.idef"
#include "module-selection-listener.tb"
#include "module-actions.tb"
#include "error-gui/error-viewer.idef"
#include "editor-plugin/editor-plugin.idef"
#include "status-to-progress.tb"

/* sdf-meta */
#include "graph-utils.tb"

/* to be resolved */
#include <sdf-editor-actions.tb>
#include <asf-editor-actions.tb>
#include <asfsdf-module-actions.tb>
#include <gui-actions.tb>
#include <term-actions.tb>
#include <term-editor-actions.tb>

process StartNavigator is
  snd-msg(load-jar("file://__PKGDATA__/navigator.jar", "__PKGDATA__/gui-util.jar:__PKGDATA__/gui-data.jar:__EXTERNAL_JARS__"))

process StartDialogTool is
  snd-msg(load-jar("file://__PKGDATA__/dialog.jar", ["file://__PKGDATA__/gui-util.jar"]))

process StartGraphPanel is
  snd-msg(load-jar("file://__PKGDATA__/graph-painter.jar", "__PKGDATA__/prefuse.jar:__PKGDATA__/gui-util.jar:__PKGDATA__/gui-data.jar:__EXTERNAL_JARS__"))

process StartProgressPanel is
  snd-msg(load-jar("file://__PKGDATA__/progress.jar", "__PKGDATA__/gui-util.jar:__PKGDATA__/gui-data.jar:__EXTERNAL_JARS__"))

process MetaGUI is
let
  EnvironmentName: str,
  MenuEventList: list,
  ModuleId: term,
  Path: str,
  Pid: int
in
  create(MetaCreator, Pid?)
  . rec-msg(creation-finished)

  . snd-msg(environment-name-hook)
  . rec-msg(environment-name-hook-result(EnvironmentName?))
  . snd-msg(set-title(EnvironmentName))

  . snd-msg(cm-get-events(studio-menubar))
  . rec-msg(cm-events(MenuEventList?))
  . snd-msg(gui-add-menu-events(MenuEventList))
 
  . StartNavigator()
  . StartDialogTool()
  . StartGraphPanel()
  . StartProgressPanel()

  . snd-msg(post-initialization-hook)
  . rec-msg(post-initialization-hook-finished)
  . InitializeTermStore(TERMSTORENAME)
  .
  if not-equal(MODULENAME, "") then
    OpenModule(MODULENAME, ModuleId?)
  else
    tau
  fi
endlet

toolbus(MetaGUI)
