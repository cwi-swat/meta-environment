/*

    Meta-Environment - An environment for language prototyping.
    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam,
    The Netherlands. 

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
*/


/*
 * $Id$
 */
process Compiler is
let
  COM           : compiler,
  ModuleName    : str,
  OutputDir     : str,
  AuxModuleName : str,
  AuxModuleTree : term
in
  /* Start the compiler */
  execute(compiler, COM?) .
  (
    /* Handle a request to compile a module */
    rec-msg(compile-module(ModuleName?, OutputDir?)) .
    snd-do(COM, set-output-dir(OutputDir)) .
    snd-msg(process-eqs(ModuleName)) .
    rec-msg(eqs-processed(ModuleName)) .
    snd-msg(reshuffle-module(ModuleName, OutputDir)) .
    (
      /* During reshuffling, new sub-modules are created.
       * Each time such a module is created, we get a message
       * so we can start the compilation of that sub-module.
       */
      rec-msg(new-aux-module(AuxModuleName?, AuxModuleTree?)) .
      snd-eval(COM, generate-code(AuxModuleName, AuxModuleTree)) .
      rec-value(COM, c-code-ready)
    ) *
    rec-msg(reshuffle-done) .
    snd-msg(compile-done)
  ) *
  delta
endlet
