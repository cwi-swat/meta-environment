process GoToEditorArea(Sid: term, Area: term, Description: str) is
let
  Offset: int
in
  snd-msg(get-area-offset(Area))
  . rec-msg(area-offset(Offset?))
  . snd-msg(te-display-message(Sid, Description))
  . snd-msg(te-set-focus(Sid, Area))
endlet

process ShowLocation(Sid: term, Location: term, Description: str) is
let
  Area: term,
  ModuleName: str,
  FileName: str
in
  snd-msg(has-location-area(Location))
  .
  (
    rec-msg(location-has-area(Location))
    . snd-msg(get-location-area(Location))
    . rec-msg(location-area(Area?))
    . GoToEditorArea(Sid, Area, Description)
  +
    rec-msg(location-has-no-area(Location))
    . tau
  )
endlet

process ShowSubject(Sid: term, Subject: term) is
let
  Location: term,
  Description: str
in
  snd-msg(has-subject-location(Subject))
  .
  (
    rec-msg(subject-has-location(Subject))
    . snd-msg(get-subject-location(Subject))
    . rec-msg(subject-location(Location?))
    . snd-msg(get-subject-description(Subject))
    . rec-msg(subject-description(Description?))
    . ShowLocation(Sid, Location, Description)
  +
    rec-msg(subject-has-no-location(Subject))
    . tau
  )
endlet

process ShowError(Sid: term, Error: term) is
let
  Subject: term,
  Subjects: list
in
  snd-msg(get-error-subjects(Error))
  . rec-msg(error-subjects(Subjects?))
  . Subject := first(Subjects)
  . ShowSubject(Sid, Subject)
endlet

process ShowSummary(Sid: term, Summary: term) is
let
  Error: term,
  Errors: list
in
  snd-msg(get-summary-errors(Summary))
  . rec-msg(summary-errors(Errors?))
  . Error := first(Errors)
  . ShowError(Sid, Error)
endlet
