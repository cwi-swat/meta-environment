/*

   Meta-Environment - An environment for language prototyping.
   Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

   $Id$
*/
#include <in-output.idef>
#include <module-db.idef>
#include <file-creator.tb>

process Test is
let
  SdfTree: term,
  Path : str,
  Time : term
in
  %% Read an existing module in baf.
  snd-msg(process-search-paths("meta.conf", ["__SRCDIR__"])) .
  rec-msg(search-paths-processed("meta.conf")) .
  snd-msg(open-file("Empty")) .
  (
    rec-msg(opened-file("Empty", tree(SdfTree?), Path?, Time?))
  +
    shutdown("new-module-test-3 FAILED! (timeout in read)\n") delay(sec(5))
  ) .

  %% Update the module-db.
  snd-msg(add-sdf2-module-to-db("Empty", Path, SdfTree, Time, "unchanged")) .
  (
    rec-msg(need-modules([]))
  +
    shutdown("new-module-test-3 FAILED! (timeout in update-db)\n") delay(sec(5))
  ) .

  %% Here comes the actual test.
  snd-msg(create-new-module("Empty")) .
  (
    rec-msg(module-created) .
    printf("new-module-test-3 FAILED!\n")
  +
    rec-msg(module-not-created("Module already in database"))
  +
    shutdown("new-module-test-3 FAILED! (timeout)\n") delay(sec(5))
  )
  .
  shutdown("") delay(sec(2))

endlet

toolbus(Test, Io, ModuleDB, File-creator)
