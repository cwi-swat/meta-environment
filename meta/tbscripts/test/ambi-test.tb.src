/*

   Meta-Environment - An environment for language prototyping.
   Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

   $Id$
*/
#include "../../sglr/sglr/sglr.idef"

process Test is
let
  Err: list,
  Amount: int,
  Ambs: list
in
  snd-msg(open-language("Ambi","../../sglr/regress-test/tables/Ambi.tbl")).
  rec-msg(language-opened("Ambi")).
  snd-msg("aap", parse-string-as-asfix1("Ambi","","a")).
 (
  rec-msg(parse-result-asfix1("aap",
    parse-error(Err?, ambiguities(Amount?, Ambs?))))
 +
 shutdown("ambi-test FAILED! (timeout)\n")  delay(sec(2))
 ).
 shutdown("") delay(sec(2))


endlet

toolbus(Test,Parser)
