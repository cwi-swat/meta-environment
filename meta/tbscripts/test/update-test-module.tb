/*

    Meta-Environment - An environment for language prototyping.
    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

*/
#include "../../module-db/module-db.idef"
#include "../../in-output/in-output.idef"

process Test is
let 
  Id: term,
  SdfTree: term,
  Path: str,
  I: int,
  Modules: list
in
  /* Setup a module in the module database */
  snd-msg(is-module-in-db("Pico-Booleans")).
  rec-msg(not-exists-in-module-db("Pico-Booleans")).
  snd-msg(open-file("Pico-Booleans")).
  rec-msg(opened-file("Pico-Booleans", tree(SdfTree?), Path?, timestamp(I?))).
  snd-msg(add-sdf2-module-to-db("Pico-Booleans", Path, SdfTree, 
                                timestamp(I), "changed")).
  rec-msg(need-modules(Modules?)).
  /* Finished setup. */

  /* Now try and see whether updating an unchanged module works */
  snd-msg(update-module-in-db(SdfTree, "sdf2")).
  (
     rec-msg(extra-modules(Modules?))
  +
     printf("FAILED! Waiting for update to return\n") delay(sec(2))
  ).
  shutdown("") delay(sec(2))
endlet

toolbus(Test,Io,ModuleDB)
