/*
 * This file contains editor processed. There are three types of editors
 * now, so there are three main process definitions. The idea is that
 * these three will collaps to one GENERIC editor process in the near
 * future!
 */

process EditSyntax(EditorId: term, ModuleName: str) is
let
  Path      : str,
  Focus     : term,
  Tree      : term, 
  RTree          : term,
  STree          : term,
  Time      : term,
  Modules   : term,
  ErrorFoci : term,
  Text      : str,
  DirtyFoci : list,
  ModifiedStatus : term,
  Killed    : term,
  ButtonName     : str
in
  Text := "" .
  snd-msg(get-sdf2-asfix(ModuleName)).
  (
    rec-msg(syntax(Tree?)) .
    snd-msg(initialize-structure-editor-with-tree(EditorId, Tree)) .
    rec-msg(initial-focus(Focus?))
  +
    rec-msg(unavailable).
    snd-msg(open-syntax-file(ModuleName)) .
    (
      rec-msg(opened-file(ModuleName, text(Text?), Path?, Time?))
    +
      rec-msg(error-opening(ModuleName))
    ) .
    snd-msg(initialize-structure-editor(EditorId, Text)) .
    rec-msg(initial-focus(Focus?))
  ) .
  snd-msg(initialization-done(EditorId)) .
  Killed := false .
  (
    (   
      rec-msg(extra-button-action(EditorId, ButtonName?)) .
      snd-msg(extra-button-action(ButtonName, "Syntax", ModuleName, EditorId))
    ) *
    if equal(Killed, true) then
      tau
    fi
  ) 
  ||
  rec-msg(kill-editor(EditorId)).
  Killed := true .
  snd-msg(get-modified-status(EditorId)) .
  rec-msg(modified-status(EditorId, ModifiedStatus?)) .
  snd-msg(kill-editor-done(EditorId)).
  if equal(ModifiedStatus, modified) then
    snd-msg(revert-module(ModuleName)).
    rec-msg(module-reverted(ModuleName)).
    snd-note(ui-status(errorf("Dirty module %s is reread from disk",
                       [ModuleName])))
  else
    tau
  fi
  
endlet

process EditEquations(EditorId: term, ModuleName: str) is
let
  Path           : str,
  Focus          : term,
  Tree           : term,
  RTree          : term,
  STree          : term,
  ErrMsg         : str,
  ErrorFoci      : term,
  Text           : str,
  DirtyFoci      : list,
  ModifiedStatus : term,
  Killed         : term,
  Msgs           : list,
  ButtonName     : str
in
  Text := "" .
  subscribe(syntax-changed(ModuleName)) . 
  snd-msg(get-eqs-tree(ModuleName)) .
  (
    rec-msg(tree(Tree?)) .
    snd-msg(initialize-structure-editor-with-tree(EditorId, Tree))
  +
    rec-msg(unavailable) .
    snd-msg(get-eqs-text(ModuleName)) .
    (
      rec-msg(eqs-text(ModuleName, Text?))
    +
      %% If there are no equations in the module-db, assume we
      %% want to create a new equations section.
      rec-msg(no-eqs-text(ModuleName)) .
      snd-msg(create-new-equations(ModuleName)) .
      (
        rec-msg(new-equations-created(ModuleName, Path?))
      +
        rec-msg(new-equations-not-created(ErrMsg?)) .
        snd-note(ui-status(errorf(
          "Could not create empty equations: %s", [ErrMsg])))
      )
    ) .
    snd-msg(initialize-structure-editor(EditorId, Text))
  ) .
  rec-msg(initial-focus(Focus?)) .
  snd-msg(initialization-done(EditorId)) .
  Killed := false .
  (
    (
        rec-note(syntax-changed(ModuleName)) .
	snd-msg(invalidate-tree(EditorId)).
	rec-msg(invalidation-done(EditorId))
      + 
        rec-msg(extra-button-action(EditorId, ButtonName?)) .
        snd-msg(extra-button-action(ButtonName, "Equations", ModuleName, EditorId))
    ) *
    if equal(Killed, true) then
      tau
    fi
  )
  ||
  rec-msg(kill-editor(EditorId)).
  Killed := true .
  snd-msg(get-modified-status(EditorId)) .
  rec-msg(modified-status(EditorId, ModifiedStatus?)) .
  snd-msg(kill-editor-done(EditorId)) .
  if equal(ModifiedStatus, modified) then
    snd-msg(revert-module([ModuleName])).
    rec-msg(module-reverted([ModuleName])).
    snd-note(ui-status(errorf("Module %s is reread from disk",[ModuleName])))
  else
    tau
  fi
endlet

process EditTerm(EditorId: term, ModuleName: str, Text: str, Tree : term) is
let
  Focus      : term,
  ButtonName : str
in
  subscribe(syntax-changed(ModuleName)) . 
  if equal(quote(Tree), none) then 
    snd-msg(initialize-structure-editor(EditorId, Text)) 
  else 
    snd-msg(initialize-structure-editor-with-tree(EditorId, Tree)) 
  fi  . 
  rec-msg(initial-focus(Focus?)) .
  snd-msg(set-focus(EditorId, Focus)) .
  (
    rec-note(syntax-changed(ModuleName)) .
    snd-msg(invalidate-tree(EditorId)).
    rec-msg(invalidation-done(EditorId))
  +
    rec-msg(extra-button-action(EditorId, ButtonName?)) .
    snd-msg(extra-button-action(ButtonName, "Term", ModuleName, EditorId)) 
  ) *
  rec-msg(kill-editor(EditorId)).
  snd-msg(kill-editor-done(EditorId))
endlet
