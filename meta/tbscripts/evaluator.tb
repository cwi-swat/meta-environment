/*

    Meta-Environment - An environment for language prototyping.
    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

*/

#include "retrieve-eqs.tb"
#include "rewrite.tb"

tool evaluator is {
  command = "evaluator"
}

process Evaluator is
let
  Eval : evaluator,
  Tid  : int,
  NF   : term,
  Mod  : str,
  Term : term
in
  execute(evaluator, Eval?) .
  snd-do(Eval, create-equations-db).
  create(Retrieve-eqs(Eval), Tid?).
  create(Rewrite(Eval), Tid?).

  subscribe(language-unavailable(<str>)) .
  subscribe(equations-changed(<str>)) .
  (
    rec-msg(interpret(Mod?,Term?)).
    snd-eval(Eval,interpret(Mod,Term)).
    rec-value(Eval,result(NF?))
  +
    rec-msg(eqs-available(Mod?)).
    snd-eval(Eval,equations-available(Mod)).
    (
      rec-value(Eval,eqs-available(Mod?)).
      snd-msg(eqs-available)
    +
      rec-value(Eval,eqs-not-available(Mod?)).
      snd-msg(eqs-not-available)
    )
  +
    rec-note(language-unavailable(Mod?)) .
    snd-do(Eval, remove-equations(Mod))
  +
    rec-note(equations-changed(Mod?)) .
    snd-do(Eval, remove-equations(Mod))
  ) *
  delta
endlet
