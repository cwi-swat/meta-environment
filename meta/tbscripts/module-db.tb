#include <module-manager.tb>
#include <sdf-modules.idef>
#include <sdf-renaming.idef>
#include <term-store.idef>

#define DEBUG printf("FILE: %s LINE: %d\n", __FILE__, __LINE__)

#define POSINFO_DEPTH 4

process ModuleDB is
let
  EqsTree: term,
  Filename: str,
  ModuleId: term,
  TermTree: term
in
  MDB-InitializeModuleDb()
  . snd-msg(termstore-initialized)
  . MDB-InitializeFileExtensions()
  .
  (
    rec-msg(update-eqs-tree-in-db(ModuleId?, tree(EqsTree?)))
    . GetModulePath(ModuleId, ASF_NAMESPACE, Filename?)
    . snd-msg(add-posinfo-to-depth(Filename, EqsTree, POSINFO_DEPTH))
    . rec-msg(tree-with-pos-info(EqsTree?))
    . snd-msg(ts-put-term-value("asf-tree", ModuleId, EqsTree))
    . EqsTree := UNDEFINED
    . snd-msg(eqs-updated)
  +
    rec-msg(put-term-tree(Filename?, TermTree?))
    . snd-msg(ts-put-term-value("term-tree", Filename, TermTree))
  +
    rec-msg(get-term-tree(Filename?))
    . snd-msg(ts-get-term-value("term-tree", Filename))
    .
    (
      rec-msg(ts-value("term-tree", Filename, TermTree?))
      . snd-msg(term-tree(Filename, TermTree))
      . TermTree := UNDEFINED
    +
      rec-msg(ts-no-value("term-tree", Filename))
      . snd-msg(no-term-tree(Filename))
    )
  )
  *
  delta
endlet

/* Used by ModuleDB */
process MDB-InitializeModuleDb is
  snd-msg(ts-add-table("extensions", "str"))
  . snd-msg(ts-add-table("sdf-tree", "term"))
  . snd-msg(ts-add-table("sdf-text", "str"))
  . snd-msg(ts-add-table("asf-tree", "term"))
  . snd-msg(ts-add-table("asf-text", "str"))
  . snd-msg(ts-add-table("term-tree", "term"))

/* Used by ModuleDB */
process MDB-InitializeFileExtensions is
let
  SyntaxExt: str,
  RulesExt: str,
  TermExt: str
in
  snd-msg(get-file-extensions)
  . rec-msg(set-file-extensions(syntax(SyntaxExt?), rules(RulesExt?),
                                term(TermExt?)))
  . snd-msg(ts-put-str-value("extensions", "syntax", SyntaxExt))
  . snd-msg(ts-put-str-value("extensions", "equations", RulesExt))
  . snd-msg(ts-put-str-value("extensions", "term", TermExt))
endlet
