/*

    Meta-Environment - An environment for language prototyping.
    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

*/
/*
  $Id$
 */

/* Rewrite-Errors parses a list of errors coming from the Evaluator,
 * uses the unparser and displays them.
 */
process Rewrite-Errors is
let
	Error : list,
  Message : str,
  Subject : term,
  SubjectText : str,
  Errors : list,
	ErrorsText : str,
	Tag : term,
	TagText : str
in
	(
		rec-msg(display-rewrite-errors(Errors?)).
		if not-equal(Errors,[]) then
			Error := first(Errors).
			Errors := next(Errors).
			Message := first(Error).
			Error := next(Error).
			Tag := first(Error).
			snd-msg(unparse(Tag)).
			rec-msg(unparsed-text(TagText?)).
			Error := next(Error).
			Subject := first(Error).
			snd-msg(unparse(Subject)).
			rec-msg(unparsed-text(SubjectText?)).
			snd-note(ui-status(errorf("%s (%s, %s)",[Message,TagText,SubjectText])))
		fi *
		if equal(Errors,[]) then
			tau
		fi
	) * 
	delta
endlet