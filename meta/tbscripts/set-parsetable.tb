/*

    Meta-Environment - An environment for language prototyping.
    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, 
                        The Netherlands. 

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

*/
/* $Id$
   Get a parsetable for language X
*/


/* get the table from the database or create a new table */
process Set-parsetable is
let
  ModuleId   : term, 
  TableType  : term,
  Table      : term,
  Path       : str,
  Id         : int
in
Id := process-id.
( 
  rec-msg(set-parsetable(ModuleId?)) .
  snd-msg(get-table-from-db(ModuleId)) .
  (
    rec-msg(table(Table?, Path?)).
    ReopenLanguage(ModuleId, Table)
  +
    rec-msg(no-table) .
    snd-note(ui-status(statf(Id, "Generating parsetable %s",[ModuleId]))).
    MakeTable(ModuleId).
    snd-note(ui-status(endstat(Id)))
  )
) *
delta
endlet

/* add asf syntax and generate a parse table */
process MakeTable(ModuleId : term) is
let
  Syntax    : term,
  Table     : term,
  Path      : str,
  TimeStamp : term
in
  snd-msg(get-all-sdf2-definitions(ModuleId)).
  (
    rec-msg(syntax(Syntax?)).

    snd-msg(make-asf-syntax(ModuleId, Syntax)).
    rec-msg(asf-syntax(Syntax?)).

    snd-msg(generate-parsetable(Syntax, ModuleId)).
    rec-msg(parsetable(Table?)).

    snd-msg(add-parse-table-to-db(ModuleId, Table, timestamp(0))).
    rec-msg(parse-table-added).

    snd-msg(get-table-from-db(ModuleId)) .
    rec-msg(table(Table?, Path?)).
    ReopenLanguage(ModuleId, Table)
    +
    rec-msg(no-syntax).
    snd-msg(parsetable-not-set(ModuleId))
  )
endlet

/* Ask the parser to reopen the language */
process ReopenLanguage(ModuleId : term, Table : term) is
  snd-msg(close-language(ModuleId)) .
  snd-msg(open-language-from-term(ModuleId, Table)).
  (
    rec-msg(language-opened(ModuleId)).
    snd-msg(parsetable-set(ModuleId))
    +
    rec-msg(language-not-opened(ModuleId)).
    snd-msg(parsetable-not-set(ModuleId))
  )
