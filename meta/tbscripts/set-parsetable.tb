/*
   $Id$
   Get a parsetable for language X
*/


/* get the table from the database or create a new table */
process Set-parsetable is
let
  ModuleName : str, 
  Type : term,
  Table : term
in
( 
  rec-msg(set-parsetable(ModuleName?, Type?)) .
  snd-msg(get-parsetable(ModuleName, Type)) .
  (
    rec-msg(parse-table(Table?)) .
    ReopenLanguage(ModuleName, Type, Table)
  +
    rec-msg(no-parse-table(ModuleName)) .
    snd-msg(parsetable-not-set(ModuleName))
  )
) *
delta
endlet

/* Ask the parser to reopen the language */
process ReopenLanguage(ModuleName : str, Type : term, Table : term) is
let
  ModuleId : term
in
  if equal(Type, trm) then
    ModuleId := quote(trm(ModuleName))
  else
    ModuleId := quote(eqs(ModuleName))
  fi .
  snd-msg(close-language(ModuleId)) .
  snd-msg(open-language-from-term(ModuleId, Table)).
  (
    rec-msg(language-opened(ModuleId)).
    snd-msg(parsetable-set(ModuleName))
    +
    rec-msg(language-not-opened(ModuleId)).
    snd-msg(parsetable-not-set(ModuleName))
  )
endlet
