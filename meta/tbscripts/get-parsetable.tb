/*
   $Id$
   Get a parsetable for language X
*/


/* get the table from the database or create a new table */
process GetParseTable is
let
  ModuleId   : term, 
  TableType  : term,
  Table      : term,
  Syntax     : term,
  ErrorMsg   : str,
  Id         : int,
  Str        : str
in
Id := process-id.
( 
  rec-msg(get-parsetable(ModuleId?)) .
  Str := first(args(ModuleId)).
  snd-msg(get-table-from-db(Str)) .
  (
    rec-msg(table(Table?)).
    snd-msg(parse-table(Table))
  +
    rec-msg(no-table) .
    snd-note(ui-status(statf(Id, "Generating parsetable %s",[Str]))).
    snd-msg(get-all-sdf2-definitions(Str)).
    (
      rec-msg(syntax(Syntax?)).

      snd-msg(preprocess-syntax-hook(ModuleId, Syntax)).
      rec-msg(preprocess-syntax-hook-result(ModuleId, Syntax?)).
      snd-msg(generate-parsetable(Syntax, ModuleId)).
      (
        rec-msg(parsetable(Table?)).
        snd-msg(add-parse-table-to-db(ModuleId, Table)) .
        rec-msg(parse-table-added).
        snd-note(ui-status(endstat(Id))) .
        snd-msg(parse-table(Table))
      +
        rec-msg(no-parsetable).
        snd-note(ui-status(endstat(Id))) .
        snd-note(ui-status(error("Unexpected error in definition"))).
	snd-msg(no-parse-table(ModuleId))
      )
    +
      rec-msg(no-syntax(ErrorMsg?)) .
      snd-note(ui-status(endstat(Id))) .
      snd-note(ui-status(errorf("%s",[ErrorMsg]))).
      snd-msg(no-parse-table(ModuleId))
    )
  )
) *
delta
endlet
