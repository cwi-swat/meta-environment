/* defines */
#define TODO(m) printf("%s:%d - TODO: %s\n", __FILE__, __LINE__, m)

/* meta-kernel */
#include "configuration-manager.idef"
#include "editor-manager.idef"
#include "generic-adapter.idef" 
#include "graph-converter.idef"
#include "in-output.idef"
#include "layout-graph.idef"
#include "position-annotator.idef"
#include "sglr.idef"
#include "structure-editor.idef"
#include "unparser.idef"

/* user interface */
#include "gui-utils.tb"

/* tide support */
#include <tide.tb> 

/* sdf-meta */
#include "parsetablegen.idef"
#include "term-parsetable.tb"
#include "sdf-listeners.tb"
#include "sdf-actions.tb"

/* asf-sdf-meta */
#include "apply-function.idef"
#include "restorebrackets.idef"
#include "asf-language.tb"
#include "asf-listeners.tb" 
#include "asf-actions.tb"

/* to be resolved */
#include "editor-error-display.tb"
#include "editing.tb"
#include "sdf-utils.tb"
#include "module-utils.tb"
#include "asf-utils.tb"
#include "parsetable-utils.tb"
#include "sdf2-language.tb"
#include "meta-interface.tb"

process META is
let 
  Id : term,
  Syntax : str,
  Semantics : str,
  Term : str,
  Sort : term
in
  Id := process-id
  .
  (
    rec-msg(get-rules-top-sort) .
    snd-msg(semantics-top-sort-hook).
    rec-msg(semantics-top-sort-hook-result(Sort?)).
    snd-msg(set-rules-top-sort(Sort))
  +
    rec-msg(get-application-status) .
    snd-msg(status(interactive)) 
  ) * delta
endlet

process MetaCreator is
let
  Pid : int
in
  create(META, Pid?)
  . create(TermStoreName, Pid?)
  . create(DumpSdfDefinition, Pid?)
  . create(Meta-Interface, Pid?)
  . create(Open-Sdf2-Language, Pid?)
  . create(PGen, Pid?)
  . create(PrintModule, Pid?)
  . create(RestoreTermBrackets, Pid?)
  . create(UserInterfaceHandler, Pid?)
  . snd-msg(creation-finished)
endlet
