#ifndef __GUI_UTILS__
#define __GUI_UTILS__

#include <gui-actions.tb>
#include <meta-studio/gui.idef>
#include <dialog.idef>
#include <graph-gui/graph-painter.idef>
#include <progress-gui/progress.idef>
#include <moduledetails.idef>

process Error(Message: str, MessageArgs: list) is
  snd-note(ui-status(errorf(Message, MessageArgs)))

process HandleEvent(Type: term, Event: term) is
let
  Actions: list,
  Action: str
in
  snd-msg(cm-get-action(Type, Event))
  . rec-msg(cm-action(Action?))
  . Action()
endlet

process LocationSelected(Location: term) is
let
  Action: str
in
  snd-msg(cm-get-action(feedback-list, click))
  . rec-msg(cm-action(Action?))
  . Action(Location)
endlet

process MessageSelected(Modulename: str, Tree: term) is
let
  Action: str
in
  snd-msg(get-action(click, message-list, Modulename))
  . rec-msg(action(click, message-list, Modulename, Action?))
  . Action(Tree, Modulename)
endlet

process NodeSelected(GraphId: str, Node: term) is
let
  Action: str,
  Location: term
in
  snd-msg(gc-get-node-origin(Node))
  .
  (
    rec-msg(gc-origin(Location?))
    . snd-msg(cm-get-action(tree-panel, click))
    . rec-msg(cm-action(Action?))
    . Action("Tree Panel selection", Location)
  +
    rec-msg(gc-no-origin)
  )
endlet

process UserInterfaceHandler is
let
  Error: term,
  Event: term,
  GraphId: str,
  Modulename: str,
  Node: term,
  Pid: int,
  Tree: term,
  Type: term
in
  (
    rec-msg(ui-button-selected(Type?, Event?))
    . create(HandleEvent(Type, Event), Pid?)
  +
    rec-msg(ui-location-selected(Error?))
    . create(LocationSelected(Error), Pid?)
  +
    rec-msg(ui-node-selected(GraphId?, Node?))
    . create(NodeSelected(GraphId, Node), Pid?)
  +
    rec-msg(ui-message-selected(Modulename?, Tree?))
    . create(MessageSelected(Modulename, Tree), Pid?)
  +
    rec-msg(gui-window-closing)
    . ExitAction
  )
  *
  delta
endlet

toolbus(UserInterfaceHandler)

process StatusDisplay is
let
  Lst: list,
  Str: str,
  Summary: term
in
  subscribe(ui-status(<term>))
  . subscribe(show-feedback-summary(<term>))
  .
  (
    rec-note(ui-status(error(Str?)))
    . printf("Error: %s", Str)
  +
    rec-note(ui-status(errorf(Str?, Lst?)))
    . printf("Error: %s [%t]\n", Str, Lst)
  +
    rec-note(ui-status(warning(Str?)))
    . printf("Warning: %s", Str)
  +
    rec-note(ui-status(warningf(Str?, Lst?)))
    . printf("Warning: %s [%t]\n", Str, Lst)
  +
    rec-note(ui-status(message(Str?)))
    . printf("Message: %s", Str)
  +
    rec-note(ui-status(messagef(Str?, Lst?)))
    . printf("Message: %s [%t]\n", Str, Lst)
  +
    rec-note(show-feedback-summary(Summary?))
    . snd-msg(display-feedback(Summary))
  )
  *
  delta
endlet

process StartNavigator is
  snd-msg(load-jar("file://__PKGDATA__/navigator.jar", "__PKGDATA__/gui-util.jar:__PKGDATA__/gui-data.jar:__EXTERNAL_JARS__"))

process StartDialogTool is
  snd-msg(load-jar("file://__PKGDATA__/dialog.jar", "__PKGDATA__/gui-util.jar:__EXTERNAL_JARS__"))

process StartModuledetailsPanel is
  snd-msg(load-jar("file://__PKGDATA__/moduledetails.jar", "__PKGDATA__/gui-util.jar:__PKGDATA__/gui-data.jar:__EXTERNAL_JARS__"))

#endif /* __GUI_UTILS__ */
