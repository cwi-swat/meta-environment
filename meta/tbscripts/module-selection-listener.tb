#ifndef __MODULE_SELECTION_LISTENER__
#define __MODULE_SELECTION_LISTENER__

#include <navigator-gui/navigator.idef>
#include <graph-gui/graph-painter.idef>
#include <module-details-gui/moduledetails.idef>
#include <undefined.h>

process SynchronizeModuleSelection is
let
  Event: attribute-changed-event,
  EventModuleId: term,
  ModuleId: term
in
  ModuleId := UNDEFINED
  . subscribe(nav-module-selected(<term>))
  . subscribe(gp-node-selected(<str>,<term>))
  . MM-Subscribe-Attribute-Changed(<term>,<term>,<term>,<term>,<term>)
  .
  (
    rec-note(nav-module-selected(ModuleId?))
    . snd-msg(gp-select-node("import-graph", ModuleId))
    . ShowModuleDetails(ModuleId)
  +
    rec-note(gp-node-selected("import-graph", ModuleId?))
    . snd-msg(nav-select-module(ModuleId))
    . ShowModuleDetails(ModuleId)
  +
    rec-note(mm-attribute-changed(Event?))
    . ACE-GetModuleId(Event, EventModuleId?)
    . 
    if equal(ModuleId, EventModuleId) then
      ShowModuleDetails(ModuleId)
    else
      tau
    fi
  ) 
  * delta
endlet

process ShowModuleDetails(ModuleId: term) is
let
  Attributes: term
in
  MM-GetAllAttributes(ModuleId, Attributes?)
  . snd-msg(md-set-details(Attributes))
endlet

toolbus(SynchronizeModuleSelection)

#endif /* __MODULE_SELECTION_LISTENER__ */
