/*

    Meta-Environment - An environment for language prototyping.
    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

*/
/*
  $Id$
 */

process Retrieve-eqs(Eval: evaluator) is
let
  Id       : term,
  ModName  : str,
  Eqs      : list
in
  Id := process-id.
  (
    rec-msg(retrieve-eqs(ModName?)).
    snd-msg(eqs-available(ModName)).
    (
      rec-msg(eqs-not-available).
      snd-note(ui-status(stat(Id,"Retrieving equations"))).
      snd-msg(process-eqs(ModName)).
      rec-msg(eqs-processed(ModName)).
      snd-msg(get-all-equations(ModName)).
      ( 
        rec-msg(all-equations(Eqs?)).
        snd-eval(Eval,add-equations(ModName, Eqs)).
        rec-value(Eval,equ-added(ModName?)) .
	snd-note(ui-status(endstat(Id))) .
	snd-msg(retrieval-successful(ModName))
      +
        rec-msg(equations-incomplete) .
        snd-note(ui-status(errorf("Equations incomplete for %s", [ModName]))) .
	snd-note(ui-status(endstat(Id))) .
        snd-msg(retrieval-aborted(ModName))
      )
    +
      rec-msg(eqs-available) .
      snd-msg(retrieval-successful(ModName))
    )
  ) *
  delta
endlet
