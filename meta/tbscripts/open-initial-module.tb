/*
   $Id$
 */

process Open-initial-module is
let
  Id      : term,
  Name    : str,
  Name2   : str,
  Str     : str,
  Path    : str,
  SdfPath : str,
  AsfPath : str,
  Table   : term,
  FT      : str,
  T        : term,
  EqsTree  : term,
  EqsText  : str,
  Contents : term,
  M1s     : list,
  M2s     : list,
  Ms      : list,
  Pairs   : list,
  I       : int,
  T1      : term,
  Time    : term,
  Ch      : int,
  Li      : int,
  Co      : int,
  Char    : term,
  ErrList : list,
  Ambs    : list,
  Cycle   : list,
  AnonymousError : term
in
  Id := process-id. 
  (
    rec-msg(open-initial-module(Path?, Name?)).
    snd-note(ui-status(statf(Id,"Opening %s",[Name]))).
    /* First we should check here whether this module has already been 
     * opened..
     */
    snd-msg(is-module-in-db(Name)). 
    ( 
      rec-msg(exists-in-module-db(Name))
    +
      /* If it is not open, open it. */
      rec-msg(not-exists-in-module-db(Name?)). ( 
        snd-msg(open-file(Path)). ( 
          rec-msg(opened-file(Name2?,tree(T?), SdfPath?,Time?)).
          snd-msg(add-sdf2-module-to-db(Name, SdfPath, T, Time,
		  "unchanged")).
          rec-msg(need-modules(Ms?)).
          snd-msg(open-parse-table(Name, SdfPath, asf)).
          ( 
            rec-msg(table-on-disk(Table?, Time?)).
            snd-msg(add-parse-table-to-db(eqs(Name), Table, Time)).
            rec-msg(parse-table-added).
            snd-msg(open-asf-file(Name, SdfPath)).
            (
              rec-msg(opened-file(Name?, text(EqsText?) , AsfPath?, Time?)).
              snd-msg(add-eqs-to-db(Name, AsfPath, text(EqsText), Time)) .
              rec-msg(eqs-added)
            +
              rec-msg(opened-file(Name?, tree(EqsTree?) , AsfPath?, Time?)).
              snd-msg(unparse(EqsTree)) .
              rec-msg(unparsed-text(EqsText?)) .
              snd-msg(add-eqs-to-db(Name, AsfPath, tree(EqsTree), 
                                    text(EqsText), Time)) .
              rec-msg(eqs-added)
            +
              rec-msg(error-opening(Name?))
            )
          +
            rec-msg(no-table-on-disk) .
            snd-msg(open-asf-file(Name, SdfPath)).
            (
              rec-msg(opened-file(Name?, text(EqsText?), AsfPath?, Time?)).
              snd-msg(add-eqs-to-db(Name, AsfPath, text(EqsText), Time)).
              rec-msg(eqs-added)
            +
              rec-msg(opened-file(Name?, tree(EqsTree?), AsfPath?, Time?)).
              snd-msg(unparse(EqsTree)) .
              rec-msg(unparsed-text(EqsText?)) .
              snd-msg(add-eqs-to-db(Name, AsfPath, text(EqsText), Time)) .
              rec-msg(eqs-added)
            +
              rec-msg(error-opening(Name?))
            )
          ) .
          snd-msg(open-parse-table(Name, SdfPath, trm)).
          ( 
            rec-msg(table-on-disk(Table?, Time?)).
            snd-msg(add-parse-table-to-db(trm(Name), Table, Time)).
            rec-msg(parse-table-added)
          +
            rec-msg(no-table-on-disk)
          ) 
        +
          rec-msg(opened-file(Name2?,text(FT?), SdfPath?, Time?)). 
          snd-msg(open-sdf2-language).
          rec-msg(sdf2-language-opened).
          snd-msg(Id,parse-string-as-asfix2me(trm("Sdf2"),"Module",FT)).
          ( rec-msg(parse-result-asfix2me(Id?,parse-tree(T?))).
            snd-msg(add-sdf2-module-to-db(Name, SdfPath, T, Time, "changed")).
            rec-msg(need-modules(Ms?)).
            snd-msg(open-asf-file(Name, SdfPath)).
            (
              rec-msg(opened-file(Name?, text(EqsText?), AsfPath?, Time?)).
              snd-msg(add-eqs-to-db(Name, AsfPath, text(EqsText), Time)).
              rec-msg(eqs-added)
            +
              rec-msg(opened-file(Name?, tree(EqsTree?), AsfPath?, Time?)).
              snd-msg(unparse(EqsTree)) .
              rec-msg(unparsed-text(EqsText?)) .
              snd-msg(add-eqs-to-db(Name, AsfPath, text(EqsText), Time)) .
              rec-msg(eqs-added)
            +
              rec-msg(error-opening(Name?))
            )
          + 
            rec-msg(parse-result-asfix2me(Id?, parse-error(ErrList?, AnonymousError?))).
            snd-msg(add-empty-module-to-db(Name2)).
            rec-msg(empty-module-added).
            snd-note(ui-status(errorf("Please fix syntax error in module %s.",
                  [Name2]))).
            snd-msg(edit-syntax(Name2))
          )
        +
          /* File would not open (unreadable, not exist, wrong path...) */
          rec-msg(error-opening(Str?)).
          snd-msg(cannot-open-module(Str)).
          snd-msg(add-empty-module-to-db(Str)).
          rec-msg(empty-module-added)
        )
      )
    ).
    snd-note(ui-status(endstat(Id))) .
    snd-msg(open-modules(Ms)) .
    rec-msg(finished-opening-modules) .
    snd-msg(finished-opening-initial-module)
  ) *
  delta
endlet
