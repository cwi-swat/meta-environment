/*

    Meta-Environment - An environment for language prototyping.
    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

*/
/*
  $Id$
 */

tool parsetablegen is {
  command = "parsetablegen"
}


process PGen is
let
  GENTABLE  : parsetablegen,
  T         : term,
  T1        : term,
  Name      : term,
  M         : term,
  Syntax    : term,
  NewSyntax : term,
  Str       : str,
  Table     : str,
  Mods      : list,
  Id        : int
in
  (
    Id := process-id .
    rec-msg(generate-parsetable(Str?)) .
    snd-note(ui-status(stat(Id,"Generating Parse Table..."))) .
    execute(parsetablegen,GENTABLE?) .
    snd-msg(add-eqs-syntax(Str)) .
    (
    	rec-msg(extended-syntax(Syntax?)) .
    	snd-eval(GENTABLE,generate-table(Syntax,Str,"tbl")) .
    	rec-value(GENTABLE,generation-finished(Table?)) .
    	snd-msg(parsetable(Table)) .
    	snd-note(ui-status(endstat(Id))) .
    	snd-terminate(GENTABLE,"terminate")
     +
  	rec-msg(no-extended-syntax).
    	snd-msg(no-parsetable(Str)).
    	snd-note(ui-status(endstat(Id))).
	snd-terminate(GENTABLE,"terminate")
    )
  )*
  delta
endlet
