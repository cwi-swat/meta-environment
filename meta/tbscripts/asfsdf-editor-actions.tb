
process EditorEditSyntaxAction(EditorId : term) is
let 
  Modulename : str
in
  GetActiveModule(EditorId, Modulename?)
  . EditSyntaxAction(Modulename)
endlet

process EditSyntaxAction(Modulename : str) is
let
  Path: str,
  Pid: int,
  Sid: term
in
  LocateFile(Modulename, sdf, Path?)
  . create(EditSyntax(Path), Pid?)
  . rec-msg(syntax-editor-started(Path, Sid?))
  . create(CleanupEditTerm(Sid, Path), Pid?)
endlet

process EditorEditEquationsAction(EditorId : term) is
let 
  Modulename : str
in
  GetActiveModule(EditorId, Modulename?)
  . EditEquationsAction(Modulename)
endlet

process EditEquationsAction(Modulename : str) is
let
  Path: str,
  SdfPath: str,
  AsfExt: str,
  Pid: int,
  Sid: term
in
  LocateFile(Modulename, sdf, SdfPath?)
  .
  if equal(SdfPath, "") then
    tau
  else
    snd-msg(file-extension-hook(asf))
    . rec-msg(file-extension-hook-result(AsfExt?))
    . ReplaceExtension(SdfPath, AsfExt, Path?)
    . snd-msg(ts-put-str-value("path-modulename", Path, Modulename))
    . create(EditEquations(Path), Pid?)
    . create(CleanupEditTerm(Sid, Path), Pid?)
    . rec-msg(equations-editor-started(Path, Sid?))
  fi
endlet
