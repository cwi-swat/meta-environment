/*

   Meta-Environment - An environment for language prototyping.
   Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands. 

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

   $Id$
*/
tool gen is {
  command = "gen-adapter"
}

process BROWSER(Id : gen, Cmd : str, Inp : str) is
let
  Out : str
in
   snd-eval(Id,cmd(Cmd, input(Inp))).
   rec-value(Id, output(Out?))
endlet

process Help is
let
  HELP    : gen,
  Id      : int,
  Started : bool
in
  Id := process-id.  
  execute(gen,HELP?).
  subscribe(online-help(<term>)).
  Started := false.
  (
    rec-msg(jitterbug-wanted).
    BROWSER(HELP,
            "netscape -remote openUrl(http://www.cwi.nl/htbin/MetaEnv/meta-bugs)", 
            "").
    snd-msg(jitterbug-activated)
  +
    rec-msg(online-help-wanted).
    BROWSER(HELP,
            "netscape -remote openUrl(__PKGDATA__/meta.html)", 
            "").
    Started := true.
    snd-msg(done)
  +
    rec-msg(no-online-help-wanted).
    Started := false.
    snd-msg(done)
  +
    rec-note(online-help(open-module)).
    (
      if Started then
        BROWSER(HELP,
                "netscape -remote openUrl(__PKGDATA__/open-module.html)",
                "")
      fi
    +
      if not(Started) then
        tau
      fi
    )
  )*
  delta
endlet
