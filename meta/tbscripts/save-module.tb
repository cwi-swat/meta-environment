/*
  $Id$
 */
process Save-modules is
let
  Id      : term,
  Str     : term,
  Syntax  : term,
  Eqs     : term,
  Module  : term,
  Path    : str,
  Modules : list,
  Table   : term,
  Text    : str
in
  Id := process-id. 
  ( rec-msg(save-module(Module?)).
    snd-note(ui-status(statf(Id, "Saving %s",[Module]))) .
    snd-msg(get-sdf2-path-from-db(Module)).
    rec-msg(path(Path?)).
    snd-msg(get-sdf2-asfix(Module)).
    rec-msg(syntax(Syntax?)).
    snd-msg(save-tree(Module,Path,Syntax)).
    rec-msg(save-done) .
    snd-msg(get-eqs-tree(Module)).
    ( rec-msg(tree(Eqs?)).
      snd-msg(get-eqs-path-from-db(Module)).
      rec-msg(path(Path?)).
      snd-msg(save-tree(Module,Path,Eqs)).
      rec-msg(save-done)
    +
      rec-msg(no-eqs)
    +
      rec-msg(unavailable)
    ).
    snd-msg(get-table-from-db(trm(Module))).
    (
      rec-msg(table(Table?, Path?)). 
      snd-msg(save-table(Module, Path, Table)).
      rec-msg(save-done)
    +
      rec-msg(no-table)
    ).
    snd-msg(get-table-from-db(eqs(Module))).
    (
      rec-msg(table(Table?, Path?)).
      snd-msg(save-table(Module, Path, Table)).
      rec-msg(save-done)
    +
      rec-msg(no-table)
    ).
    snd-note(ui-status(endstat(Id))) .
    snd-msg(saved-module(Module))
  +
    rec-msg(save-sdf-module(Module?)).
    snd-note(ui-status(statf(Id, "Saving %s",[Module]))) .
    snd-msg(get-sdf2-path-from-db(Module)).
    rec-msg(path(Path?)).
    snd-msg(get-sdf2-asfix(Module)).
    (
      rec-msg(syntax(Syntax?)) .
      snd-msg(unparse(Syntax)) .
      rec-msg(unparsed-text(Text?)) .
      snd-msg(save-text-file(Path, Text)) .
      rec-msg(save-done(Path))
    ) .
    snd-note(ui-status(endstat(Id))) .
    snd-msg(saved-sdf-module(Module))
  +
    rec-msg(save-asfsdf-module(Module?)).
    snd-note(ui-status(statf(Id, "Saving %s",[Module]))) .
    snd-msg(get-sdf2-path-from-db(Module)).
    rec-msg(path(Path?)).
    snd-msg(get-sdf2-asfix(Module)).
    (
      rec-msg(syntax(Syntax?)) .
      snd-msg(unparse(Syntax)) .
      rec-msg(unparsed-text(Text?)) .
      snd-msg(save-text-file(Path, Text)) .
      rec-msg(save-done(Path))
    ) .
    snd-msg(get-eqs-text(Module)).
    (
      rec-msg(eqs-text(Module, Text?)) .
      snd-msg(get-eqs-path-from-db(Module)) .
      rec-msg(path(Path?)) .
      snd-msg(save-text-file(Path, Text)) .
      rec-msg(save-done(Path))
    +
      rec-msg(no-eqs-text(Module))
    ).
    snd-note(ui-status(endstat(Id))) .
    snd-msg(saved-asfsdf-module(Module))
  +
    rec-msg(save-all).
    snd-msg(get-all-modules).
    rec-msg(all-modules(Modules?)).
    ( if not-equal(Modules, []) then
       Module := first(Modules).
       Modules := next(Modules).
	     snd-note(ui-status(statf(Id, "Saving %s",[Module]))) .
       snd-msg(get-sdf2-path-from-db(Module)).
       rec-msg(path(Path?)).
       snd-msg(get-sdf2-asfix(Module)).
       rec-msg(syntax(Syntax?)).
       snd-msg(save-tree(Module,Path,Syntax)).
       rec-msg(save-done) .
       snd-msg(get-eqs-tree(Module)).
       ( rec-msg(tree(Eqs?)).
         snd-msg(get-eqs-path-from-db(Module)).
         rec-msg(path(Path?)).
         snd-msg(save-tree(Module,Path,Eqs)).
         rec-msg(save-done)
       +
         rec-msg(no-eqs)
       +
         rec-msg(unavailable)
       ) .
       snd-msg(get-table-from-db(trm(Module))).
       (
         rec-msg(table(Table?, Path?)). 
         snd-msg(save-table(Module, Path, Table)).
         rec-msg(save-done)
       +
         rec-msg(no-table)
       ).
       snd-msg(get-table-from-db(eqs(Module))).
       (
         rec-msg(table(Table?, Path?)).
         snd-msg(save-table(Module, Path, Table)).
         rec-msg(save-done)
       +
         rec-msg(no-table)
       ).
       snd-note(ui-status(endstat(Id)))
      fi
    )*
    if equal(Modules,[]) then
     snd-msg(saved)
    fi
  )*
  delta
endlet
