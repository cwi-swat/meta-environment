#ifndef _GUI_NAVIGATOR
#define _GUI_NAVIGATOR

tool navigator is { }

process Navigator is
let
  Menu: term,
  Graph: term,
  Module: str,
  Modules : list,
  PopupMenu: list,
  Str : str,
  T: navigator
in
  rec-connect(T?)
  .
    (
      rec-msg(nav-set-modules(Modules?))
      . snd-do(T, set-modules(Modules))
    +
      rec-msg(nav-select-module(Module?))
      . snd-do(T, select-module(Module))
    +
      rec-event(T, module-selected(Module?))
      . snd-note(nav-module-selected(Module))
      . snd-ack-event(T, module-selected(Module))
    +
      rec-event(T, request-popup-event(Module?))
      . snd-msg(nav-request-popup-event(Module))
      . snd-ack-event(T, request-popup-event(Module))
    +
      rec-msg(nav-show-popup(Module, PopupMenu?))
      . snd-do(T, show-popup(Module, PopupMenu))
    +
      rec-event(T, popup-menu-event(Module?, Menu?))
      . snd-msg(nav-menu-selected(Module, Menu))
      . snd-ack-event(T, popup-menu-event(Module, Menu))
    )
    *
      rec-disconnect(T)
endlet

process NAV-AddListener is
  subscribe(nav-module-selected(<str>))




process NAV-RequestPopup(ModuleId: str?) is
  rec-msg(nav-request-popup-event(ModuleId?))

process NAV-ShowPopup(ModuleId: str, PopupMenu: list) is
  snd-msg(nav-show-popup(ModuleId, PopupMenu))

process NAV-PopupEvent(ModuleId: str?, MenuItem: term?) is
  rec-msg(nav-menu-selected(ModuleId?, MenuItem?))

toolbus(Navigator)

#endif
