#ifndef _GUI_NAVIGATOR
#define _GUI_NAVIGATOR

tool navigator is { }

process Navigator is
let
  Menu: term,
  Graph: term,
  Module: str,
  Modules : list,
  PopupMenu: list,
  Str : str,
  T: navigator,
  Type: term
in
  rec-connect(T?)
  .
    (
      rec-msg(nav-set-modules(Modules?))
      . snd-do(T, set-modules(Modules))
    +
      rec-msg(nav-select-module(Module?))
      . snd-do(T, select-module(Module))
    +
      rec-event(T, module-selected(Module?))
      . snd-note(nav-module-selected(Module))
      . snd-ack-event(T, module-selected(Module))
    +
      rec-event(T, request-popup-event(Type?, Module?))
      . snd-msg(nav-request-popup-event(Type, Module))
      . snd-ack-event(T, request-popup-event(Type, Module))
    +
      rec-msg(nav-show-popup(Type, Module, PopupMenu?))
      . snd-do(T, add-events(Type, Module, PopupMenu))
    +
      rec-event(T, popup-menu-event(Type?, Menu?, Module?))
      . snd-msg(nav-menu-selected(Type, Menu, Module))
      . snd-ack-event(T, popup-menu-event(Type, Menu, Module))
/*
    +
      rec-event(T,clear-all)
      . snd-msg(clear-all)
      . rec-msg(cleared-all)
      . snd-ack-event(T,clear-all)
    +
      rec-event(T, button-selected(Type?, Event?))
      . snd-msg(ui-button-selected(Type, Event))
      . snd-ack-event(T, button-selected(Type, Event))
    +
      rec-event(T, button-selected(Type?, Module?, Event?))
      . snd-msg(ui-button-selected(Type, Event, Module))
      . snd-ack-event(T, button-selected(Type, Module, Event))
*/
    )
    *
      rec-disconnect(T)
endlet

toolbus(Navigator)

#endif
