[
  [ParseTree, tree, term(l("term"),
                    w(""),
                    l("X"),
                    w(""),
                    id("X"),
                    w(<layout-before-tree(str)>),
                    <tree(Tree)>,
                    w(<layout-after-tree(str)>),
                    no-abbreviations) 
  ],
  

  [ModuleName, default, id(<id(str)>)],

  [Tree, appl, appl(<prod(Production)>,
                    w(""),
                    <args(Args)>
                   )
  ],
  [Tree, list, list(<iter(Symbol)>,
                    w(""),
                    <args(Args)>
                   )
  ],
  [Tree, lexical, lex(<string(str)>,<symbol(Symbol)>)],
  [Tree, unquoted-literal, l(<string(str)>)],
  [Tree, quoted-literal, ql(<string(str)>)],
  [Tree, separator, sep(<string(str)>)],
  [Tree, layout, w(<string(str)>)],
  [Tree, var, var(<string(str)>,<symbol(Symbol)>)], 

  [Production, default, prod(id(<module-name(str)>),
                       w(""),
                       <lhs(Symbols)>,
                       w(""),
                       l("->"),
                       w(""),
                       <rhs(Symbol)>,
                       w(""),
                       <attributes(Attributes)>
                      )
  ],

  [Attributes, no-attrs, no-attrs],
  [Attributes, attrs, attrs(l("{"),w(""),<attrs(Attrs)>,w(""),l("}"))],

  [Attrs, many, [<head(Attr)>,w(""),sep(","),w(""),<[tail(Attrs)]>]],
  [Attrs, single, [<head(Attr)>]],

  [Attr, cons, cons(<string(str)>)],
  [Attr, bracket, l("bracket")],
  [Attr, traverse, l("traverse")],
  [Attr, memo, l("memo")], 
  [Attr, reject, l("reject")],
  [Attr, prefer, l("prefer")],
  [Attr, avoid, l("avoid")],
  [Attr, constructor, l("constructor")],
  [Attr, id, id(<module-name(str)>)],
  [Attr, left, l("left")],
  [Attr, right, l("right")],
  [Attr, assoc, l("assoc")],
  [Attr, non-assoc, l("non-assoc")],
   
  [Symbol, iter-star, iter(<symbol(Symbol)>,
                    w(""),
                    l("*")
                   )
  ],
  [Symbol, iter-plus, iter(<symbol(Symbol)>,
                    w(""),
                    l("+")
                   )
  ],
  [Symbol, iter-star-sep, iter-sep(l("{"),
                           w(""),
                           <symbol(Symbol)>,
                           w(""),
                           ql(<separator(str)>),
                           w(""),
                           l("}"),
                           w(""),
                           l("*"))
  ],
  [Symbol, iter-plus-sep, iter-sep(l("{"),
                           w(""),
                           <symbol(Symbol)>,
                           w(""),
                           ql(<separator(str)>),
                           w(""),
                           l("}"),
                           w(""),
                           l("+"))
  ],

  [Symbol, empty-layout, w("")],

  [Symbol, sort, sort(<string(str)>)],
  [Symbol, unquoted-literal, l(<string(str)>)],
  [Symbol, quoted-literal, ql(<string(str)>)],

  [Args, list, [<head(Tree)>,<[tail(Args)]>]],
  [Args, empty, [ ]],

  [Symbols, list, [<head(Symbol)>,<[tail(Symbols)]>]],
  [Symbols, empty, [ ]] 
]
