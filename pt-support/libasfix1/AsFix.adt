[
  [ParseTree, Tree, term(l("term"),
                     <ws-after-term(Layout)>,
                     l("X"),
                     <ws-after-path(Layout)>,
	             <module-name(ModuleName)>,
	             <ws-after-module-name(Layout)>,
	             <tree(Tree)>,
	             <ws-after-tree(Layout)>,
	             no-abbreviations
                    ) 
  ],
  

  [ModuleName, Default, id(<id(String)>)],

  [Tree, Layout, <layout(Layout)>],
  [Tree, Var, <var(Var)>], 
  [Tree, Appl, appl(<prod(Production)>,
                    w(""),
                    <args(Args)>
                   )
  ],
  [Tree, List, list(<iter(Iter)>,
                    w(""),
                    <elems(Args)>
                   )
  ],
  [Tree, Lexical, <lexical(Lexical)>],
  [Tree, Literal, <literal(Literal)>],
  [Tree, QLiteral, <qliteral(QLiteral)>],
  [Tree, Separator, <separator(Separator)>],

  [Var, Default, var(<name(String)>,<sort(Symbol)>)],


  [Production, Default, prod(id(<module-name(String)>),
                       w(""),
                       <lhs(Symbols)>,
                       w(""),
                       l("->"),
                       w(""),
                       <rhs(Symbol)>,
                       w(""),
                       <attrs(Attrs)>
                      )
  ],
  
  [Iter, Star, iter(<sort(Symbol)>,
                    w(""),
                    l("*")
                   )
  ],
  [Iter, Plus, iter(<sort(Symbol)>,
                    w(""),
                    l("+")
                   )
  ],
  [Iter, SepStar, iter-sep(l("{"),
                           w(""),
                           <sort(Symbol)>,
                           w(""),
                           <separator(Separator)>,
                           w(""),
                           l("}"),
                           w(""),
                           l("*"))],
  [Iter, SepPlus, iter-sep(l("{"),
                           w(""),
                           <sort(Symbol)>,
                           w(""),
                           <separator(Literal)>,
                           w(""),
                           l("}"),
                           w(""),
                           l("+"))],

 [Literal, Default, l(<chars(String)>)],
 [QLiteral, Default, ql(<chars(String)>)],
 [Lexical, Default, lex(<chars(String)>,<sort(Symbol)>)],  
 [Separator, Default, sep(<chars(String)>)],
 [Layout, Default, w(<chars(String)>)], 

 [Args, Default, [<head(Tree)>,[<tail(Args)>]]]
]
