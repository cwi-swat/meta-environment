dnl
dnl $Id$
dnl

dnl Process this file with autoconf to produce a configure script.
AC_INIT
AC_CONFIG_SRCDIR([configure.in])
GLT_INIT_PACKAGE
AC_PREREQ(2.59)

dnl Our own version of libdir whose value is set dynamically
AC_SUBST(INSTLIBDIR)
INSTLIBDIR="$libdir"

AC_AIX
AC_PROG_CC
AC_PROG_LIBTOOL

dnl What commands are needed to set the variable MAKE in Makefiles?
AC_PROG_MAKE_SET([])

dnl {{{ Handle --with-aterm

AC_PACKAGE_REQUIRE(aterm, baffle,
	[  --with-aterm=DIR        ATerm-library is in DIR])
AC_SUBST(ATERM)

ATERMINC="${ATERM}/include"
AC_SUBST(ATERMINC)

ATERMLIB="${ATERM}/lib"
AC_SUBST(ATERMLIB)

ATERMBIN="${ATERM}/bin"
AC_SUBST(ATERMBIN)

dnl }}}
dnl {{{ Handle --with-aterm-java

AC_PACKAGE_REQUIRE(aterm-java, aterm-java-config,
        [  --with-aterm-java=DIR  ATerm-Java-library is in DIR])
JAVA_ATERM=\`${ATERM_JAVA}/bin/aterm-java-config\`
AC_SUBST(JAVA_ATERM)
dnl }}}

EXTERNAL_JARS=${JAVA_ATERM}
AC_SUBST(EXTERNAL_JARS)

dnl {{{ Handle --with-asc-support

AC_PACKAGE_REQUIRE(asc-support, asc-support-config,
	[  --with-asc-support=DIR  asc-support is in DIR])

ASCINC=${ASC_SUPPORT}/include
AC_SUBST(ASCINC)

ASCLIB=${ASC_SUPPORT}/lib
AC_SUBST(ASCLIB)

dnl }}}
dnl {{{ Handle --with-pgen

AC_PACKAGE_REQUIRE(pgen, sdf2table,
	[  --with-pgen=DIR         pgen is in DIR (developers only)])
AC_SUBST(PGEN)

PGENBIN=${PGEN}/bin
AC_SUBST(PGENBIN)

dnl }}}
dnl {{{ Handle --with-pt-support
 
AC_PACKAGE_REQUIRE(pt-support, unparsePT,
      [  --with-pt-support=DIR   ParseTree is in DIR])
AC_SUBST(PT_SUPPORT)
 
dnl PTINC=${PT_SUPPORT}/include
dnl AC_SUBST(PTINC)
dnl 
dnl PTLIB=${PT_SUPPORT}/lib
dnl AC_SUBST(PTLIB)
 
PTBIN=${PT_SUPPORT}/bin
AC_SUBST(PTBIN)
 
dnl }}}
dnl {{{ Handle --with-error-support
 
AC_PACKAGE_REQUIRE(error-support, error-support-config,
      [  --with-error-support=DIR   error-support is in DIR])
AC_SUBST(ERROR_SUPPORT)
 
dnl }}}
dnl {{{ Require ToolBus library
AC_PACKAGE_REQUIRE(toolbuslib, toolbuslib-config,
   [  --with-toolbuslib=DIR   ToolBus library is in DIR])
AC_SUBST(TOOLBUSLIB)
dnl }}}
dnl {{{ Require ToolBus library
AC_PACKAGE_REQUIRE(tide-support, tide-support-config,
   [  --with-tide-support=DIR   Tide support is in DIR])
AC_SUBST(TIDE_SUPPORT)
dnl }}}
dnl {{{ Handle --with-asf-support

AC_PACKAGE_REQUIRE(asf-support, asf-support-config,
	[  --with-asf-support=DIR  asf-support is in DIR])
AC_SUBST(ASF_SUPPORT)

dnl }}}
dnl {{{ Handle --with-sglr

AC_PACKAGE_REQUIRE(sglr, sglr,
	[  --with-sglr=DIR         sglr is in DIR])
AC_SUBST(SGLR)

SGLRBIN=${SGLR}/bin
AC_SUBST(SGLRBIN)

dnl }}}
dnl {{{ Handle --with-apigen

AC_PACKAGE_REQUIRE(apigen, adt-to-c,
	[  --with-apigen=DIR         apigen is in DIR])
AC_SUBST(APIGEN)

dnl }}}
dnl {{{ Handle --with-cflags

AC_ARG_WITH(cflags,
   [  --with-cflags=CFLAGS    standard options of c compiler],
   CFLAGS=${withval},
   if test "a${GCC}" = "ayes"; then
     CFLAGS="-Wall -g -O2"
   fi;
)
AC_SUBST(CFLAGS)


dnl }}}

dnl {{{  Determine which libraries are needed for socket() and gethostname()

NOSOCKLIBS=$LIBS
SOCKET_FOUND=no
SOCKLIBS=
AC_CHECK_LIB(sun,socket,[SOCKET_FOUND=yes;SOCKLIBS="-lsun"])
if test ${SOCKET_FOUND} = no; then
  AC_CHECK_LIB(socket, socket,[SOCKET_FOUND=yes;SOCKLIBS="-lsocket"])
fi

dnl then gethostname
GHN_FOUND=no
AC_CHECK_LIB(sun,gethostname,[GHN_FOUND=yes])
if test ${GHN_FOUND} = no; then
  AC_CHECK_LIB(nsl,gethostname,[GHN_FOUND=yes;SOCKLIBS="$SOCKLIBS -lnsl"])
fi

AC_SUBST(SOCKLIBS)

LIBS=$NOSOCKLIBS

dnl }}}

dnl {{{ Output files

dnl Which files need updating?
AC_CONFIG_FILES([Makefile
spec/Makefile
utils/Makefile
test/Makefile
spec/add-labels/Makefile
])
AC_OUTPUT

dnl }}}
