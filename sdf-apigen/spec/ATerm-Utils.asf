equations

  [equ-merge-adts-empty]
    merge-adts($ADT, []) = $ADT

  [equ-merge-adts-double-ok]
    merge-adts([$Entry*1, $Entry, $Entry*2], [$Entry, $Entry*3]) =
	merge-adts([$Entry*1, $Entry, $Entry*2], [$Entry*3])

  [equ-merge-adts-double-collision]
    constructor($TypeId, $AltId, $Pattern1) := $Entry1,
    constructor($TypeId, $AltId, $Pattern2) := $Entry2,
    $Pattern1 != $Pattern2,
    $ADT := merge-adts([$Entry*1, $Entry1, collision($Entry1, $Entry2),
	$Entry*2], [$Entry*3])
    ===>
    merge-adts([$Entry*1, $Entry1, $Entry*2], [$Entry2, $Entry*3]) = $ADT

  [default-merge-adts-divide]
    merge-adts([$Entry*1], [$Entry, $Entry*2]) =
	merge-adts([$Entry*1,
		    $Entry], [$Entry*2])

equations

  [equ-get-type-int]  get-type($Int) = #int
  [equ-get-type-list] get-type([$ATerm*]) = #list
  [equ-get-type-int] get-type(<$ATerm>) = #placeholder
  [default-equ-get-type] get-type($ATerm) = #appl

equations

[afun-concat-done]
afun-concat($AFun) = $AFun

[afun-concat-both-unquoted]
afun-concat(uqliteral($Char*1) uqliteral($Char*2) $AFun*) =
afun-concat(uqliteral($Char*1 "-" $Char*2) $AFun*)

[afun-concat-both-quoted]
afun-concat(qliteral("""$Char*1""") qliteral("""$Char*2""") $AFun*) =
afun-concat(qliteral("""$Char*1 "-" $Char*2""") $AFun*)
 
[afun-concat-left-quoted]
afun-concat(qliteral("""$Char*1""") uqliteral($Char*2) $AFun*) =
afun-concat(qliteral("""$Char*1 "-" $Char*2""") $AFun*)

[afun-concat-right-quoted]
afun-concat(uqliteral($Char*1) qliteral("""$Char*2""") $AFun*) =
afun-concat(qliteral("""$Char*1 "-" $Char*2""") $AFun*)

tests 

[ac-1] afun-concat(aap "sjaak" noot) = "aap-sjaak-noot"
[ac-2] afun-concat(ws after sep) = ws-after-sep

equations

  [equ-aterm-to-lit-afun]
    aterm-to-lit(uqliteral($Char*)) = qliteral(""" $Char* """)

  [equ-aterm-to-lit-intcon]
    aterm-to-lit(natcon($Char*)) = qliteral(""" $Char* """)

  [equ-aterm-to-lit-intcon-minus]
    aterm-to-lit(- natcon($Char*)) = qliteral(""" "-" $Char* """)

  [equ-aterm-to-lit-literal]
    qliteral(""" $Char*2 """) := escape(uqliteral($Char*1))
    ===>
    aterm-to-lit(uqliteral($Char*1)) = 
	qliteral(""" "\" """ $Char*2 "\" """ """)

  [equ-aterm-to-lit-appl]
    qliteral(""" $Char*1 """) := aterm-to-lit($AFun),
    qliteral(""" $Char*2 """) := aterms-to-lit($ATerm+)
    ===>
    aterm-to-lit($AFun($ATerm+)) = qliteral(""" $Char*1 "(" $Char*2 ")" """)

  [equ-aterm-to-lit-list]
    qliteral(""" $Char* """) := aterms-to-lit($ATerm*)
    ===>
    aterm-to-lit([$ATerm*]) = qliteral(""" "[" $Char* "]" """)

  [equ-aterm-to-lit-placeholder]
    qliteral(""" $Char* """) := aterm-to-lit($ATerm)
    ===>
    aterm-to-lit(<$ATerm>) = qliteral(""" "<" $Char* ">" """)

  [equ-aterms-to-lit-empty]
    aterms-to-lit() = ""

  [equ-aterms-to-lit-single]
    aterms-to-lit($ATerm) = aterm-to-lit($ATerm)

  [equ-aterms-to-lit-divide]
    qliteral(""" $Char*1 """) := aterm-to-lit($ATerm),
    qliteral(""" $Char*2 """) := aterms-to-lit($ATerm+)
    ===>
    aterms-to-lit($ATerm,$ATerm+) = qliteral(""" $Char*1 "," $Char*2 """)

  [equ-concat] 
    qliteral(""" $Char*1 """) ++ qliteral(""" $Char*2 """) = 
	qliteral(""" $Char*1 $Char*2 """)

  [equ-escape-quote]
    $L := qliteral(""" "\" """ """) ++ escape(qliteral(""" $Char* """))
    ===>
    escape(qliteral(""" """ $Char* """)) = $L

  [equ-escape-backslash]
    $L := qliteral(""" "\" "\" """) ++ escape(qliteral(""" $Char* """))
    ===>
    escape(qliteral(""" "\" $Char* """)) = $L

  [equ-escape-empty]
    escape(qliteral(""" """)) = qliteral(""" """)

  [default-escape]
    $L := qliteral(""" $Char """) ++ escape(qliteral(""" $Char* """))
    ===>
    escape(qliteral(""" $Char $Char* """)) = $L


  [equ-quote-all-funs-unquoted-constant]
    quote-all-funs(uqliteral($Char*)) = qliteral(""" $Char* """)

  [equ-quote-all-funs-unquoted-constant]
    $ATerm+2 := quote-all-funs-in-list($ATerm+)
    ===>
    quote-all-funs(uqliteral($Char*)($ATerm+)) = 
      qliteral(""" $Char* """)($ATerm+2)

  [default-quote-all-funs]
    quote-all-funs($ATerm) = $ATerm

  [equ-quote-all-funs-in-list-singleton]
    quote-all-funs-in-list($ATerm) = quote-all-funs($ATerm)

  [equ-quote-all-funs-in-list-more]
    $ATerm2 := quote-all-funs($ATerm),
    $ATerm+2 := quote-all-funs-in-list($ATerm+)
    ===>
    quote-all-funs-in-list($ATerm, $ATerm+) = $ATerm2, $ATerm+2
