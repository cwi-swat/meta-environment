module Sdf2-to-AsFix2ME-ADT

imports UniqueLabels
imports AddLabels
imports Build-AsFix2ME-ADT 

exports
  context-free syntax
    sdf-to-asfix2me-adt-cons-expand ( SDF ) -> ATerm
    sdf-to-asfix2me-adt-cons-remove ( SDF ) -> ATerm

    sdf-to-asfix2me-adt ( SDF, ConsOption )           -> ATerm
    sdf-to-asfix2me-adt ( Module, ConsOption )        -> ATerm
    sdf-module-to-asfix2me-adt ( Module, ConsOption ) -> ATerm

context-free start-symbols
  ATerm SDF 

context-free syntax

%% Literal -> Symbol {avoid}

start-sorts-to-asfix2me-adt(Module) -> ATerm

hiddens
context-free syntax
  "layout-adt" -> ATerm
  "layout-adt" -> AFun {reject}
  
hiddens

context-free syntax

  collect-start-sorts(Module) -> Symbol*
  collect-start-sorts(Module, Symbol*) -> Symbol* {traversal(accu,top-down,break)}
  collect-start-sorts(Grammar, Symbol*) -> Symbol* {traversal(accu,top-down,break)}
 collect-start-sorts(Section, Symbol*) -> Symbol* {traversal(accu,top-down,break)}
  

  start-sorts-to-adt(Symbol*) -> ATerm
  start-sorts-to-adt(Symbol*, ATerm) -> ATerm 
  start-sort-to-adt(Symbol, ATerm)    -> ATerm

hiddens

  context-free syntax
    section-to-adt ( ModuleName, Section, ConsOption )		-> {ATerm ","}*
    grammar-to-adt ( ModuleName, Grammar, ConsOption )		-> {ATerm ","}*
    productions-to-adt ( ModuleName, Production*, ConsOption )	-> {ATerm ","}*
    production-to-adt ( ModuleName, Production, ConsOption )	-> {ATerm ","}*
    lexicals-to-adt ( ModuleName, Production*, ConsOption )	-> {ATerm ","}*
    lexical-to-adt ( ModuleName, Production, ConsOption )	-> {ATerm ","}*

    build-list-entries ( Symbol* )			-> {ATerm ","}*


  variables
    "$ADT"[0-9]*	-> ATerm
    "$AFArg"		-> ATerm
    "$AFArgs"		-> { ATerm "," }*
    "$AFAttr"		-> ATerm
    "$AFAttr+"[0-9]*	-> { ATerm "," }+
    "$AFAttr*"[0-9]*	-> { ATerm "," }*
    "$AFAttrs"		-> ATerm
    "$AFIter"		-> ATerm
    "$AFModName"	-> Literal
    "$AFProd"		-> ATerm
    "$AFSep"		-> ATerm
    "$AFSort"		-> Literal
    "$AltId"		-> AFun
    "$ATerm"		-> ATerm
    "$Attr"		-> Attribute
    "$Attr*"[0-9]*	-> { Attribute "," }*
    "$Attr+"		-> { Attribute "," }+
    "$Attributes"	-> Attributes
    "$Char*"[0-9]*	-> CHAR*
    "$ConsOption"	-> ConsOption
    "$ElemSortName"	-> AFun
    "$ElemType"		-> AFun
    "$Entries"[0-9]*	-> { ATerm "," }*
    "$Entry"		-> ATerm
    "$FieldName"	-> Literal
    "$FieldId"		-> AFun
    "$FieldType"	-> AFun
    "$FieldWs"		-> ATerm
    "$Grammar"[0-9]*	-> Grammar
    "$ImpSection*"	-> ImpSection*
    "$Label"		-> Literal
    "$ListType"		-> AFun
    "$Literal"		-> Literal
    "$ModName"		-> ModuleName
    "$Module"		-> Module
    "$LabeledModule"    -> Module
    "$Module*"		-> Module*
    "$ModId"[0-9]*      -> ModuleId
    "$Production"	-> Production
    "$Production*"	-> Production*
    "$SDF"		-> SDF
    "$Section"		-> Section
    "$Section*"[0-9]* 	-> Section*
    "$Sep"		-> Literal
    "$Sort"[0-9]*	-> Sort
    "$Symbol"		-> Symbol
    "$Symbol*"[0-9]*    -> Symbol*
    "$Symbol+"		-> Symbol+
    "$TypeId"		-> AFun
    "$UQLit"		-> UQLiteral
    "$QLit"		-> Literal
  

