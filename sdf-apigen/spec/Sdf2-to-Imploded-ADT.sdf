module Sdf2-to-Imploded-ADT

imports Production-To-ATerm
imports Constructors
imports Normalization
imports Symbols
imports ATerm-Utils

exports 

context-free syntax

    sdf-to-imploded-adt ( SDF )           -> ATerm
    sdf-to-imploded-adt ( Module )        -> ATerm
    sdf-module-to-imploded-adt ( Module ) -> ATerm

hiddens
  context-free start-symbols
	ATerm

  context-free syntax

    grammars-to-adt (Section*,{ATerm ","}*) -> {ATerm ","}* 
	{traversal(accu,top-down,break)}
    grammars-to-adt (Grammar, {ATerm ","}*) -> {ATerm ","}* 
	{traversal(accu,top-down,break)}

    lists-to-adt (Section*,{ATerm ","}*) -> {ATerm ","}* 
	{traversal(accu,top-down,break)}
    lists-to-adt (Grammar,{ATerm ","}*) -> {ATerm ","}* 
	{traversal(accu,top-down,break)}
    lists-to-adt (Symbol, {ATerm ","}*) -> {ATerm ","}* 
	{traversal(accu,top-down,break)}

    productions-to-adt ( Production*)	-> {ATerm ","}*
    production-to-adt ( Production)	-> {ATerm ","}*
    lexicals-to-adt (Production*)	-> {ATerm ","}*
    lexical-to-adt ( Production)	-> {ATerm ","}*

variables
	"$PreprocessedModule" -> Module {strict}
	"$Production*"	-> Production* {strict}
	"$Production"	-> Production {strict}
	"$Tree" -> ATerm {strict}
	"$Type"[0-9]* -> StrCon {strict}

	"$Label"		-> StrCon {strict}
	"$Symbol"[0-9]*	-> Symbol {strict}
	"$Symbol*"[0-9]*    -> Symbol* {strict}
	"$Attr*"[0-9]*	-> { Attribute "," }* {strict}
	"$Literal"		-> StrCon {strict}
	"$Attributes"	-> Attributes {strict}
	"$Grammar" -> Grammar {strict}
	"$Module" -> Module {strict}
	"$LabeledModule" -> Module {strict}	
	"$ADT"[0-9]* -> ATerm  {strict}
	"$Section*" -> Section*  {strict}
	"$Section" -> Section  {strict}
	"$Entries"[0-9]* -> {ATerm ","}* {strict}
	"$Entry"[0-9]* -> ATerm {strict}
	"$Module*" -> Module* {strict}
	"$AltId" -> StrCon {strict}

  variables
	"_Sep"		-> StrCon {wild}
	"_ImpSection*" -> ImpSection* {wild}
	"_ModuleId" -> ModuleId {wild}
	"_Symbol*"[0-9]*    -> Symbol* {wild}
	"_Symbol"[0-9]*	-> Symbol {wild}	
	"_Attr*"[0-9]* -> {Attribute","}* {wild}
	"_Production*"	-> Production* {wild}
	"_Production"	-> Production {wild}
	"_Literal"		-> StrCon {wild}
	"_Attributes"	-> Attributes {wild}
	"_Label" -> StrCon {wild}

