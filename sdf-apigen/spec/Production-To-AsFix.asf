tests

[prod-test]
 production-to-asfix("lhs":Bool "&" "rhs":Bool -> Bool ) ==
  prod([sort("Bool"),lit("&"),sort("Bool")],sort("Bool"),no-attrs)

[normalized-prod-test]
  production-to-asfix(
	<Bool-CF> <LAYOUT?-CF> "&" <LAYOUT?-CF> <Bool-CF> -> <Bool-CF>)
  ==
  prod([cf(sort("Bool")),cf(opt(layout)),lit("&"),cf(opt(layout)),cf(sort("Bool"))],cf(sort("Bool")),no-attrs)

equations

[normal-prod]
  $AFSymbols    := symbols-to-asfix($Symbol*),
  $AFSymbol    := symbol-to-asfix($Symbol),
  $AFAttrs   := attrs-to-asfix($Attributes)
  ===>
  production-to-asfix($Symbol* -> $Symbol $Attributes) =
    prod([$AFSymbols],$AFSymbol,$AFAttrs)

equations

[equ-symbols-to-asfix-empty]
  symbols-to-asfix( ) =

[equ-symbols-to-asfix-single]
  symbols-to-asfix( $Symbol) = 
    symbol-to-asfix( $Symbol)

[equ-build-asfix-cf-prod-args-divide]
  $AFSymbol := symbol-to-asfix( $Symbol),
  $AFSymbols := symbols-to-asfix( $Symbol+)
  ===>
  symbols-to-asfix( $Symbol $Symbol+) = $AFSymbol, $AFSymbols

equations

[default-strip-label]
  symbol-to-asfix( $Label : $Symbol) = 
    symbol-to-asfix( $Symbol)
    
[lex-symbol]
  symbol-to-asfix(<$Symbol-LEX>) =
    lex(symbol-to-asfix($Symbol))

[cf-symbol]
  symbol-to-asfix(<$Symbol-CF>) =
    cf(symbol-to-asfix($Symbol))

[sort]
  symbol-to-asfix($Sort) = sort(symbol-to-type($Sort))

[qlit]
  symbol-to-asfix($Literal) = lit($Literal)

[charclass]
  symbol-to-asfix($CharClass) = 
    charclass-to-asfix($CharClass)

[iter-star]
  symbol-to-asfix($Symbol *) = 
	iter-star(symbol-to-asfix($Symbol))

[iter]
  symbol-to-asfix($Symbol +) = 
	iter(symbol-to-asfix($Symbol))

[iter-sep-star]
  symbol-to-asfix({ $Symbol1 $Symbol2 } *) = 
	iter-star-sep(symbol-to-asfix($Symbol1),
		      symbol-to-asfix($Symbol2))

[iter-sep]
  symbol-to-asfix({ $Symbol1 $Symbol2 } +) = 
	iter-sep(symbol-to-asfix($Symbol1),
		 symbol-to-asfix($Symbol2))

[optional]
  symbol-to-asfix($Symbol?) = opt(symbol-to-asfix($Symbol))

[layout]
  symbol-to-asfix(LAYOUT) = layout

[start]
  symbol-to-asfix(<START>) = sort("<START>")

[nested-lit]
  symbol-to-asfix(nested-literal(_Symbol* -> $Symbol _Attributes)) =
  symbol-to-asfix($Symbol)

[parameterized]
  symbol-to-asfix($Sort[[$Symbol]]) = 
	parameterized-sort(symbol-to-type($Sort),[symbol-to-asfix($Symbol)])

[formal-param-labelled]
  symbol-to-asfix($Label:<_Symbol-PARAM>) = 
	<"type-of-" || $Label(term)>

[formal-param-labelled]
  symbol-to-asfix($Label:<<_Symbol-PARAM>-CF>) = 
	<"type-of-" || $Label(term)>


[formal-param]
  symbol-to-asfix(<$Sort-PARAM>) = 
	<"type-of-" || symbol-to-type($Sort)(term)>

equations

[equ-build-asfix-multiple-charrange]
  [$AFCharRanges1] := charranges-to-asfix($CharRanges1),
  [$AFCharRanges2] := charranges-to-asfix($CharRanges2)
  ===>
  charranges-to-asfix($CharRanges1 $CharRanges2) = 
	[$AFCharRanges1,$AFCharRanges2]

[equ-charclass-to-asfix]
  charclass-to-asfix([$CharRanges]) = 
    char-class(charranges-to-asfix($CharRanges))

[equ-build-asfix-singlechar-charrange]
  charranges-to-asfix(numchar(\ $digit+)) = 
    [natcon($digit+)]

[equ-build-asfix-multiplechars-charrange]
  charranges-to-asfix(numchar(\ $digit+1)-numchar(\ $digit+2)) = 
    [range(natcon($digit+1),natcon($digit+2))]

equations

[not-empty]
  $AFAttr+ := attr-list-to-asfix($Attr+)
  ===>
  attrs-to-asfix({$Attr+}) = 
    attrs([$AFAttr+])

[default-empty]
  attrs-to-asfix($Attributes) = no-attrs 

equations

[single]
  attr-list-to-asfix($Attr) = 
    attr-to-asfix($Attr)

[divide]
  $AFAttr+1 := attr-to-asfix($Attr),
  $AFAttr+2 := attr-list-to-asfix($Attr+)
  ===>
  attr-list-to-asfix($Attr, $Attr+) =
     $AFAttr+1,$AFAttr+2

[default-divide]
  $AFAttr*1 := attr-to-asfix($Attr),
  $AFAttr*2 := attr-list-to-asfix($Attr+)
  ===>
  attr-list-to-asfix($Attr, $Attr+) = $AFAttr*1,$AFAttr*2

equations

[left-attr]        
attr-to-asfix(left) = idcon(assoc)(idcon(left))

[right-attr]       
attr-to-asfix(right) = idcon(assoc)(idcon(right))

[nonassoc-attr]       
attr-to-asfix(non-assoc) =  idcon(assoc)(idcon(non\-assoc))

[assoc-attr]       
attr-to-asfix(assoc) = idcon(assoc)(idcon(assoc))

[bracket-attr]     
attr-to-asfix(bracket) = idcon(bracket)

[avoid-attr]       
attr-to-asfix(avoid) = idcon(avoid)

[prefer-attr]      
attr-to-asfix(prefer) = idcon(prefer)

[cons-attr]
attr-to-asfix(cons($ATerm)) = idcon(term)(cons($ATerm))

[default-term-attr] 
attr-to-asfix($ATerm) = idcon(term)($ATerm)

