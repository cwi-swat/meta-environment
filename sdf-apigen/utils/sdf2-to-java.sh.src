#! /bin/sh

# {{{ variables

prefix=__PREFIX__
bindir=__BINDIR__
PKGDATA=__PKGDATA__
PRG=`basename $0`
APIGEN=__APIGEN__
SDF2ADT="__SDF2ADT__"

# }}}

# {{{ usage()

usage() {
cat << ENDCAT >&2
Usage: $PRG -i <sdf2-specification> [options]

Parameters:

  -b | --bottom           only generate bottom sorts       [off]
  -i | --input  <FILE>    specify input specification      [?]
  -f | --folding          enable folding mode              [off]
  -n | --name <STR>       name of the api                  [improvised]
  -o | --output <DIR>     specify basedir for output       [.]
  -p | --package <STR>    specify package                  [""]
  -t | --visitable        visitable enabled                [off]
  -j | --jtom             generate jtom interface          [off]
  -e | --expand-cons      propagate cons-annotations       [on]
  -r | --remove-cons      remove cons-annotations          [off]
  -I | --imploded         create API for imploded terms    [off]
  -v | --verbose          be verbose during generation     [off]
  -h | --help             display this information

Example: ${PRG} -r -i Booleans.sdf -p booleans

ENDCAT
}

# }}}
# {{{  info()

info () {
  if [ $VERBOSE -gt 0 ]; then
    echo $* >&2
   fi
}

# }}}
# {{{  error()

error() {
  echo "${PRG}: $*" >&2
  exit 1
}

# }}}
# {{{  require()

require() {
  [ -f $1 ] || error "no such file: $1"
}

# }}}
# {{{  bail_out()

bail_out() {
  error "Bailing out!"
}

# }}}

# {{{  default settings

# settings/options
INPUT=""
OUTPUT="."
VERBOSE=0
VERBOSEOPT=""
IMPLODEDOPT=""
CONSOPT='-e'
JTOMOPT=""
JTOM=0
FOLDINGOPT=""
VISITABLEOPT=""
GENBOTTOMSORT=1
ONLYBOTTOM=0
NAME=""

# binaries
SDF2TOADT=${SDF2ADT}
ADTTOJAVA=${APIGEN}/bin/adt-to-java
CONCATADT=${APIGEN}/bin/concat-adt

# }}}

# {{{  handle command line options

if [ $# -eq 0 ]; then
  usage
  exit 1
fi

while [ $# -gt 0 ]
do
  case $1 in
    -b | --bottom)
      ONLYBOTTOM=1;;

    -f | --folding)
      FOLDINGOPT='-f';;

    -e | --expand-cons)
      CONSOPT='-e';;

    -r | --remove-cons)
      CONSOPT='-r';;

    -i | --input)
      shift; INPUT=$1 ;;

    -n | --name)
      shift; NAME=$1 ;;

    -o | --output)
      shift; OUTPUT=$1 ;;

    -p | --package)
      shift; PACKAGE="-p $1" ;;

    -t | --visitable)
      VISITABLEOPT='-t' ;;

    -j | --jtom)
      JTOMOPT='-j'
      JTOM=1 ;;

    -I | --imploded)
      IMPLODEDOPT='-I'
      GENBOTTOMSORT=0 ;;

    -v | --verbose)
      VERBOSE=1
      VERBOSEOPT='-v';;

    -h | --help)
      usage; exit 0 ;;

    *)
      error "unknown option: $1"
  esac
  shift
done

# }}}
# {{{ sanity checks and variable setup

if [ "a${INPUT}" = "a" ]; then
  error "no input file specified (use -i <file>)"
else
  require ${INPUT}
fi

BASE=`basename ${INPUT} .sdf`
BASE=`basename ${BASE} .def`

if [ "a${NAME}" = "a" ]; then
  NAME=${BASE}
fi

if [ "a${PACKAGE}" = "a" ]; then
  PACKAGEDECL=""
else
  PACKAGEDECL="package ${PACKAGE};"
fi

# }}}
# {{{  generate Java from SDF
info "Generating Java code in ${OUTPUT}/${PACKAGE} from ${INPUT}:"

if [ ${ONLYBOTTOM} -eq 0 ]; then
info "Generating ADT "
${SDF2TOADT} ${IMPLODEDOPT} ${CONSOPT} ${VERBOSEOPT} \
             -i ${INPUT} -o ${BASE}.adt || bail_out

info "Adding string support (?)"
${CONCATADT} -o ${BASE}.adt ${BASE}.adt ${PKGDATA}/string.adt

info "Generating java from ADT "
${ADTTOJAVA} ${FOLDINGOPT} ${JTOMOPT} ${VERBOSEOPT} ${VISITABLEOPT} \
             -i ${BASE}.adt -o ${OUTPUT} ${PACKAGE} -n ${NAME}
fi

if [ ${GENBOTTOMSORT} -gt 0 ]; then
  info "Overwriting CHARLIST_String.java"
  sed "s@__PACKAGE__@${PACKAGE}@g;\
       s@__NAME__@${NAME}@g;\
       s@__PACKAGEDECL__@${PACKAGEDECL}@g" \
       < ${PKGDATA}/CHARLIST_String.java.template \
       > ${OUTPUT}/CHARLIST_String.java
fi

# }}}
