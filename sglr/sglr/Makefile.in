# $Id$
# Directory: sglr/src

# Configure variable substitutions
PRODUCT		= @PRODUCT@
VERSION		= @VERSION@

@SET_MAKE@

srcdir		= @srcdir@
VPATH		= @srcdir@
top_srcdir	= @top_srcdir@
prefix		= @prefix@
exec_prefix	= @exec_prefix@
bindir		= $(exec_prefix)/bin
libdir		= $(exec_prefix)/lib
includedir	= $(prefix)/include
docdir		= $(top_srcdir)/docs

SHELL		= @SHELL@
CC		= @CC@
MAKE		= gmake
CFLAGS		= @CFLAGS@ ${XCFLAGS}
CPP		= @CPP@
CPPFLAGS	= @CPP@ ${XCPPFLAGS}
DEFS		= @DEFS@ ${XDEFS}
INCLUDES	= @INCLUDES@ ${XINCLUDES}
LIBS		= @LIBS@ ${XLIBS}
SOCKLIBS	= @SOCKLIBS@

INSTALL		= @INSTALL@
INSTALL_DATA	= @INSTALL_DATA@
INSTALL_PROG	= @INSTALL_PROG@
UNINSTALL	= @UNINSTALL@

TOOLBUS         = @TOOLBUS@


# The eXtra parts of some variables
XCFLAGS		=
XCPPFLAGS	=
XINCLUDES	= -I$(TOOLBUS)/include
XLIBS		= -L$(TOOLBUS)/lib $(SOCKLIBS) -lnsl -ltb


PROGS           = sglr
CSRC            = main.c getopt.c getopt1.c parse-table.c parser.c \
                  forest.c stack.c longest_match.c tree-to-dot.c
OBJ             = $(subst .c,.o,$(CSRC))

all:	$(PROGS)

install:	all
	@for PROG in $(PROGS);	\
	do \
		echo $@ $$PROG in $(bindir); \
		$(INSTALL_PROG) $$PROG $(bindir); \
	done

uninstall:
	@for PROG in $(PROGS);	\
	do \
		echo $@ $$PROG from $(bindir); \
		rm -f $(bindir)/$$PROG; \
	done

distclean realclean:	clean
	rm -f $(PROGS) longest_match

clean:
	rm -f core sglr.tif.c $(OBJ)


# Generic rules

%.o: %.c
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

%.tif.c: %.tifs
	ctif -tifs $< -tool $*

%.tifs: %.tb
	toolbus -gentifs $<


# Specific dependencies

sglr:	$(CSRC) $(OBJ)
	$(CC) $(LDFLAGS) $(OBJ) $(LIBS) -o $@

main.o:	sglr.tif.c

parse-table.o: parse-table.h

longest_match: longest_match.c
	$(CC) $(CFLAGS) $(INCLUDES) $(LDFLAGS) -DMAIN $^ $(LIBS) -o $@
