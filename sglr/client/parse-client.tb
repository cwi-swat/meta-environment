/*

    SGLR - the Scannerless Generalized LR parser.
    Copyright (C) 2000  Stichting Mathematisch Centrum, Amsterdam, The Netherlands.

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

*/
tool parse-client is { }

process PARSECLIENT(R : parse-client) is
let
  N : str,
  T : term
in
  printf("Parse-client connected.\n") .
  (
    rec-event(R, parsetext-asfix1(N?)) .
    snd-msg(parsetext-asfix1(N)) .
    rec-msg(result(T?)) .
    snd-ack-event(R, parsetext-asfix1(N, T))
  +
    rec-event(R, parsetext(N?)) .
    snd-msg(parsetext(N)) .
    rec-msg(result(T?)) .
    snd-ack-event(R, parsetext(N, T))
  ) .
  snd-terminate(R, "Bye!") .
  printf("Parse-client disconnected.\n")
endlet

process CONNECT-PARSECLIENT is
let
  R : parse-client,
  P : int
in
  ( rec-connect(R?) .
    create(PARSECLIENT(R), P?)
  ) * delta
endlet

toolbus(CONNECT-PARSECLIENT)
