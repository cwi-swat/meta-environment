definition

module Pico-Syntax
exports
lexical syntax
    "%%" ~[\n]* [\n]  -> LAYOUT
    [\ \t\n]          -> LAYOUT

  sorts ID
  lexical syntax
    [a-z] [a-z0-9]* -> ID
  sorts NAT-CON
  lexical syntax
    [0-9]+ -> NAT-CON
  sorts STR-CON
  lexical syntax
    "\"" ~[\"\n]* "\"" -> STR-CON
    "\"\"\""           -> STR-CON
  sorts EXP
  context-free syntax
    ID            -> EXP
    NAT-CON       -> EXP
    STR-CON       -> EXP
    "(" EXP ")"   -> EXP {bracket}
    EXP "+" EXP   -> EXP {left}
    EXP "-" EXP   -> EXP {left}
    EXP "||" EXP  -> EXP {left}
  context-free priorities
   { left : EXP "+" EXP -> EXP {left}
            EXP "-" EXP -> EXP {left} }
   non-assoc
   EXP "||" EXP -> EXP {left}

  sorts TYPE
  context-free syntax
    "natural"  -> TYPE
    "string"   -> TYPE

  sorts STATEMENT
  context-free syntax
    ID ":=" EXP                            -> STATEMENT
    "if" EXP "then" {STATEMENT ";"}*
             "else" {STATEMENT ";"}* "fi"  -> STATEMENT
    "while" EXP "do" {STATEMENT ";"}* "od" -> STATEMENT

  sorts PROGRAM DECLS IDTYPE
  context-free syntax
    "begin" DECLS {STATEMENT ";"}* "end" -> PROGRAM
    ID ":" TYPE -> IDTYPE
    "declare" {IDTYPE ","}* ";"   -> DECLS

module Main
imports Pico-Syntax
