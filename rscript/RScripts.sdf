module RScripts[Elem]

imports Relations[Elem]

exports
  sorts SCRIPT STAT VAR FROM TEXP EXP

  lexical syntax
     [\$]?[A-Za-z][A-Za-z0-9]*               -> VAR

  context-free syntax

     "true"                                  -> EXP
     "false"                                 -> EXP
     EXP "and" EXP                           -> EXP {left}
     EXP "or" EXP                            -> EXP {left}
     "not" EXP                               -> EXP

     EXP "==" EXP                            -> EXP {left}
     EXP "<=" EXP                            -> EXP {non-assoc}
     EXP "<" EXP                             -> EXP {non-assoc}
     EXP ">=" EXP                            -> EXP {non-assoc}
     EXP ">" EXP                             -> EXP {non-assoc}

%% Elementary values

     Elem                                    -> EXP
     "'" Elem                                -> EXP
     "'" Bag[[Elem]]                         -> EXP
     "'" Rel[[Elem]]                         -> EXP
     VAR                                     -> EXP
     "{" {EXP ","}* "}"                      -> EXP
     "<" EXP "," EXP ">"                     -> TEXP
     "{" {TEXP ","}* "}"                     -> EXP

%% Operators

     EXP "union" EXP                         -> EXP {left}
     EXP "inter" EXP                         -> EXP {left}
     EXP "\\" EXP                            -> EXP {left}
     EXP "o" EXP                             -> EXP {left}
     EXP "x" EXP                             -> EXP {left}
     EXP "." EXP                             -> EXP {left}
     EXP "+"                                 -> EXP
     EXP "*"                                 -> EXP
     EXP "until" "(" EXP "," EXP ")"         -> EXP

%% value formers

     "{" FROM "|" EXP "}"                    -> EXP
     "{" {FROM ","}+ "|" EXP "|" EXP "}"     -> EXP

     VAR "in" EXP                            -> FROM
     "<" VAR "," VAR ">" in EXP              -> FROM

%% functions

     VAR "(" EXP ")"                         -> EXP
     VAR "(" EXP "," EXP ")"                 -> EXP
     "(" EXP ")"                             -> EXP {bracket}

     "def" VAR "=" EXP                       -> STAT

     "fun" VAR "(" VAR ")" "=" EXP           -> STAT
     "fun" VAR "(" VAR "," VAR ")" "="  EXP  -> STAT

     STAT*                                   -> SCRIPT

  context-free priorities

     EXP "o" EXP -> EXP>
     EXP "x" EXP -> EXP >
     EXP "." EXP -> EXP >
     EXP "inter" EXP -> EXP >
     EXP "union" EXP -> EXP

%%     { EXP "<=" EXP -> EXP, 
%%       EXP "<" EXP -> EXP, 
%%       EXP ">=" EXP -> EXP, 
%%       EXP ">" EXP -> EXP
%%     } >
%%       EXP "==" EXP -> EXP     

     

     
