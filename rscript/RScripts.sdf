module RScripts[Elem]

imports Relations[Elem]

exports
  sorts SCRIPT STAT VAR FROM TEXP REXP

  lexical syntax
     [\$]?[A-Za-z][A-Za-z0-9\_]*             -> VAR

  context-free restrictions
     VAR -/- [A-Za-z0-9\_]

  context-free syntax

     "true"                                  -> REXP
     "false"                                 -> REXP
     REXP "and" REXP                         -> REXP {left}
     REXP "or" REXP                          -> REXP {left}
     "not" REXP                              -> REXP

     REXP "==" REXP                          -> REXP {left}
     REXP "<=" REXP                          -> REXP {non-assoc}
     REXP "<" REXP                           -> REXP {non-assoc}
     REXP ">=" REXP                          -> REXP {non-assoc}
     REXP ">" REXP                           -> REXP {non-assoc}

%% Elementary values

%%     Elem                                  -> REXP
     "'" Elem                                -> REXP
     "'" Bag[[Elem]]                         -> REXP
     "'" Rel[[Elem]]                         -> REXP
     VAR                                     -> REXP
     "{" {REXP ","}* "}"                      -> REXP
     "<" REXP "," REXP ">"                     -> TEXP
     "{" {TEXP ","}* "}"                     -> REXP
     TEXP                                    -> REXP

%% Operators

     REXP "union" REXP                         -> REXP {left}
     REXP "inter" REXP                         -> REXP {left}
     REXP "\\" REXP                            -> REXP {left}
     REXP "o" REXP                             -> REXP {left}
     REXP "x" REXP                             -> REXP {left}
     REXP "." REXP                             -> REXP {left}
     REXP "+"                                 -> REXP
     REXP "*"                                 -> REXP

%% value formers

     "{" FROM "|" REXP "}"                    -> REXP
     "{" {FROM ","}+ "|" REXP "|" REXP "}"     -> REXP

     VAR "in" REXP                            -> FROM
     "<" VAR "," VAR ">" in REXP              -> FROM

%% functions

     VAR "(" REXP ")"                         -> REXP {avoid}
     VAR "(" REXP "," REXP ")"                 -> REXP {avoid}
     VAR "(" REXP "," REXP "," REXP")"          -> REXP {avoid}
     "(" REXP ")"                             -> REXP {bracket}

     "def" VAR "=" REXP                       -> STAT

     "fun" VAR "(" VAR ")" "=" REXP           -> STAT
     "fun" VAR "(" VAR "," VAR ")" "="  REXP  -> STAT
     "fun" VAR "(" VAR "," VAR "," VAR ")" "="  REXP  -> STAT

     STAT*                                   -> SCRIPT

  context-free priorities

     REXP "o" REXP -> REXP>
     REXP "x" REXP -> REXP >
     REXP "." REXP -> REXP >
     REXP "inter" REXP -> REXP >
     REXP "union" REXP -> REXP

%%     { REXP "<=" REXP -> REXP, 
%%       REXP "<" REXP -> REXP, 
%%       REXP ">=" REXP -> REXP, 
%%       REXP ">" REXP -> REXP
%%     } >
%%       REXP "==" REXP -> REXP     

     

     
