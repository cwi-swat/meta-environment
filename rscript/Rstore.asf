equations

%% ---- Get value of a variable

[VL1]	value($Var, rstore(<$Var, $Val>, $VPair*)) = $Val
[VL2]	$Var != $Var' ===> value($Var, rstore(<$Var', $Val>, $VPair*)) = value($Var, rstore($VPair*))

%% Added by Mark van den Brand on 9th of July 2003
[VL3]   value($Var, rstore()) = *undefined*

%% ---- Assign value to variable

[ASG1]  assign($Var, $Val, rstore($VPair*1, <$Var, $Val'>, $VPair*2)) = rstore($VPair*1, <$Var, $Val>, $VPair*2)
	
[default-ASG1]	
	assign($Var, $Val, rstore($VPair*)) = rstore(<$Var, $Val>, $VPair*)

%% ---- Assign when undefined

[AWU1]  assign-when-undef($Var, $Val, rstore($VPair*1, <$Var, $Val'>, $VPair*2)) = rstore($VPair*1, <$Var, $Val'>, $VPair*2)
	

[default-AWU2]	
	assign-when-undef($Var, $Val, rstore($VPair*)) = rstore(<$Var, $Val>, $VPair*)

%% Add elem to bag

[AE1]	$Val = value($Var, $Rstore),
	$Val != *undefined*
	=================================================================
	add-elem($Var, $Elem, $Rstore) = assign($Var, xappend($Val, $Elem), $Rstore)

[default-AE]
	add-elem($Var, $Elem, $Rstore) = assign($Var, {$Elem}, $Rstore)

%% ---- Add tuple to a relation

[AT1]	add-tuple($Var, <$Elem1, $Elem2>, rstore(<$Var, $Val>, $VPair*)) = 
	rstore(<$Var, xunion({<$Elem1, $Elem2>}, $Val)>, $VPair*)

[AT2]	$Var != $Var', 
	rstore($VPair*') = add-tuple($Var, <$Elem1, $Elem2>, rstore($VPair*))
	===============================================================
	add-tuple($Var, <$Elem1, $Elem2>, rstore(<$Var', $Val>, $VPair*)) = rstore(<$Var', $Val>, $VPair*')

[AT3]	add-tuple($Var, <$Elem1, $Elem2>, rstore()) = rstore(< $Var, {<$Elem1, $Elem2>} >)

%% ---- Add tuples to a relation

[ATS1]	add-tuples($Var, $Rel, rstore(<$Var, $Val>, $VPair*)) = rstore(<$Var, xunion($Rel, $Val)>, $VPair*)

[ATS2]	$Var != $Var', 
	rstore($VPair*') = add-tuples($Var, $Rel, rstore($VPair*))
	===============================================================
	add-tuples($Var, $Rel, rstore(<$Var', $Val>, $VPair*)) = rstore(<$Var', $Val>, $VPair*')

[ATS33]	add-tuples($Var, $Rel, rstore()) = rstore(< $Var, $Rel >)

[UN2]	xunion($Bag1, $Bag2)	= union($Bag1, $Bag2)
[UN3]	xunion($Elem, $Bag) 	= union({$Elem}, $Bag)
[UN4]	xunion($Bag, $Elem) 	= union($Bag, {$Elem})
[UN5]	xunion($Elem1, $Elem2)	= union({$Elem1}, {$Elem2})

[AP1]	xappend($Elem, *undefined*) = $Elem
[AP2]	xappend($Bag, $Elem) = union2($Bag, $Elem)
[AP3]	xappend($Bag1, $Bag2) = union($Bag1, $Bag2)

%% ---- Convert RVAR to String

[rv2s] 	rvar2str(rvar($Char*)) = strcon(""" $Char* """)

%% --- filter RSTORE

[fr1]	$Bag != {},
	in(rvar2str($Var), $Bag) = false
	=========================================	
	filter(rstore($VPair*1, <$Var, $Val>, $VPair*2), $Bag) = 
	filter(rstore($VPair*1, $VPair*2), $Bag)

[default-fr1]	filter($Rstore, $Bag) = $Rstore

%% ---- if on RVALUEs

[if1]	if true then $Val1 else $Val2 fi  = $Val1
[if2]	if false then $Val1 else $Val2 fi = $Val2

%% ---- Import an RSF file

[r2s] 	rsfname2str(rsfname($Char*)) = strcon(""" $Char* """)

[r2rv] 	rsfname2rvar(rsfname($Char*)) = rvar($Char*)

[imp1]	import($RsfTuple*) = import1($RsfTuple*, rstore())

[imp11]	$Var = rsfname2rvar($RsfName1),
	$Elem1 =  rsfname2str($RsfName2),
	$Elem2 =  rsfname2str($RsfName3),
	$Rstore' = add-tuple($Var, <$Elem1, $Elem2>, $Rstore)
	=============================================================
	import1($RsfName1 $RsfName2 $RsfName3; $RsfTuple*, $Rstore) =
	import1($RsfTuple*, $Rstore')

[imp12]	import1( , $Rstore) = $Rstore

%% ----- Merge two Rstores

[merge-rstores-0]
  merge-rstores(rstore(), $Rstore) = $Rstore

[merge-rstores-1]
  merge-rstores($Rstore, rstore()) = $Rstore

[merge-rstores-2]
  merge-rstores(rstore(<$Var, {$Elem*1}>, $VPair*),
                rstore($VPair*1, <$Var, {$Elem*2}>, $VPair*2))
  = merge-rstores(rstore($VPair*),
                  rstore($VPair*1, <$Var,{$Elem*1,$Elem*2}>, $VPair*2))

[default-merge-rstores]
  merge-rstores(rstore(<$Var, $Val>, $VPair*), rstore($VPair*1))
    = merge-rstores(rstore($VPair*), rstore(<$Var, $Val>, $VPair*1))

[merge-3]
  merge-rstores($Rstore1, $Rstore2, $Rstore3)
  = merge-rstores(merge-rstores($Rstore1, $Rstore2), $Rstore3)

[merge-4]
  merge-rstores($Rstore1, $Rstore2, $Rstore3, $Rstore4)
  = merge-rstores(merge-rstores($Rstore1, $Rstore2),
                  merge-rstores($Rstore3, $Rstore4))

[merge-5]
  merge-rstores($Rstore1, $Rstore2, $Rstore3, $Rstore4, $Rstore5)
  = merge-rstores(
      merge-rstores($Rstore1, $Rstore2, $Rstore3),
      merge-rstores($Rstore4, $Rstore5))

[merge-6]
  merge-rstores($Rstore1, $Rstore2, $Rstore3, $Rstore4, $Rstore5, $Rstore6)
  = merge-rstores(
        merge-rstores($Rstore1, $Rstore2, $Rstore3),
        merge-rstores($Rstore4, $Rstore5, $Rstore6))

[merge-7]
  merge-rstores($Rstore1, $Rstore2, $Rstore3, $Rstore4, $Rstore5, $Rstore6, $Rstore7)
  = merge-rstores(
        merge-rstores($Rstore1, $Rstore2, $Rstore3, $Rstore4),
        merge-rstores($Rstore5, $Rstore6, $Rstore7))

[merge-8]
  merge-rstores($Rstore1, $Rstore2, $Rstore3, $Rstore4, $Rstore5, $Rstore6, $Rstore7, $Rstore8)
  = merge-rstores(merge-rstores($Rstore1, $Rstore2, $Rstore3, $Rstore4),
                  merge-rstores($Rstore5, $Rstore6, $Rstore7, $Rstore8))
