%% begin declare x : natural, y : natural, natural z;
%%      [s1] x := 3;
%%      if [s2] 3 then
%%         [s3] z := y + x
%%      else
%%         [s4] x := 4
%%      fi
%%      [s5] y := z
%%
%% end

{<a,b>} union {<c,d>}

%%eval(

%%def DEFS    = '{<s1, x>, <s3, z>, <s4, x>, <s5, y>}
%%def ISCON   = '{<s1, x>}
%%def USES    = '{<s3, y>, <s3, x>, <s5, z>}
%%def PRED    = '{<s0, s1>,<s1, s2>, <s2, s3>, <s2, s4>, <s3, s5>, <s4, s5>}

%%def  REL1    = {<$u, $x> in USES | $x == 'x }

%%def  Bag1    =  {$u in '{a, b, c} | true | {$u}}

%%def UNINITIALIZED = {<U, X> in USES | elem('s0, {U} until(DEFS.X union '{s0}, inv(PRED)))}

%%def Bag1     = '{a, b, c}
%%def Bag2     = '{d, e, f}
%%def Bag3     = id(Bag1)

%%def Tst      = {$x in Bag1 | true }
%%def REL      = {$x in Bag1, $y in Bag2 | true | {<$x, $y>}}

%%fun f(Bag)   = id(Bag)

%%def Bag4      = f(Bag1)
%%)

