
int ROOT = 0

rel[str,int] DEFS  = {<"x", 1>, <"z", 3>, <"x", 4>, <"y", 5>}

rel[str,int] USES    = {<"y", 3>, <"x", 3>, <"z", 5>}

rel[int,int]  PRED   = {<0, 1>,<1, 2>, <2, 3>, <2, 4>, <3, 5>, <4, 5>}

rel[str,int] D0 = {<"y",3>}
rel[str,int] D1 = (D0 o PRED) \ DEFS

rel[int,int] D4 = reachX({3}, "y" . DEFS, PRED)

bool  reaches_root(rel[str,int] R) = 0 in range(R)

rel[str,int]  UN = { <V, N> : <V, N> in USES | <ROOT, N> in reachX({0}, V . DEFS, PRED) }

bool tst(int N) = true

rel[str,int]  UN1 = { <V, N> : <V, N> in USES |  <ROOT, N> in carrierX(PRED, V .  DEFS)+ }

<T1,T2> swap(<T2,T1> P) = <second(P), first(P)>

bag[str] Bag1     = {"a", "b", "c"}
bag[str] Bag2     = {"d", "e", "f"}
rel[str,int] Rel1     = {<"a", 1>, <"b", 2>, <"c", 3>}
rel[int,int] Rel2     = {<1, 10>, <3, 30>}

<str,int> P1 = swap(<0,"a">)

rel[int,str] SRel1 = {swap(<V,N>) : <V,N> in Rel1  }

rel[int,bag[int]] VERT = { <V, {1,2,3}> :  V in {1,2,3} }


bag[int] BBB = 2 . {<1,10>, <2, 20>, <3,30>}

bag[str] Tst      = {X :  X in Bag1  }
rel[str,str] REL   = {<X, Y> : X in Bag1, Y in Bag2}

rel[X,Y] finv(rel[Y,X] REL) = {<Y, X> : <X, Y> in REL }
bag[X] fdom(rel[X,Y] REL) = {X : <X, Y> in REL }

rel[X,Y] pair(bag[X] R1, bag[Y] R2) = { <X, Y> : X in R1, Y in R2 }

rel[A,C] comp(rel[A,B] R1, rel[B,C] R2) =
    { <X, T> : <X, Y> in R1, <S, T> in R2 | Y == S }

rel[int,str] bag5     = inv(DEFS)
bag[str] bag6     = fdom(DEFS)

bool B1 = Bag1 < Bag2
bool B2 = Bag1 <= Bag2
bool B3 = Bag1 == Bag2
bool B4 = Bag1 >= Bag2
bool B5 = Bag1 > Bag2

bool BB1 = Rel1 < Rel1
bool B2B = Rel1 <= Rel1
bool BB3 = Rel1 == Rel1
bool BB4 = Rel1 >= Rel1
bool BB5 = Rel1 > Rel1

bool C = Bag1 x Bag2 <= Bag2 x Bag1

rel[str,str] C2 = (Bag1 x Bag2)+

%%rel[int,int] C3 = SUCC *

int mysize(bag[int] B) = # B
