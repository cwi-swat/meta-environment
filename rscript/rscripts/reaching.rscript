
%% Reaching definitions, example ASU, p626

rel[int,int] PRED = { <1,2>, <2,3>, <3,4>, <4,5>, <5,6>, <5,7>, <6,7>, <7,4>}

rel[int, str] DEFS = { <1, "i">, <2, "j">, <3, "a">, <4, "i">, <5, "j">, <6, "a">, <7, "i">}
rel[int, str] USES = { <1, "m">, <2, "n">, <3, "u1">, <4, "i">, <5, "j">, <6, "u2">, <7, "u3">}

rel[int, <int, str>] DEF =   {<S, <S, V>> | <int S, str V> : DEFS}
rel[int, <int, str>] USE =   {<S, <S, V>> | <int S, str V> : USES}

rel[int, <int, str>] KILL = {<S1, <S2, V2>> |  <int S1, str V1> : DEFS, <int
S2, str V2> : DEFS, V1 == V2, S1 != S2}

assert "kill": KILL ==  {<1, <4, "i">>, <1, <7, "i">>, <2, <5, "j">>, <3, <6, "a">>, 
                         <4, <1, "i">>, <4, <7, "i">>, <5, <2, "j">>, <6, <3, "a">>, 
                         <7, <1, "i">>, <7, <4, "i">>}

bag[int] STATEMENTS = carrier(PRED)
rel[int,int] PRED-OF = inv(PRED)

%% Reaching definitions

equations
  initial
	rel[int,<int,str>] IN init {}
	rel[int,<int,str>] OUT init DEF
  satisfy
	IN  =  {<S, OP> | int S : STATEMENTS, int P : PRED-OF[S], <int,str> OP : OUT[P]}
	OUT =  {<S, OS> | int S : STATEMENTS, <int,str> OS : DEF[S] union (IN[S] \ KILL[S])}

end equations

assert "IN": IN ==  {<2, <1, "i">>, <3, <2, "j">>, <3, <1, "i">>, <4, <3, "a">>, 
                     <4, <2, "j">>, <4, <1, "i">>, <4, <7, "i">>, <4, <5, "j">>, 
                     <4, <6, "a">>, <5, <4, "i">>, <5, <3, "a">>, <5, <2, "j">>, 
                     <5, <5, "j">>, <5, <6, "a">>, <6, <5, "j">>, <6, <4, "i">>, 
                     <6, <3, "a">>, <6, <6, "a">>, <7, <5, "j">>, <7, <4, "i">>, 
                     <7, <3, "a">>, <7, <6, "a">>}

assert "OUT": OUT == {<1, <1, "i">>, <2, <2, "j">>, <2, <1, "i">>, <3, <3, "a">>,
                      <3, <2, "j">>, <3, <1, "i">>, <4, <4, "i">>, <4, <3, "a">>,
                      <4, <2, "j">>, <4, <5, "j">>, <4, <6, "a">>, <5, <5, "j">>,
                      <5, <4, "i">>, <5, <3, "a">>, <5, <6, "a">>, <6, <6, "a">>,
                      <6, <5, "j">>, <6, <4, "i">>, <7, <7, "i">>, <7, <5, "j">>,
                      <7, <3, "a">>, <7, <6, "a">>}

%% Live variables

equations
  initial
	rel[int,<int,str>] LIN init {}
	rel[int,<int,str>] LOUT init DEF
  satisfy
	LIN  =  { < S, I> | int S : STATEMENTS,  <int,str> I : USE[S] union (LOUT[S] \ DEF[S])}
	LOUT =  { < S, O> | int S : STATEMENTS,  <int,str> O : LIN[S] }
end equations

assert "LIN": LIN == {<1, <1, "m">>, <2, <2, "n">>, <3, <3, "u1">>, <4, <4, "i">>, 
                      <5, <5, "j">>, <6, <6, "u2">>, <7, <7, "u3">>}

assert "LOUT": LOUT ==  {<1, <1, "m">>, <2, <2, "n">>, <3, <3, "u1">>, 
                         <4, <4, "i">>, <5, <5, "j">>, <6, <6, "u2">>, <7, <7, "u3">>}

