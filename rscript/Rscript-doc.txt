Built-in operators
==================

------------------------------------------------------------------

Boolean operators: and, or, not

------------------------------------------------------------------
Element of Bag: in, notin

------------------------------------------------------------------
Element of Relation: in, notin

------------------------------------------------------------------
Comparison on Bags: ==, !=, <=, <, >, >= 

------------------------------------------------------------------
Comparison on Relations: ==, !=, <=, <, >, >= 

------------------------------------------------------------------
Operations on Bags : union, inter, \

union:	   union
inter:	   intersection
\:	   difference

------------------------------------------------------------------
Operations on Relations : union, inter, \, o, x, ., +, *

union:	   union
inter:	   intersection
\:	   difference

o:	   composition
Def:	   rel[T1,T3] o(rel[T1,T2] R1, rel[T2,T3] R2) =
		      {<v, y> : <v, w> in R1, <x, y> in R2 | w == x }

x:	   carthesian product
Def:	   rel[T1,T2] x(bag[T1] B1, bag[T2] B2) =
		      {<x, y> : x in B1, y in B2 }

.:	   left or right image

Def:	   bag[T2] .(T1 E, rel[T1,T2] R) = { W : <V, W> in R | V == E }
	   bag[T2] .(bag[T1] B, rel[T1,T2] R) = { W : <V, W> in R | V in B}

	   bag[T1] .(rel[T1,T2] R, T2 E) = { V : <V, W> in R | W == E }
	   bag[T1] .(rel[T1,T2] R, bag[T2] B) = { V : <V, W> in R |  W in B }

+:	   transitive closure
*:	   reflexive transitive closure


Built-in Functions
==================

------------------------------------------------------------------
Identity:

Def:	rel[T,T] id(bag[T] B) = { <X, X> : X in B }

Ex:	id({1,2,3}) = {<1,1>, <2,2>, <3,3>}

------------------------------------------------------------------
Domain:

Def:	bag[T1] domain (rel[T1,T2] R) = { X : <X, Y> in R }
Ex:	domain({<1,10>, <2,20>}) = {1, 2}
------------------------------------------------------------------
Range:

Def:	bag[T2] range (rel[T1,T2] R) = { Y : <X, Y> in R }
Ex:	range({<1,10>, <2,20>}) = {10, 20}
------------------------------------------------------------------
Carrier:

Def:	bag[T]  carrier (rel[T,T] R) = domain(R) union range(R)
Ex:	carrier({<1,10>, <2,20>}) = {1, 10, 2, 20}
------------------------------------------------------------------
Top:

Def:	bag[T] top(rel{T, T] R) = domain(R) \ range(R)
Ex:	
------------------------------------------------------------------
Bottom:

Def:	bag[T] bottom(rel[T,T] R) = range(R) \ domain(R)
Ex:
------------------------------------------------------------------
Inverse:
Def:	rel[T2,T1] inv (rel[T1,T2] R) = { <Y, X> : <X, Y> in R }
Ex:	inv({<1,10>, <2,20>}) = {<10,1>,<20,2>}
------------------------------------------------------------------
Complement:

Def:	rel[T1, T2] compl(rel[T1,T2] R) = (domain(R) x range(R)) \ R
Ex:
------------------------------------------------------------------
Domain Restriction

Def:   rel[T1,T2] domR (rel[T1,T2] R, Bag[T1] B) = 
		  { <X, Y> : <X, Y> in R, X in B }

------------------------------------------------------------------
Range Restriction:

Def:  rel[T1,T2] ranR (rel[T1,T2] R, Bag[T2] B) = 
		 { <X, Y> : <X, Y> in R | Y in B  }

------------------------------------------------------------------
Carrier Restriction:

Def:	rel[T,T] carR (rel[T,2] R, Bag[T] B) = 
		 { <X, Y> : <X, Y> in R | X in B and Y in B }
Ex:
------------------------------------------------------------------
Domain Exclusion:

Def:   rel[T1,T2] domX (rel[T1,T2] R, Bag[T1] B) = 
		  { <X, Y> : <X, Y> in R | X notin B }
Ex:
------------------------------------------------------------------
Range Exclusion:

Def:  rel[T1,T2] ranR (rel[T1,T2] R, Bag[T2] B) = 
	   { <X, Y> : <X, Y> in R | Y notin B }
Ex:
------------------------------------------------------------------
Carrier Exclusion:

rel[T,T] carX (rel[T,T] R, Bag[T] B) = 
	   { <X, Y> : <X, Y> in R | X notin B or Y notin B }
------------------------------------------------------------------
First of Tuple:

Def:  T1 fst(<T1, T2> P) = T1
Ex:   
------------------------------------------------------------------
Second of Tuple:

Def:   T2 sec(<T1, T2> P) = T2
Ex:    
------------------------------------------------------------------
Reach Exclusion:

Def:  rel[T,T] reachX( bag[T] S, bag[T] E, rel[T,T] R) =
	       domR(R, S) o carX(R, E)+
------------------------------------------------------------------
Reach Restriction:

Def:  rel[T,T] reachR( bag[T] S, bag[T] E, rel[T,T] R) =
	       domR(R, S) o carR(R, E)+
------------------------------------------------------------------