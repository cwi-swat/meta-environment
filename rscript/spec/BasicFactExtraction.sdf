module BasicFactExtraction[X]

imports Rstore
imports utilities/Lifting[X]
imports utilities/Parsing[X]

exports

context-free syntax

extract-basic-facts(X) -> RSTORE

hiddens

context-free syntax

extract-facts(Tree, RSTORE) -> RSTORE {traversal(accu, bottom-up, continue)}
add-constructor(Location, Attributes, RSTORE) -> RSTORE
add-children(Location, {Tree ","}*, RSTORE) -> RSTORE
posinfo-to-location(ATerm)  -> Location
store-lexical-value(Location, {Symbol ","}*, {Tree ","}*, RSTORE) -> RSTORE

variables

"RSTORE"[0-9\']* -> RSTORE
"X"[0-9\']* -> X
"ATerm"[0-9\']* -> ATerm
"Literal"[0-9\']* -> Literal
"Tree"[0-9\']* -> Tree
"Tree*"[0-9\']* -> {Tree ","}*
"Production"[0-9\']* -> Production
"Symbols"[0-9\']* -> Symbols
"Symbol"[0-9\']* -> Symbol
"Symbol*"[0-9\']* -> {Symbol ","}*
"Location"[0-9\']* -> Location
"Area"[0-9\']* -> Area
"Char*"[0-9\']* -> CHAR*
"Attributes"[0-9\']* -> Attributes
"Ann"[0-9\']* -> Ann
"QLiteral"[0-9\']* -> QLiteral
"ATerm*"[0-9\']* -> {ATerm ","}*
"StrCon"[0-9\']* -> StrCon
"N"[0-9\']* -> NatCon
"Attr*"[0-9\']* -> {Attr ","}*
"String"[0-9\']* -> String