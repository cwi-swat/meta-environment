module relation-calculus/FastBags[Elem]

exports 
imports basic/Booleans
imports basic/Integers

  sorts Bag[[Elem]] Color Elem # Integer IBag[[Elem]]

  context-free syntax
	Elem "<" Elem						-> Boolean
	Elem ">" Elem						-> Boolean

context-free syntax
	"red"							-> Color
	"black"							-> Color

   	"{" {Elem ","}* "}"                   			-> Bag[[Elem]] {constructor}

   	"null"							-> Bag[[Elem]] {prefer}
   	bag(Color, Bag[[Elem]], Elem, Integer, Bag[[Elem]]) 	-> Bag[[Elem]]

   	balance(Bag[[Elem]], Elem, Integer, Bag[[Elem]]) -> Bag[[Elem]]
	blacken(Bag[[Elem]])				 	-> Bag[[Elem]]
	is-black(Bag[[Elem]])					-> Boolean

	max(Integer, Integer)					-> Integer
	min(Integer, Integer)					-> Integer
	
   	append(Bag[[Elem]], Bag[[Elem]])			-> Bag[[Elem]]
   	is-empty(Bag[[Elem]])					-> Boolean
   	lookup(Elem, Bag[[Elem]])				-> Integer

   	ins(Elem, Integer, Bag[[Elem]])                		-> Bag[[Elem]]
   	insert(Elem, Integer, Bag[[Elem]])            		-> Bag[[Elem]]

   	delete(Elem, Integer, Bag[[Elem]])                    	-> Bag[[Elem]]
   	del(Elem, Integer, Bag[[Elem]])                    	-> Bag[[Elem]]

	delFromLeft(Elem, Integer, Bag[[Elem]], Elem, Integer, Bag[[Elem]])	-> Bag[[Elem]]
	balLeft(Bag[[Elem]], Elem, Integer, Bag[[Elem]])	-> Bag[[Elem]]

	delFromRight(Elem, Integer, Bag[[Elem]], Elem, Integer, Bag[[Elem]])	-> Bag[[Elem]]
	balRight(Bag[[Elem]], Elem, Integer, Bag[[Elem]])	-> Bag[[Elem]]

	sub1(Bag[[Elem]])					-> Bag[[Elem]]

	mk-iterator(Bag[[Elem]])				-> IBag[[Elem]]
	Bag[[Elem]]						-> IBag[[Elem]]
	iterator(Bag[[Elem]], IBag[[Elem]])			-> IBag[[Elem]]

	is-empty-iter(IBag[[Elem]])				-> Boolean

   	head(IBag[[Elem]])					-> Elem # Integer
   	tail(IBag[[Elem]])					-> IBag[[Elem]]

   intern(Bag[[Elem]])				-> Bag[[Elem]]
   extern(Bag[[Elem]])				-> Bag[[Elem]]

   equal(Bag[[Elem]], Bag[[Elem]])           	-> Boolean
   subset(IBag[[Elem]], Bag[[Elem]])          	-> Boolean
   strict-subset(Bag[[Elem]], Bag[[Elem]])   	-> Boolean
   superset(Bag[[Elem]], Bag[[Elem]])        	-> Boolean
   strict-superset(Bag[[Elem]], Bag[[Elem]])	-> Boolean

   union1(Elem, Bag[[Elem]])			-> Bag[[Elem]]
   union2(Bag[[Elem]], Elem)			-> Bag[[Elem]]
   union(IBag[[Elem]], Bag[[Elem]])           	-> Bag[[Elem]]
   inter(IBag[[Elem]], Bag[[Elem]])          	-> Bag[[Elem]]
   diff(IBag[[Elem]], Bag[[Elem]])            	-> Bag[[Elem]]

   size(Bag[[Elem]])                         	-> Integer
   in(Elem, Bag[[Elem]])                   	-> Boolean

   "if" Boolean "then" Bag[[Elem]] "else" Bag[[Elem]] "fi" 
                                           	-> Bag[[Elem]]

  "if" Boolean "then" Boolean "else" Boolean "fi" 
                                           	-> Boolean

hiddens
  imports basic/Comments

  variables
    "$Bag" [0-9\']*           -> Bag[[Elem]]
    "$Elem" [0-9\']*          -> Elem
    "$Elem*" [0-9\']*         -> { Elem ","}*
    "$Elem+" [0-9\']*         -> { Elem ","}+
    "$N" [0-9\']*			-> Integer
    "$H" [0-9\']*			-> Integer

    "$Bool" [0-9\']*		-> Boolean
    "$C" [0-9\']*		-> Color

	"$Iter" [0-9\']*		-> IBag[[Elem]]
	"$IBag" [0-9\']*		-> IBag[[Elem]]
