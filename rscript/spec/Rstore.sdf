module Rstore

imports Rscript RSF Rviz RscriptCalculator

exports 
  sorts RVALUE RSTORE

  context-free start-symbols RSTORE

  context-free syntax
%% The values that a variable in the RSTORE may have

        Elem                          			-> RVALUE
        "*undefined*"                     		-> RVALUE
         < {RVAR ","}+,  REXP>            		-> RVALUE

        "if" Boolean "then" RVALUE "else" RVALUE "fi"   -> RVALUE

	Summary						-> RVALUE

%% The RSTORE itself, maps RVARs to RVALUEs

       "rstore" "(" {  <RVAR, REXPTYPE, RVALUE>  ","}* ")"	-> RSTORE {prefer}
        assign(RVAR, RVALUE, RSTORE)				-> RSTORE
        assign(RVAR, REXPTYPE, RVALUE, RSTORE)			-> RSTORE
	assign-when-undef(RVAR, REXPTYPE, RVALUE, RSTORE)	-> RSTORE
        value(RVAR, RSTORE)					-> RVALUE

%% Extension functions on RSTOREs intended for fact extraction tools

	add-elem(RVAR, Elem, RSTORE)			-> RSTORE
	add-tuple(RVAR, Tuple, RSTORE)  		-> RSTORE
	add-tuples(RVAR, Bag[[Elem]], RSTORE)		-> RSTORE

	filter(RSTORE, Bag[[Elem]])			-> RSTORE
	rvar2str(RVAR)					-> String

	"[|" RSTAT* "|]"				-> RSTORE
	"[|" RSTAT* "|]" "yield" RVAR			-> RVALUE
        "[|" REXP "|]"                                  -> RVALUE

%% Import a Rigi RSF file
	import(RSFFILE)					-> RSTORE
	import1(RSFFILE, RSTORE)			-> RSTORE
	rsfname2rvar(RSFNAME)				-> RVAR
	rsfname2str(RSFNAME)				-> StrCon

%% Export an RVIZ file
	export-rviz(RSTORE)				-> RVIZ
	export(RSTORE)					-> VDATA*
	export-pair(RVAR, REXPTYPE, RVALUE)		-> VDATA*
	VDATA* "++" VDATA*				-> VDATA*
	"export-pair"					-> RVAR {reject}

exports
  context-free syntax
    zip-rstores(RSTORE, RSTORE) -> RSTORE
    merge-rstores(RSTORE) -> RSTORE
    merge-rstores(RSTORE, RSTORE) -> RSTORE
    merge-rstores(RSTORE, RSTORE, RSTORE) -> RSTORE
    merge-rstores(RSTORE, RSTORE, RSTORE, RSTORE) -> RSTORE
    merge-rstores(RSTORE, RSTORE, RSTORE, RSTORE, RSTORE) -> RSTORE
    merge-rstores(RSTORE, RSTORE, RSTORE, RSTORE, RSTORE, RSTORE) -> RSTORE
    merge-rstores(RSTORE, RSTORE, RSTORE, RSTORE, RSTORE, RSTORE, RSTORE) -> RSTORE
    merge-rstores(RSTORE, RSTORE, RSTORE, RSTORE, RSTORE, RSTORE, RSTORE, RSTORE) -> RSTORE

hiddens
  imports basic/Comments

  context-free syntax
	xunion(RVALUE, RVALUE)	       -> Elem
	xappend(RVALUE, RVALUE)	       -> Elem
  variables
	"$Rstore" [0-9\']*             -> RSTORE
        "$Val" [0-9\']*                -> RVALUE
        "$VPair*" [0-9\']*             -> { <RVAR, REXPTYPE, RVALUE> ","}*
        "$String" [0-9\']*             -> String
        "$StrCon" [0-9\']*             -> StrCon
        "$Area" [0-9\']*	       -> Area
        "$Loc" [0-9\']*		       -> Location
        "$Tuple" [0-9\']*	       -> Tuple
        "$Tuple*" [0-9\']*	       -> {Tuple ","}*

        "$Type" [0-9\']*	       -> REXPTYPE

         "$Vdata*" [0-9\']*	       -> VDATA*
	
        "$Stat*" [0-9\']*              -> RSTAT*
	"$Exp" [0-9\']*		       -> REXP	

        "$Var" [0-9\']*                -> RVAR
        "$Var*" [0-9\']*               -> {RVAR ","}*
        "$Var+" [0-9\']*               -> {RVAR ","}+


	"$Elem"   [0-9\']*             -> Elem
        "$Elem*"  [0-9\']*             -> {Elem ","}*
        "$Elem+"  [0-9\']*             -> {Elem ","}+
	"$Bag" [0-9\']*		       -> Bag[[Elem]]
	"$Rel" [0-9\']*		       -> Bag[[Elem]]

	"$Char*" [0-9\']*	       -> CHAR*

	"$Summary"  [0-9\']*	       -> Summary
	
	"$RsfName" [0-9\']*		-> RSFNAME

	"$RsfTuple" [0-9\']*		-> RSFTUPLE
	"$RsfTuple*" [0-9\']*		-> RSFTUPLE*
