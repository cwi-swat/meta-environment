equations

[main]
Bytes := yield(Tree, bytes())
===>
tree-to-string(Tree) = bytes-to-string(reverse(Bytes))

[character-1]
bytes(Char) := decimal-to-char(N)
===>
yield(N, bytes(Char*)) = bytes(Char Char*)

[literal-2]
yield(lit(qliteral(Char*1)), bytes(Char*2)) = bytes(Char*3 Char*2)
when
  bytes(Char*3) := reverse(bytes(Char*1))

equations

[] reverse(Bytes) = do-reverse(Bytes)

[] do-reverse(bytes()) = bytes()
[] do-reverse(bytes(Char)) = bytes(Char)
[] do-reverse(bytes(Char1 Char* Char2)) =
   bytes(Char2 Char*2 Char1) 
   when bytes(Char*2) := do-reverse(bytes(Char*))

equations


[] decimal-to-char(1) = bytes("")
[] decimal-to-char(2) = bytes("")
[] decimal-to-char(3) = bytes("")
[] decimal-to-char(4) = bytes("")
[] decimal-to-char(5) = bytes("")
[] decimal-to-char(6) = bytes("")
[] decimal-to-char(7) = bytes("")
[] decimal-to-char(8) = bytes("")
[] decimal-to-char(9) = bytes("	")
[] decimal-to-char(10) = bytes("
")
[] decimal-to-char(11) = bytes("")
[] decimal-to-char(12) = bytes("")
[] decimal-to-char(13) = bytes("")
[] decimal-to-char(14) = bytes("")
[] decimal-to-char(15) = bytes("")
[] decimal-to-char(16) = bytes("")
[] decimal-to-char(17) = bytes("")
[] decimal-to-char(18) = bytes("")
[] decimal-to-char(19) = bytes("")
[] decimal-to-char(20) = bytes("")
[] decimal-to-char(21) = bytes("")
[] decimal-to-char(22) = bytes("")
[] decimal-to-char(23) = bytes("")
[] decimal-to-char(24) = bytes("")
[] decimal-to-char(25) = bytes("")
[] decimal-to-char(26) = bytes("")
[] decimal-to-char(27) = bytes("")
[] decimal-to-char(28) = bytes("")
[] decimal-to-char(29) = bytes("")
[] decimal-to-char(30) = bytes("")
[] decimal-to-char(31) = bytes("")
[] decimal-to-char(32) = bytes(" ")
[] decimal-to-char(33) = bytes("!")
[] decimal-to-char(34) = bytes()
[] decimal-to-char(35) = bytes("#")
[] decimal-to-char(36) = bytes("$")
[] decimal-to-char(37) = bytes("%")
[] decimal-to-char(38) = bytes("&")
[] decimal-to-char(39) = bytes("'")
[] decimal-to-char(40) = bytes("(")
[] decimal-to-char(41) = bytes(")")
[] decimal-to-char(42) = bytes("*")
[] decimal-to-char(43) = bytes("+")
[] decimal-to-char(44) = bytes(",")
[] decimal-to-char(45) = bytes("-")
[] decimal-to-char(46) = bytes(".")
[] decimal-to-char(47) = bytes("/")
[] decimal-to-char(48) = bytes("0")
[] decimal-to-char(49) = bytes("1")
[] decimal-to-char(50) = bytes("2")
[] decimal-to-char(51) = bytes("3")
[] decimal-to-char(52) = bytes("4")
[] decimal-to-char(53) = bytes("5")
[] decimal-to-char(54) = bytes("6")
[] decimal-to-char(55) = bytes("7")
[] decimal-to-char(56) = bytes("8")
[] decimal-to-char(57) = bytes("9")
[] decimal-to-char(58) = bytes(":")
[] decimal-to-char(59) = bytes(";")
[] decimal-to-char(60) = bytes("<")
[] decimal-to-char(61) = bytes("=")
[] decimal-to-char(62) = bytes(">")
[] decimal-to-char(63) = bytes("?")
[] decimal-to-char(64) = bytes("@")
[] decimal-to-char(65) = bytes("A")
[] decimal-to-char(66) = bytes("B")
[] decimal-to-char(67) = bytes("C")
[] decimal-to-char(68) = bytes("D")
[] decimal-to-char(69) = bytes("E")
[] decimal-to-char(70) = bytes("F")
[] decimal-to-char(71) = bytes("G")
[] decimal-to-char(72) = bytes("H")
[] decimal-to-char(73) = bytes("I")
[] decimal-to-char(74) = bytes("J")
[] decimal-to-char(75) = bytes("K")
[] decimal-to-char(76) = bytes("L")
[] decimal-to-char(77) = bytes("M")
[] decimal-to-char(78) = bytes("N")
[] decimal-to-char(79) = bytes("O")
[] decimal-to-char(80) = bytes("P")
[] decimal-to-char(81) = bytes("Q")
[] decimal-to-char(82) = bytes("R")
[] decimal-to-char(83) = bytes("S")
[] decimal-to-char(84) = bytes("T")
[] decimal-to-char(85) = bytes("U")
[] decimal-to-char(86) = bytes("V")
[] decimal-to-char(87) = bytes("W")
[] decimal-to-char(88) = bytes("X")
[] decimal-to-char(89) = bytes("Y")
[] decimal-to-char(90) = bytes("Z")
[] decimal-to-char(91) = bytes("[")
[] decimal-to-char(92) = bytes("\")
[] decimal-to-char(93) = bytes("]")
[] decimal-to-char(94) = bytes("^")
[] decimal-to-char(95) = bytes("_")
[] decimal-to-char(96) = bytes("`")
[] decimal-to-char(97) = bytes("a")
[] decimal-to-char(98) = bytes("b")
[] decimal-to-char(99) = bytes("c")
[] decimal-to-char(100) = bytes("d")
[] decimal-to-char(101) = bytes("e")
[] decimal-to-char(102) = bytes("f")
[] decimal-to-char(103) = bytes("g")
[] decimal-to-char(104) = bytes("h")
[] decimal-to-char(105) = bytes("i")
[] decimal-to-char(106) = bytes("j")
[] decimal-to-char(107) = bytes("k")
[] decimal-to-char(108) = bytes("l")
[] decimal-to-char(109) = bytes("m")
[] decimal-to-char(110) = bytes("n")
[] decimal-to-char(111) = bytes("o")
[] decimal-to-char(112) = bytes("p")
[] decimal-to-char(113) = bytes("q")
[] decimal-to-char(114) = bytes("r")
[] decimal-to-char(115) = bytes("s")
[] decimal-to-char(116) = bytes("t")
[] decimal-to-char(117) = bytes("u")
[] decimal-to-char(118) = bytes("v")
[] decimal-to-char(119) = bytes("w")
[] decimal-to-char(120) = bytes("x")
[] decimal-to-char(121) = bytes("y")
[] decimal-to-char(122) = bytes("z")
[] decimal-to-char(123) = bytes("{")
[] decimal-to-char(124) = bytes("|")
[] decimal-to-char(125) = bytes("}")
[] decimal-to-char(126) = bytes("~")
[] decimal-to-char(127) = bytes("")
[] decimal-to-char(128) = bytes("Ä")
[] decimal-to-char(129) = bytes("Å")
[] decimal-to-char(130) = bytes("Ç")
[] decimal-to-char(131) = bytes("É")
[] decimal-to-char(132) = bytes("Ñ")
[] decimal-to-char(133) = bytes("Ö")
[] decimal-to-char(134) = bytes("Ü")
[] decimal-to-char(135) = bytes("á")
[] decimal-to-char(136) = bytes("à")
[] decimal-to-char(137) = bytes("â")
[] decimal-to-char(138) = bytes("ä")
[] decimal-to-char(139) = bytes("ã")
[] decimal-to-char(140) = bytes("å")
[] decimal-to-char(141) = bytes("ç")
[] decimal-to-char(142) = bytes("é")
[] decimal-to-char(143) = bytes("è")
[] decimal-to-char(144) = bytes("ê")
[] decimal-to-char(145) = bytes("ë")
[] decimal-to-char(146) = bytes("í")
[] decimal-to-char(147) = bytes("ì")
[] decimal-to-char(148) = bytes("î")
[] decimal-to-char(149) = bytes("ï")
[] decimal-to-char(150) = bytes("ñ")
[] decimal-to-char(151) = bytes("ó")
[] decimal-to-char(152) = bytes("ò")
[] decimal-to-char(153) = bytes("ô")
[] decimal-to-char(154) = bytes("ö")
[] decimal-to-char(155) = bytes("õ")
[] decimal-to-char(156) = bytes("ú")
[] decimal-to-char(157) = bytes("ù")
[] decimal-to-char(158) = bytes("û")
[] decimal-to-char(159) = bytes("ü")
[] decimal-to-char(160) = bytes("†")
[] decimal-to-char(161) = bytes("°")
[] decimal-to-char(162) = bytes("¢")
[] decimal-to-char(163) = bytes("£")
[] decimal-to-char(164) = bytes("§")
[] decimal-to-char(165) = bytes("•")
[] decimal-to-char(166) = bytes("¶")
[] decimal-to-char(167) = bytes("ß")
[] decimal-to-char(168) = bytes("®")
[] decimal-to-char(169) = bytes("©")
[] decimal-to-char(170) = bytes("™")
[] decimal-to-char(171) = bytes("´")
[] decimal-to-char(172) = bytes("¨")
[] decimal-to-char(173) = bytes("≠")
[] decimal-to-char(174) = bytes("Æ")
[] decimal-to-char(175) = bytes("Ø")
[] decimal-to-char(176) = bytes("∞")
[] decimal-to-char(177) = bytes("±")
[] decimal-to-char(178) = bytes("≤")
[] decimal-to-char(179) = bytes("≥")
[] decimal-to-char(180) = bytes("¥")
[] decimal-to-char(181) = bytes("µ")
[] decimal-to-char(182) = bytes("∂")
[] decimal-to-char(183) = bytes("∑")
[] decimal-to-char(184) = bytes("∏")
[] decimal-to-char(185) = bytes("π")
[] decimal-to-char(186) = bytes("∫")
[] decimal-to-char(187) = bytes("ª")
[] decimal-to-char(188) = bytes("º")
[] decimal-to-char(189) = bytes("Ω")
[] decimal-to-char(190) = bytes("æ")
[] decimal-to-char(191) = bytes("ø")
[] decimal-to-char(192) = bytes("¿")
[] decimal-to-char(193) = bytes("¡")
[] decimal-to-char(194) = bytes("¬")
[] decimal-to-char(195) = bytes("√")
[] decimal-to-char(196) = bytes("ƒ")
[] decimal-to-char(197) = bytes("≈")
[] decimal-to-char(198) = bytes("∆")
[] decimal-to-char(199) = bytes("«")
[] decimal-to-char(200) = bytes("»")
[] decimal-to-char(201) = bytes("…")
[] decimal-to-char(202) = bytes(" ")
[] decimal-to-char(203) = bytes("À")
[] decimal-to-char(204) = bytes("Ã")
[] decimal-to-char(205) = bytes("Õ")
[] decimal-to-char(206) = bytes("Œ")
[] decimal-to-char(207) = bytes("œ")
[] decimal-to-char(208) = bytes("–")
[] decimal-to-char(209) = bytes("—")
[] decimal-to-char(210) = bytes("“")
[] decimal-to-char(211) = bytes("”")
[] decimal-to-char(212) = bytes("‘")
[] decimal-to-char(213) = bytes("’")
[] decimal-to-char(214) = bytes("÷")
[] decimal-to-char(215) = bytes("◊")
[] decimal-to-char(216) = bytes("ÿ")
[] decimal-to-char(217) = bytes("Ÿ")
[] decimal-to-char(218) = bytes("⁄")
[] decimal-to-char(219) = bytes("€")
[] decimal-to-char(220) = bytes("‹")
[] decimal-to-char(221) = bytes("›")
[] decimal-to-char(222) = bytes("ﬁ")
[] decimal-to-char(223) = bytes("ﬂ")
[] decimal-to-char(224) = bytes("‡")
[] decimal-to-char(225) = bytes("·")
[] decimal-to-char(226) = bytes("‚")
[] decimal-to-char(227) = bytes("„")
[] decimal-to-char(228) = bytes("‰")
[] decimal-to-char(229) = bytes("Â")
[] decimal-to-char(230) = bytes("Ê")
[] decimal-to-char(231) = bytes("Á")
[] decimal-to-char(232) = bytes("Ë")
[] decimal-to-char(233) = bytes("È")
[] decimal-to-char(234) = bytes("Í")
[] decimal-to-char(235) = bytes("Î")
[] decimal-to-char(236) = bytes("Ï")
[] decimal-to-char(237) = bytes("Ì")
[] decimal-to-char(238) = bytes("Ó")
[] decimal-to-char(239) = bytes("Ô")
[] decimal-to-char(240) = bytes("")
[] decimal-to-char(241) = bytes("Ò")
[] decimal-to-char(242) = bytes("Ú")
[] decimal-to-char(243) = bytes("Û")
[] decimal-to-char(244) = bytes("Ù")
[] decimal-to-char(245) = bytes("ı")
[] decimal-to-char(246) = bytes("ˆ")
[] decimal-to-char(247) = bytes("˜")
[] decimal-to-char(248) = bytes("¯")
[] decimal-to-char(249) = bytes("˘")
[] decimal-to-char(250) = bytes("˙")
[] decimal-to-char(251) = bytes("˚")
[] decimal-to-char(252) = bytes("¸")
[] decimal-to-char(253) = bytes("˝")
[] decimal-to-char(254) = bytes("˛")
[] decimal-to-char(255) = bytes("ˇ")
