module Relations[Elem]

%%imports FastBagsNC[Elem]
imports Sets[Elem]

exports

  sorts Tuple

  aliases
	Set[[Elem]]					-> Rel[[Elem]]

  context-free syntax

     "<"{Elem ","}+ ">"					-> Tuple {prefer}

     Tuple						-> Elem

     compose(Rel[[Elem]], Rel[[Elem]])			-> Rel[[Elem]]	%%RRR
    
     product(Elem, Set[[Elem]])				-> Rel[[Elem]]	%%EBR
     product(Set[[Elem]], Set[[Elem]])			-> Rel[[Elem]]	%%BBR

     Set[[Elem]] "x" Set[[Elem]]			-> Rel[[Elem]]
     
     domain(Rel[[Elem]])				-> Set[[Elem]]	%%RB
     range(Rel[[Elem]])					-> Set[[Elem]]	%%RB
     carrier(Rel[[Elem]])				-> Set[[Elem]]	%%RB

     domainR(Rel[[Elem]], Set[[Elem]])			-> Rel[[Elem]]	%%RBR
     rangeR(Rel[[Elem]], Set[[Elem]])			-> Rel[[Elem]]	%%RBR
     carrierR(Rel[[Elem]], Set[[Elem]])			-> Rel[[Elem]]	%%RBR

     domainX(Rel[[Elem]], Set[[Elem]])			-> Rel[[Elem]]	%%RBR
     rangeX(Rel[[Elem]], Set[[Elem]])			-> Rel[[Elem]]	%%RBR
     carrierX(Rel[[Elem]], Set[[Elem]])			-> Rel[[Elem]]	%%RBR

     top(Rel[[Elem]])                 			-> Set[[Elem]]	%%RB
     bottom(Rel[[Elem]])                  		-> Set[[Elem]]	%%RB

     inv(Rel[[Elem]])					-> Rel[[Elem]]	%%RR
     compl(Rel[[Elem]])					-> Rel[[Elem]]	%%RR

     id(Set[[Elem]])					-> Rel[[Elem]]	%%BR

     limage(Rel[[Elem]], Elem)				-> Set[[Elem]]	%%REB
     limage(Rel[[Elem]], Set[[Elem]])			-> Set[[Elem]]	%%RBB

     rimage(Rel[[Elem]], Elem)				-> Set[[Elem]]	%%ERB
     rimage(Rel[[Elem]], Set[[Elem]])			-> Set[[Elem]]	%%BRB

     reachX(Set[[Elem]], Set[[Elem]], Rel[[Elem]])	-> Rel[[Elem]]	%%BBRR
     reachR(Set[[Elem]], Set[[Elem]], Rel[[Elem]])	-> Rel[[Elem]]	%%BBRR
     trans-closure(Rel[[Elem]])                		-> Rel[[Elem]]	%%RR
     rtrans-closure(Rel[[Elem]])             		-> Rel[[Elem]]	%%RR

     is-rel(Set[[Elem]])				-> Boolean
     is-tuple(Elem)					-> Boolean
     "(" Set[[Elem]] ")"              			-> Set[[Elem]] {bracket}


hiddens
  imports basic/Comments

  context-free syntax
     closure(Set[[Elem]],Set[[Elem]], Set[[Elem]])	-> Set[[Elem]]
     closure1(SetIterator[[Elem]],Set[[Elem]], Set[[Elem]])	-> Set[[Elem]]
     closure-comp(SetIterator[[Elem]],Elem, Elem, Set[[Elem]])	-> Set[[Elem]]

     compose1(SetIterator[[Elem]], Set[[Elem]])		-> Set[[Elem]]	%%RRR

     product1(Elem, SetIterator[[Elem]])        	-> Set[[Elem]]	%%EBR
     product1(SetIterator[[Elem]], Set[[Elem]])  	-> Set[[Elem]]	%%BBR
     

     domain1(SetIterator[[Elem]])			-> Set[[Elem]]	%%RB
     range1(SetIterator[[Elem]])			-> Set[[Elem]]	%%RB
     carrier1(SetIterator[[Elem]])			-> Set[[Elem]]  %%RB

     domainR1(SetIterator[[Elem]], Set[[Elem]]) 	-> Set[[Elem]]	%%RBR
     rangeR1(SetIterator[[Elem]], Set[[Elem]])  	-> Set[[Elem]]	%%RBR
     carrierR1(SetIterator[[Elem]], Set[[Elem]])   	-> Set[[Elem]]	%%RBR

     domainX1(SetIterator[[Elem]], Set[[Elem]])  	-> Set[[Elem]]	%%RBR
     rangeX1(SetIterator[[Elem]], Set[[Elem]]) 		-> Set[[Elem]]	%%RBR
     carrierX1(SetIterator[[Elem]], Set[[Elem]])  	-> Set[[Elem]]	%%RBR

     limage1(SetIterator[[Elem]], Elem)         	-> Set[[Elem]]	%%REB
     limage1(Set[[Elem]], SetIterator[[Elem]])   	-> Set[[Elem]]	%%RBB

     rimage1(SetIterator[[Elem]], Elem)        		-> Set[[Elem]]	%%ERB
     rimage1(Set[[Elem]], SetIterator[[Elem]]) 		-> Set[[Elem]]	%%BRB

     inv1(SetIterator[[Elem]])          		-> Set[[Elem]]	%%RR
     id1(SetIterator[[Elem]])           		-> Set[[Elem]]	%%BR

  variables
     "$Set" [0-9\']*             -> Set[[Elem]]
     "$SetIter" [0-9\']*         -> SetIterator[[Elem]]
     "$Rel" [0-9\']*             -> Rel[[Elem]]

     "$Elem" [0-9\']*            -> Elem
     "$Elem*" [0-9\']*           -> {Elem ","}*
     "$Elem+" [0-9\']*           -> {Elem ","}+






