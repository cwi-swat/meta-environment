equations

[extract-classes-1]
	&Modifiers class &Identifier &Super &Interfaces &ClassBody := &ClassDeclaration
	==============================================================================
	extractClasses(&ClassDeclaration, &Rel) =
	&Rel union {<id2str(&Identifier), get-location(&ClassDeclaration)>}

[extract-classes-2]
	new &ClassType ( &Expressions ) &ClassBody := &ClassInstanceCreationExpression
	==============================================================================
	extractClasses(&ClassInstanceCreationExpression, &Rel) = 
	&Rel union {<mkAnonymousClassId(&ClassInstanceCreationExpression), 
		     get-location(&ClassInstanceCreationExpression)>}

[extract-class-uses-1]
	new &ClassType ( &Expressions ) &ClassBody := &ClassInstanceCreationExpression
	==============================================================================
	extractClassUses(&ClassInstanceCreationExpression, &Rel) = 
	&Rel union {<mkAnonymousClassId(&ClassInstanceCreationExpression), 
		     get-location(&ClassInstanceCreationExpression)>}

[extract-class-uses-2]
	new &ClassType ( &Expressions ) := &ClassInstanceCreationExpression,
	&Name := &ClassType
	==============================================================================
	extractClassUses(&ClassInstanceCreationExpression, &Rel) = 
	&Rel union {<name2str(&Name), get-location(&ClassInstanceCreationExpression) >}

[mkId]  new &ClassType ( &Expressions ) &ClassBody := &ClassInstanceCreationExpression,
	&Name := &ClassType,
	&Loc :=  get-location(&ClassInstanceCreationExpression),
	&ClassId := name2str(&Name),
	&LineId :=  nat2str(get-begin-line(&Loc))
	======================================================================
	mkAnonymousClassId(&ClassInstanceCreationExpression) = &ClassId || &LineId
