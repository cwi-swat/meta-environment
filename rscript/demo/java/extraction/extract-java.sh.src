#! /bin/sh

# extract-java -- extract fact from Java source code

set -e

# {{{  variables
prefix=__PREFIX__
bindir=__BINDIR__
datadir=__DATADIR__

PRG=`basename $0`
JAVA_PARSE_TABLE=${datadir}/demo/java/grammar/Java.trm.tbl
JAVA_ANALYSIS=${bindir}/JavaAnalysis
SOURCE_DIR=.
EXECUTABLE=${JAVA_ANALYSIS}
EXTRACTION_FUNCTION=extractRelations
RESULTING_RSTORE=result.rstore.pt

# }}}

# {{{  usage

usage() {
cat << ENDCAT >&2
Usage: $PRG -i dirname [-o rstore]

Options:
  -i | --input <dir>       input Java files from directory <dir> (default: current directory)
  -o | --output <file>	   output to file (default: result.rstore.pt)
  -e | --executable <file> specify executable for performing extraction extraction (default: JavaAnalysis)
  -f | --function <name>   specificy the extraction function to be applied (default: extractRelations)
  -v | --verbose           verbose output (default:none)
Examples:
  $PRG -i JHotDraw5.2-sources -o jhotdraw.rstore.pt
  $PRG -i JHotDraw5.2-sources -o jhotdraw.rstore.pt -e MyJavaAnalysis -f myExtraction

ENDCAT
}

# {{{ check_input

check_input(){
   if [ ! -d ${SOURCE_DIR} ]
   then
      echo "$PRG: ${SOURCE_DIR} is not a directory"
      usage
      exit 1
   fi
}

# }}}

# {{{ check_output

check_output() {
  case ${RESULTING_RSTORE} in
	*.rstore) ;;
        *.rstore.pt) ;;
	*)
	echo "$PRG: $RESULTING_RSTORE should have file extension .rstore or .rstore.pt"
	usage
	exit 1
  esac
}

# }}}


# }}}

while [ $# -gt 0 ]
do
  case "$1" in

    -i | --input)
      shift; SOURCE_DIR=$1 ;;

    -o | --output)
      shift; RESULTING_RSTORE=$1 ;;

    -e | --executable)
      shift; EXECUTABLE=$1 ;;

    -f | --function)
      shift; EXTRACTION_FUNCTION=$1 ;;

    -v | --verbose)
      VERBOSE=-v ;;
    *)
      usage; exit 1 ;;
  esac
  shift
done

check_input
check_output

extract-relations ${VERBOSE} \
	              --executable ${EXECUTABLE} \
                      --sort CompilationUnit \
                      --function ${EXTRACTION_FUNCTION} \
                      --parse-table ${JAVA_PARSE_TABLE} \
                      --output ${RESULTING_RSTORE} \
                      `find $SOURCE_DIR -name "*.java"`