equations

%% --- control flow of statement lists

[cfn1] $Rel1 := cflow($Stat), $Rel2 := cflown($Stat*)
       ==========================================================
       cflown($Stat ; $Stat*) = 
       [| $Rel1 union $Rel2 union bottom($Rel1) x top($Rel2) |]

[cfn2] cflown() = {}

%% ---- control flow of individual statements

[cf1]  $Rel := cflown($Stat*)
       =========================================================
       cflow(while $Exp do $Stat* od) = 
       [| $Rel union bottom($Rel) x {get-location($Exp)} union {get-location($Exp)} x top($Rel) |]

[cf2]  $Rel1 := cflown($Stat*1), $Rel2 := cflown($Stat*2)
       ==========================================================
       cflow(if $Exp then $Stat*1 else $Stat*2 fi) = 
       [| $Rel1 union $Rel2 union {get-location($Exp)} x top($Rel1) union {get-location($Exp)} x top($Rel2) |]

[default-cf]
       cflow($Stat) = id({get-location($Stat)})

%% ---- use/def computation

[df1]  $Id := $Exp := $Stat
       ========================================================== 
       defs($Stat, $Rel) = [| $Rel union {<id2str($Id), get-location($Stat)>} |]

[us1]  $Id := $Exp
       ========================================================== 
       uses($Exp, $Rel) = [| $Rel union  {<id2str($Id), get-location($Id)>} |]


[er-1] $Loc :=  area-in-file("", area(0,0,0,0,0,0)),
       begin Decls $Stat+ end := $Program
       ==========================================================
       extractRelations($Program) = 
       rstore()[| loc ROOT = $Loc
		  rel[loc,loc] PRED = cflown($Stat+)
		  rel[loc,str] USES = uses($Program, {})
		  rel[str,loc] DEFS = defs($Program, {})
       |]

%% ----- utilities

[i2s] id2str(pico-id($Char*)) = strcon(""" $Char* """)

[cvt-1] convert2error(<$StrCon, $Loc>) = error("Uninitialized variable", [localized($StrCon, $Loc)])

[cvt-2] convert2errorlist({<$String, $Loc>, $Elem*}) = 
	convert2error(<$String, $Loc>),  convert2errorlist({$Elem*})

[cvt-3] convert2errorlist({}) = 

[cvt-4]	convert2summary($Elem) = summary("PicoQuery", "PicoQuery", [convert2errorlist($Elem)])

