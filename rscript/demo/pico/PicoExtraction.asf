equations

[as-1] add-pred($Rel, $Rstore) = add-tuples(PRED, $Rel, $Rstore)
 
[ex1] while Exp do Stat* od := Stat,
      $Loc := get-location(Stat),
      $Rstore' := add-pred({<$Loc, get-first(Stat*)>}, $Rstore),
      $Rstore'':= add-last(Stat*, $Loc, $Rstore'),
      $Rstore''' := extract-used-vars(Exp, $Rstore'', $Loc)
      =========================================================
      extract(Stat, $Rstore) = $Rstore'''

[ex2]
      if Exp then Stat*1 else Stat*2 fi := Stat,
      $Loc := get-location(Stat),
      $Rstore' := add-pred({ <$Loc, get-first(Stat*1)>,
                           <$Loc, get-first(Stat*2)> }, $Rstore),
      $Rstore'' :=  extract-used-vars(Exp, $Rstore', $Loc)
      ========================================================
      extract(Stat, $Rstore) = $Rstore''

[ex3] $Rstore' := extract(Stat, $Rstore),
      $Rstore'' := extract(Stat+, $Rstore')
      ========================================================
      extract(Stat ; Stat+, $Rstore) = 
      add-pred(product(get-last(Stat), {get-first(Stat+)}), $Rstore'')

[ex4] Id := Exp := Stat,
      $Loc := get-location(Stat),
      $Loc' := get-location(Id),
      $Rstore' := extract-used-vars(Exp, $Rstore, $Loc),
      $Rstore'' := add-tuple(DEFS, <$Loc, id2str(Id)>, $Rstore'),
      $Rstore''' := add-tuple(OCCURS, <id2str(Id), $Loc'>, $Rstore'')
      ========================================================
      extract(Stat, $Rstore) = $Rstore'''

[default-ex]
     extract(Stat, $Rstore) = extract-used-vars(Stat, $Rstore, get-location(Stat))

[exv-1] $Loc' := get-location(Id),
	$Rstore' := add-tuple(USES, <$Loc, id2str(Id)> , $Rstore),
        $Rstore'' := add-tuple(OCCURS, <id2str(Id), $Loc'>, $Rstore')
	=====================================================
        extract-used-vars(Id, $Rstore, $Loc) = $Rstore''

[gf-1] get-first(Stat; Stat*) = get-location(Stat)

[gl-2] get-last(Stat*; if Exp then Stat*1 else Stat*2 fi) = 
       union(get-last(Stat*1), get-last(Stat*2))

[default-gl-3] 
       get-last(Stat*; Stat) = {get-location(Stat)}

[al-1] $Bag := get-last(Stat*)
       ========================================================
       add-last(Stat*, $Loc, $Rstore) = add-pred(product($Bag, {$Loc}), $Rstore)

[er-1] begin Decls Stat+ end := Program,
       $Loc :=  area-in-file("", area(0,0,0,0,0,0)),
       $Rstore1 := assign(ROOT, loc, $Loc, rstore()),
       $Rstore2 := assign(USES, rel[loc,str], {}, $Rstore1),
       $Rstore3 := assign(OCCURS, rel[str,loc], {}, $Rstore2),
       $Rstore4 := assign(PRED, rel[loc,loc], {}, $Rstore3),
       $Rstore5 := add-pred({<$Loc, get-first(Stat+)>}, $Rstore4)
       =======================================================
       extractRelations(Program) = extract(Program, $Rstore5)

[i2s] id2str(pico-id($Char*)) = strcon(""" $Char* """)

[cvt-1] convert2error(<$StrCon, $Loc>) = error("Uninitialized variable", [localized($StrCon, $Loc)])

[cvt-2] convert2errorlist({<$String, $Loc>, $Elem*}) = 
	convert2error(<$String, $Loc>),  convert2errorlist({$Elem*})

[cvt-3] convert2errorlist({}) = 

[cvt-4]	convert2summary($Elem) = summary("PicoQuery", "PicoQuery", [convert2errorlist($Elem)])

