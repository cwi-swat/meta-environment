$Id$

Fri Mar  5 13:55:46 CET 2004 <kooiker@cwi.nl>
 * library/languages/box/syntax/Pretty.sdf:
   - added generic prettyprint module 

Tue Mar  2 11:39:49 CET 2004 <jurgenv@cwi.nl>
 * Removed C syntax from languages

Fri Feb 27 15:37:00 CET 2004 <{jong,kooiker}@cwi.nl>
 * library/basic:
   refactor LocationOperations out of Locations.sdf

Tue Feb 17 11:47:52 CET 2004 <kooiker@cwi.nl>
 * library/languages/box/syntax/Contexts.sdf:
   - removed unused variable

Mon Feb 16 10:11:57 CET 2004 <jurgenv@cwi.nl>
 * str-len renamed to length
 * str-cmp renamed to <, <=, >= and >
 * bytes-cmp renamed to <, <=, >=, >
 * gave set operators relative priorities: \ > /\ > \/
 * TermCompare functions also use <, <=, >= and > operators

Thu Feb 12 14:24:05 CET 2004 <jurgenv@cwi.nl>
 * Sets are completely functional (finally). The syntax is:
  - union = \/
  - intersection = /\
  - difference = \
  - element test = in
  - for every infix, there is the corresponding prefix notation

Tue Feb 10 15:27:49 CET 2004 <m336@cwi.nl>
 * upgrade auto* to: autoconf 2.59, automake 1.7.9, libtool 1.5.2


Mon Feb  2 16:43:59 CET 2004 <{jong,kooiker}@cwi.nl>
 * fix Makefile.am to get "distcheck" working

2004/01/23 ({jurgenv,jong,kooiker}@cwi.nl)
  * separated out the syntax definitions of StrCon from Strings and
    NatCon from Integers. This allows other languages to use the syntax
    and non-terminals of the library without depending on the implementation
    of the functionality on Strings and NatCons.
  * Some SIGNIFICANT changes in the Box language intended to simplify
    apigeneration and separate syntax from semantics:
      - StrCon -> Box instead of String -> Box
        (now Box does not depend on the implementation of Strings anymore
        including the basic/Integers imported by the Strings module)
      - SpaceSymbol "=" NatCon  -> SOption
        (now Box does not depend on the implementation of Integers anymore,
        only on the basic NatCon lexical definition)
      - added cons attributes where necessary in the Box language.
      - removed operators like "++" and ":" from the Box syntax definition.
        I'm sorry if this broke some specifications, but they are very easy
        to reproduce in a new Box-Operations module.

Tue Jan 20 14:46:47 CET 2004 <{jong,jurgenv}@cwi.nl>
 * basic/Locations.{asf,sdf}:
   - added convenience getters for Location and Area data structures
 * utilities/PosInfo.{asf,sdf}:
   - uses convenience methods from basic/Locations
   - renamed some convenience methods to make things more consistent
 * utilities/IO.{asf,sdf}:
   - added convenience functions unparse, and unparse-to-string.

2003/16/01 (markvdb@cwi.nl)
  * First version of BOX language added to the library.

2003/06/01 (jurgenv@cwi.nl)
  * Simplified IO.sdf, renamed ParseResults.sdf to IOResults.sdf.
    All IO builtins now return all errors that might occur using the
    syntax of the ErrorAPI.

2003/12/10 (markvdb@cwi.nl)
  * Introduced the {lexical, context-free} start-symbols in the Sdf2 grammar. 
  * Adapted the Sdf2-Normalization accordingly.
  * Both sorts and start-symbols are now used as start symbols.

2003/11/26 (jurgenv@cwi.nl)
  * added first version of generic error format

2003/11/20 (jurgenv@cwi.nl)
  * unified interface of parsing, unparsing and file reading and writing
  * added parse-file and parse-bytes builtins that produce a structure
    containing the lifted left and right layout and the parse tree itself.
  * read-term-from-file now produces the same structure as parse-file
  * added write-bytes-to-file and read-bytes-from-file builtins
  * renamed unparse to unparse-to-bytes and added unparse-to-file


2003/11/10 (jurgenv@cwi.nl)
  * Upgraded SDF2 normalizer specification in languages/sdf2. One ambiguity
    occurred over a condition with lists of priorities separated by comma's.
    Introduced a "priorities" keyword on both sides of the two involved
    conditions to solve the problem.
  * Solved several new warnings of the SDF checker in the normalizer too.

2003/11/03 (jurgenv@cwi.nl)
  * Added lower-from-tree function.

2003/11/03 (storm@cwi.nl)
  * Added implode function.

2003/10/16 (jurgenv@cwi.nl)
  * Added tests to basic/Booleans,Integers,Strings

2003/10/13 (jurgenv@cwi.nl)
  * Removed old C grammar
  * ANSI-C grammar is now half-finished, waiting on SDF2 extensions

2003/10/09 (markvdb@cwi.nl)
  * Added the strategy symbol again, was removed by accident.

2003/10/09 ({jurgenv,markvdb}@cwi.nl)
  * Reorganized the literal syntax.
  * Added constructor information to Parsetree specification.
  * Reintroduced the strategy symbol, removed by accident.

2003/10/07 (markvdb@cwi.nl)
  * Added new syntax rule for tuples <A,B>, the old syntax is
    still supported for some time.

2003/10/07 (jurgenv@cwi.nl)
  * Added Casl directories to configure.in

2003/10/06 (markvdb@cwi.nl)
  * Casl added.

2003/10/03 (markvdb@cwi.nl)
  * Removed the set and perm symbol from Sdf2.

2003/10/01 (markvdb@cwi.nl)
  * Added constructor information to the Sdf2 and ATerm syntax
    in order to get in sync with Sdf.label.def in sdf-support.

2003/09/26 (markvdb@cwi.nl)
  * Removed the Layout module from the aterm syntax.
  * Added \r to basic/Whitespace
  * Replaced the call to aterm/Layout by basic/Whitespace in
    the ATerms and basic/Comments in Sdf2.

2003/09/26 (jurgenv@cwi.nl)
  * Added some grammars to the sandbox
  * Added C language to the languages

2003/09/25 ({storm,jurgenv}@cwi.nl)
  * Reimplemented TermCompare module using better ordering builtin
  * Added Measure.sdf

2003/09/22 (jurgenv@cwi.nl)
  * Restructured the library:
      - basic (still contains basic data-types)
      - containers (still contains paramatrized data-structures)
      - utilities (contains access to ASF builtins and other practical stuff)
      - languages (contains specificiations of all kinds of languages)
  * Promoted cpp grammar from sandbox to languages
  * Changed module names of ATerm syntax to correspond better to the 
    style guide
  * Added lifting operators in utilities/Lifting (reflection)

2003/09/22 (storm@cwi.nl)
  * Added grammar for the C Preprocessor to the Sandbox.
  * Added tentative ASCII module to basic/.
  * Removed Hashtable, added Bounded Balanced Trees.
  * Added module for byte sequences to library: basic/Bytes.
    You can now convert strings with escape sequences to actual
    byte streams and back.
  * Fixed deprecated syntax in basic/Strings
  * Added str-len and str-cmp function to basic/Strings.

2003/09/17 (jurgenv@cwi.nl)
  * Removed remaining unnecessary chmod calls in install and uninstall 
    targets.
  * Added longest match on NatCon

2003/09/16 (jurgenv@cwi.nl)
  * Extracted asf-library from the asf package. The ChangeLog in the
    asf package between 2003/07/06 and 2003/09/16 contains some relevant
    messages for this new package!
  * Set version number to 1.0

2003/07/06 (jurgenv@cwi.nl)
  * Removed all .baf and .tbl files because they are not loaded anymore
    by the Meta-Environment anyway. This saves a lot of space in the
    distribution.
  * Removed installation architecture for the above files too

2003/05/20 (jurgenv@cwi.nl)
  * Fixed bug in containers/Set module. It imported basic/Boolean in an
    hiddens section, but the 'elem' function exported a Boolean result.
    This leads inevitably to problems when a Boolean value from the
    elem function is matched against another Boolean value (due to the
    id(<modulename>) production attribute).

2003/04/15 (jurgenv@cwi.nl)
  * Added a number of very old specifications to the sandbox (unreleased
    specifications). Partially converted them to new ASF+SDF syntax.
    
2003/04/01 (markvdb@cwi.nl)
  * Set no longer re-use the List module. 
  * Square brackets are replaced by curly brackets.

2002/10/12 (jurgenv@cwi.nl)
  * Moved entire library to asf package. We will maintain this ChangeLog
    since the library is such an isolated subtree in the package.

2002/07/29 (jurgenv@cwi.nl)
  * Updated STYLE-GUIDE and README
  * Release 0.3

2002/07/25 (jurgenv@cwi.nl)
  * Removed libraries put back.
  * Bumped to version 0.3beta

2002/07/24 (jurgenv@cwi.nl)
  * Temporarily removed functions, strategies, containers, disambiguation
    and asf/tools from library in order to make a stable 0.2 release.
  * Release 0.2

2002/07/11 (jurgenv@cwi.nl)
  * Added sdf2 normalizer
  * Strategies now support full traversal and heterogeneous data-types.
    To use it, import the strategies/Operators for every non-terminal in
    the traversed grammar.
  * Added side-effect: Counter
  * Added side-effect: Normalization (to normalize terms that have been
    obtained by other side-effects)
  * Restructured library for ASF
  * Added basic library for disambiguation

2002/07/03 (jurgenv@cwi.nl)
  * Added asf/Variables. A module that defines variables for a specific sort.
  * Added the syntax of ASF

2002/07/01 (vandenbr@loria.fr)
  * Rolled back the modifications performed on 2002/06/14.

2002/06/14 (jong@cwi.nl,markvdb@cs.vu.nl)
  * Restructured the "Literal"s in ATerm syntax and Sdf syntax.
  * Added ATermOperations (in OO style).
  * Added ATerm placeholder.
  * Fixed ChangeLog dates.

2002/05/24 (jurgenv@cwi.nl)
  * Added Stratego-like programming language with simple interpreter. 
    Heterogeneous data-types and traversals not supported (yet).

2002/05/23 (jurgenv@cwi.nl)
  * Added experimental library for functional programming in ASF containing:
      id, const, curry, uncurry, sequence, flip, apply, map and fold[lr],
      zip, zipWith, tuple, fst, snd etc.
  * Added experimental library for traversal programming in ASF containing:
      topdown, bottomup, oncetd for type-preserving and type-unifying 
      traversals
  * Added setting and getting of annotations in terms.
  * Fixed some minor bugs in the built-in system.

2002/05/22 (jurgenv@cwi.nl)
  * Worked out built-in definition and compilation further. Built-in
    implementations are next to sdf files again where they are defined.
  * Added map function from List[[From]] to List[[To]]

2002/05/21 ({jurgenv,markvdb}@cwi.nl)
  * Made built-in compilation more sophisticated. 
    - Every subdirectory can declare a PACKAGE_SRC variable that tells in which 
      files the built-ins are implemented
    - Every declared built-in in a sdf file is tested to have an
      implementation in one of the declared PACKAGE_SRC files.
    - Every PACKAGE_SRC is registered in ${top}/src/objects.lst
    - Every built-in is registered in ${top}/src/builtins.lst
    - Using these files the library is finally collected and built.
      
2002/05/17 ({jurgenv,markvdb}@cwi.nl)
  * Added sdf2 syntax
  * Refactored sdf2 syntax
  * Moved ATerm syntax from sdf2 syntax to own toplevel library
  * Added read-term-from-file and write-term-to-file to system library

2002/05/15 (jurgenv@cwi.nl)
  * Baffiles and tables are also installed (after sdf files such that
    timestamps are correct.
  * Directories are made read-only after installation
  * Added saved baf and tables for all modules so far
  * Added builtin architecture (see STYLE-GUIDE)
  * Added part of ATerm level 1 interface

2002/05/14 (jurgenv@cwi.nl)
  * Added automatic installation of the library modules
  * Removed all dependencies on other packages for the moment
  * Set version to 0.2beta

2002/05/13 (jurgenv@cwi.nl)
  * Removed generation of configure script
  * Restarted asf library initiative using compound module names

2001/12/21 (jurgenv@cwi.nl)
  * Added --with-pt-support, --with-sglr and --with-asf configure options.
  * Fixed make_rules.asf to be able to handle distcheck target.

2001/08/30 (markvdb@cwi.nl)
  * improved the efficiency of the addition.

2001/07/31 (jurgenv@cwi.nl)
  * Set version to 0.1alfa

2001/07/25 (joost.visser@cwi.nl)
  * Started to create an ASF library.
  * Started a test framework for ASF specifications.
