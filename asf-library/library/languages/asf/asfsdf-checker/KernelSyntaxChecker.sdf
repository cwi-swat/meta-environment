module languages/asf/asfsdf-checker/KernelSyntaxChecker

imports languages/sdf2/checker/Sdf-Type-Environment 
imports languages/sdf2/checker/ModuleOperations
imports utilities/PosInfo[Grammar]
imports utilities/PosInfo[Renaming]

exports
  context-free syntax
    check-for-kernel-syntax(Definition, Info-Msg-Tuple) -> Info-Msg-Tuple

hiddens
  context-free syntax
    check-syntax(Definition, Info-Msg-Tuple)        -> Info-Msg-Tuple {traversal(accu, break, top-down)}
    check-syntax(Module, Info-Msg-Tuple)            -> Info-Msg-Tuple {traversal(accu, break, top-down)}
    check-syntax2(Module, Info-Msg-Tuple, ModuleId)  -> Info-Msg-Tuple {traversal(accu, break, top-down)}
    check-syntax2(Grammar, Info-Msg-Tuple, ModuleId) -> Info-Msg-Tuple {traversal(accu, break, top-down)}

  context-free syntax
    check-renamings(Definition, Info-Msg-Tuple)         -> Info-Msg-Tuple {traversal(accu, break, top-down)}
    check-renamings(Module, Info-Msg-Tuple)             -> Info-Msg-Tuple {traversal(accu, break, top-down)}
    check-renamings2(Module, Info-Msg-Tuple, ModuleId)   -> Info-Msg-Tuple {traversal(accu, break, top-down)}
    check-renamings2(Renaming, Info-Msg-Tuple, ModuleId) -> Info-Msg-Tuple {traversal(accu, break, top-down)}

hiddens
  variables
    "Definition"[0-9]* -> Definition
    "Module"[0-9]*     -> Module
    "$ModuleId"[0-9]*  -> ModuleId
    "Msgs"[0-9]*       -> {Error ","}*
    "InfoMsgTuple"[0-9]* -> Info-Msg-Tuple
    "Prod"[0-9]*       -> Production
    "Prod*"[0-9]*      -> Production*
    "Prios"[0-9]*      -> Priorities
    "$Grammar"[0-9]*   -> Grammar
    "$Renaming"[0-9]*  -> Renaming

    "$String"[0-9]* -> StrCon
    "$Location"[0-9]* -> Location
