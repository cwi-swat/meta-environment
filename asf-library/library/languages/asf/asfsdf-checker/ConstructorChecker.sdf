module languages/asf/asfsdf-checker/ConstructorChecker

imports languages/sdf2/checker/Sdf-Type-Environment
imports utilities/PosInfo[Attribute]
imports utilities/PosInfo[AFun]

exports
  context-free syntax
    check-constructors(Definition, Info-Msg-Tuple) -> Info-Msg-Tuple

hiddens
  sorts Constructors-Msg-Tuple

  context-free syntax
    "[" ConstructorSet "," {Error ","}* "]" -> Constructors-Msg-Tuple
  context-free syntax
    check-module-constructors(Definition, Info-Msg-Tuple) -> Info-Msg-Tuple {traversal(accu, break, top-down)}
    check-module-constructors(Module, Info-Msg-Tuple) -> Info-Msg-Tuple {traversal(accu, break, top-down)}
    get-constructor-symbol-pairs(Module,
                                 Constructors-Msg-Tuple,
                                 ModuleId) -> Constructors-Msg-Tuple {traversal(accu, break, top-down)}
    get-constructor-symbol-pairs(Grammar,
                                 Constructors-Msg-Tuple,
                                 ModuleId) -> Constructors-Msg-Tuple {traversal(accu, break, top-down)}
    get-constructor-symbol-pairs(Production,
                                 Constructors-Msg-Tuple,
                                 ModuleId) -> Constructors-Msg-Tuple {traversal(accu, break, top-down)}
    get-constructor-symbol-pairs2(Attributes,
                                  Constructors-Msg-Tuple,
                                  ModuleId, Symbol,
                                  Production) -> Constructors-Msg-Tuple {traversal(accu, break, top-down)}
    get-constructor-symbol-pairs2(Attribute,
                                  Constructors-Msg-Tuple,
                                  ModuleId, Symbol,
                                  Production) -> Constructors-Msg-Tuple {traversal(accu, break, top-down)}

  context-free syntax
    check-constructor-in-priorities({Group ">"}+,
                                    Constructors-Msg-Tuple,
                                    ModuleId) -> Constructors-Msg-Tuple {traversal(accu, break, top-down)}
    check-constructor-in-priorities(Production,
                                    Constructors-Msg-Tuple,
                                    ModuleId) -> Constructors-Msg-Tuple {traversal(accu, break, top-down)}
    check-constructor-in-priorities2(Attributes,
                                     Constructors-Msg-Tuple,
                                     ModuleId, Symbol,
                                     Production) -> Constructors-Msg-Tuple {traversal(accu, break, top-down)}
    check-constructor-in-priorities2(Attribute,
                                     Constructors-Msg-Tuple,
                                     ModuleId, Symbol,
                                     Production) -> Constructors-Msg-Tuple {traversal(accu, break, top-down)}

hiddens
  variables
    "Definition"[0-9]*      -> Definition
    "$Attribute"[0-9]*      -> Attribute
    "Attrs"[0-9]*           -> Attributes
    "Msgs"[0-9]*            -> {Error ","}*
    "Module"[0-9]*          -> Module
    "$ModuleId"[0-9]*       -> ModuleId

    "Import*"[0-9]*         -> Import*
    
    "InfoMsgTuple"[0-9]*    -> Info-Msg-Tuple
    "ModuleInfoTable"[0-9]* -> Module-Info-Table
    "ConstructorSet"[0-9]*  -> ConstructorSet
    "SymbolCons*"[0-9]*     -> SymbolConsPair*

    "Symbol*"[0-9]*    -> Symbol*
    "Symbol,*"[0-9]*   -> {Symbol ","}*
    "Symbol"[0-9]*     -> Symbol
    "$FuncName"[0-9]*  -> FunctionName

    "ConsMsgTuple"[0-9]*    -> Constructors-Msg-Tuple
    "Prod"[0-9]*            -> Production

    "Group+"[0-9]*          -> {Group ">"}+

    "$String"[0-9]*   -> StrCon
    "$Location"[0-9]* -> Location
    "$AFun"[0-9]*     -> AFun
