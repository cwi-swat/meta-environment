module languages/asf/normalization/Constructors

imports basic/Integers
imports languages/asf/normalization/RenamedTree
imports languages/asf/normalization/RenamedASF

exports

context-free syntax

  constructors(Module) -> Module
  constructors(P-Tree)   -> P-Tree

hiddens

imports basic/Comments

context-free start-symbols
	P-Tree

context-free syntax
  deconstruct(Module) -> Module {traversal(bottom-up, trafo, continue)}
  deconstruct(Equation) -> Equation {traversal(bottom-up, trafo, continue)}
  deconstruct(P-Tree)   -> P-Tree   {traversal(bottom-up, trafo, continue)}

  reconstruct(P-Args)   -> P-Args {traversal(bottom-up, trafo, continue)}
  reconstruct(P-Tree)   -> P-Tree   {traversal(bottom-up, trafo, continue)}

context-free syntax
  unwrap(P-Symbols) -> P-Symbols {traversal(bottom-up, trafo, continue)}
  unwrap(P-Symbol) -> P-Symbol {traversal(bottom-up, trafo, continue)}

context-free syntax
  get-cons-args(P-Symbols) -> P-Symbols
  get-cons-args(P-Args)    -> P-Args

context-free syntax
	digits(P-Args) -> P-Tree

context-free syntax
	is-layout-tree(P-Tree) -> Boolean
	is-layout-symbol(P-Symbol) -> Boolean

context-free syntax
	remove-layout(P-Args) -> P-Args
	remove-layout(P-Symbols) -> P-Symbols

	remove-tag(P-Attributes) -> P-Attributes

context-free syntax
	reserved-chars(P-Tree) -> P-Tree

variables
	"Symbol"[0-9]* -> P-Symbol {strict}
	"Tree"[0-9]* -> P-Tree {strict}
	"Tree*"[0-9]* -> {P-Tree ","}* {strict}
	"Symbol*"[0-9]* -> {P-Symbol ","}* {strict}
	"Attributes"[0-9]* -> P-Attributes {strict}
	"Attr*"[0-9]* -> {P-Attr ","}* {strict}
	"Attr+"[0-9]* -> {P-Attr ","}+ {strict}
	"CCs"[0-9]* -> ATerm {strict}
	"CC"[0-9]* -> ATerm {strict}
	"CC*"[0-9]* -> {ATerm ","}* {strict}
	"Production"[0-9]* -> Production {strict}
	"AFun"[0-9]* -> AFun {strict}
	"PCC"[0-9]* -> P-Symbol {strict}
	"CR"[0-9]* -> CharRange {strict}
	"CR*"[0-9]* -> {CharRange ","}* {strict}
	"CRs"[0-9]* -> CharRanges {strict}
	"ATerm*"[0-9]* -> {ATerm ","}* {strict}
	"ATerm"[0-9]* -> ATerm {strict}
	"Symbols"[0-9]* -> P-Symbols {strict}
	"Args"[0-9]* -> P-Args {strict}
	"P-Tree*"[0-9]* -> {P-Tree ","}* {strict}
	"Digits"[0-9]* -> P-Args {strict}
	"NatCon"[0-9]* -> NatCon {strict}
	"Module"[0-9]* -> Module {strict}
	"QLit" -> StrCon {strict}
	"Ann"[0-9]* -> P-Annotation {strict}

variables
	"_Attr+"[0-9]* -> {P-Attr ","}+ {wild}
	"_QLit" -> StrCon {wild}
	"_Args" -> P-Args {wild}
	"_Symbols" -> P-Symbols {wild}
	"_Attributes"[0-9]* -> P-Attributes {wild}
	"_Name"[0-9]* -> P-Tree {wild}
	"_" "BO"|"BC" -> P-Tree {wild}
	"_L"[0-9]* -> P-Tree {wild}
	"_Symbol" -> P-Symbol {wild}
	"_P-Tree"[0-9]* -> P-Tree {wild}
	"_Tree"[0-9]* -> P-Tree {wild}
	"_Attr*"[0-9]* -> {P-Attr ","}* {wild}
	"_Ann"[0-9]* -> P-Annotation {wild}
 
