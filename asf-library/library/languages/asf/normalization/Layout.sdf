module languages/asf/normalization/Layout

imports languages/asf/normalization/RenamedTree
imports languages/asf/normalization/RenamedASF
imports languages/asf/normalization/RenamedLifting[StrCon]
imports basic/Booleans
imports basic/Strings
imports basic/Integers
imports basic/Identifiers

%% This module deals with Rewriting with Layout
%% 
%% It introduces variables where abstraction from layout is
%% necessary, and lifts explicit matches and construction from 
%% layout to the toplevel (removing the arbitrary layout that occurs
%% in equations)

exports

context-free syntax

normalize-layout(Module) -> Module

hiddens

context-free start-symbols
	P-Tree
	P-Args
	Module
	Equation
	Condition
	Boolean
	

context-free syntax

fix-layout(Module)     -> Module {traversal(trafo,top-down,break)}
fix-layout(Equation) -> Equation {traversal(trafo,top-down,break)}
fix-layout(Condition) -> Condition {traversal(trafo,top-down,break)}

context-free syntax

match-layout(P-Tree, Integer) -> <P-Tree, Integer> {traversal(accu,trafo,top-down,break)}
build-layout(P-Tree) -> P-Tree {traversal(trafo,top-down,break)}

context-free syntax

find-layout(P-Tree,P-Args) -> P-Args {traversal(accu,top-down,break)}
is-lexical-constructor(P-Tree) -> Boolean
is-layout(P-Tree) -> Boolean
is-literal(P-Tree) -> Boolean
is-layout-variable(P-Tree) -> Boolean
is-variable(P-Tree) -> Boolean
layout-to-list-variable(P-Tree) -> P-Tree
space() -> P-Tree
make-layout(P-Args) -> P-Tree
variable-layout(Integer) -> P-Tree
variable-literal(Integer,  P-Symbol) -> P-Tree
get-literal-symbol(P-Tree) -> P-Symbol

variables

"Symbols"[0-9]* -> P-Symbols	{strict}
"Symbol"[0-9]*  -> P-Symbol	{strict}
"Attr*"[0-9]* -> {P-Attr ","}*	{strict}
"Attributes"[0-9]* -> P-Attributes	{strict}
"Args"[0-9]* -> P-Args		{strict}
"Tree"[0-9]* -> P-Tree		{strict}
"Tree*"[0-9]* -> {P-Tree ","}* 	{strict}
"Tree+"[0-9]* -> {P-Tree ","}+ 	{strict}
"Module"[0-9]* -> Module	{strict}
"Equation"[0-9]* -> Equation	{strict}
"Condition"[0-9]* -> Condition	{strict}
"Cond+"[0-9]* -> {Condition ","}+	{strict}
"Lhs"[0-9]* -> P-Tree 		{strict}
"Rhs"[0-9]* -> P-Tree 		{strict}
"Ann"[0-9]* -> P-Annotation	{strict}
"$"?"Var"[0-9]* -> StrCon		{strict}
"Int"[0-9]* -> Integer              {strict}
"Nat"[0-9]* -> NatCon               {strict}
"Lit"[0-9]* -> StrCon               {strict}

variables

"_Nat"[0-9]* -> NatCon              {wild}
"_Int"[0-9]* -> Integer             {wild}
"_Symbols"[0-9]* -> P-Symbols	{wild}
"_Symbol"[0-9]*  -> P-Symbol	{wild}
"_Attr*"[0-9]* -> {P-Attr ","}*	{wild}
"_Args"[0-9]* -> P-Args		{wild}
"_Tree*"[0-9]* -> {P-Tree ","}* {wild}
"_Attrs"[0-9]* -> P-Attributes 	{wild}
"_Tree"[0-9]* -> P-Tree		{wild}
"_Ann"[0-9]* -> P-Annotation 	{wild}
"_Lit"[0-9]* -> StrCon              {wild}