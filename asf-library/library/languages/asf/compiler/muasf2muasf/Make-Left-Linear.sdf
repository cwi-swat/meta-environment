module languages/asf/compiler/muasf2muasf/Make-Left-Linear

imports languages/asf/compiler/muasf/MuASF-Equations-Ops


exports
  context-free syntax
    make-left-linear(Module) -> Module

hiddens
  context-free syntax
    make-l-l-ruleopt(RulesOpt)         -> RuleList
    make-l-l-rules({Rule ";"}*,VarEnv) -> RuleList
    make-l-l-rule(Rule,VarEnv)         -> Rule
%% The second argument of the next four functions
%% contains the variables defined in the specification.
%% The third argument contains the variables used
%% in this rule.
  context-free syntax
    make-l-l-lhs(Term,VarEnv,IntVarEnv)          -> Term-CList-VarEnv
    make-l-l-terms({Term ","}+,VarEnv,IntVarEnv) -> Term-CList-VarEnv
    make-l-l-term(Term,VarEnv,IntVarEnv)         -> Term-CList-VarEnv
    make-l-l-conds({Cond "&"}+,VarEnv,IntVarEnv) -> CList-VarEnv
    make-l-l-cond(Cond,VarEnv,IntVarEnv)         -> CList-VarEnv

  context-free syntax
    make-eq-cond(Term,Term) -> Cond

  context-free start-symbols
	Module
	Rule
	Term-CList-VarEnv
	CList-VarEnv
	Boolean
	Integer
	Term

  variables
    "SpecVarenv"[0-9]* -> VarEnv
    "RuleVarenv"[0-9]* -> IntVarEnv
	"Cond*"[0-9]* -> {Cond "&"}*
	"Cond+"[0-9]* -> {Cond "&"}+
	"Cond"[0-9]* -> Cond
	"Aint"[0-9]* -> Integer
	"Var"[0-9]* -> VarId
	"Modid"[0-9]* -> ModId
	"Varid"[0-9]* -> FunId
	"Character"[0-9]* -> NatCon

