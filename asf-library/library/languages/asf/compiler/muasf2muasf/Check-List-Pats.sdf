module languages/asf/compiler/muasf2muasf/Check-List-Pats

imports languages/asf/compiler/muasf2muasf/Remove-Lists-Aux


exports
  context-free syntax
    rule-contains-list-vars(Rule)     -> Boolean
    rule-contains-lists(Rule)         -> Boolean
    is-special-rule(Rule)             -> Boolean
    is-like-rule(FunId,Rule)          -> Boolean
    is-lhs(FunId,Term)                -> Boolean
    is-rhs(FunId,Term)                -> Boolean
    is-list-elem-list-elem-list(Term) -> Boolean
    is-list-elem-list-list(Term)      -> Boolean
    is-list-list-elem-list(Term)      -> Boolean
    contains-lhs-pattern(FunId,Term)  -> Boolean
    contains-rhs-pattern(FunId,Term)  -> Boolean

hiddens
  context-free syntax
    conds-contains-list-vars({Cond "&"}*) -> Boolean
    cond-contains-list-vars(Cond)         -> Boolean
    terms-contains-list-vars({Term ","}*) -> Boolean
    term-contains-list-vars(Term)         -> Boolean
  context-free syntax
    conds-contains-lists({Cond "&"}*) -> Boolean
    cond-contains-lists(Cond)         -> Boolean
    terms-contains-lists({Term ","}*) -> Boolean
    term-contains-lists(Term)         -> Boolean
  context-free syntax
    are-lhs-args(FunId,{Term ","}+)     -> Boolean
    are-rhs-args(FunId,{Term ","}+)     -> Boolean

exports
  context-free syntax
    contains-zero-or-one-list-vars-in-rule(Rule)         -> Boolean
    contains-zero-or-one-list-vars-in-terms({Term ","}+) -> Boolean
    contains-zero-or-one-list-vars-in-term(Term)         -> Boolean
    contains-zero-or-one-list-vars-in-list(Term)         -> Boolean
    contains-zero-or-one-list-vars-in-conds({Cond "&"}+) -> Boolean
    contains-zero-or-one-list-vars-in-cond(Cond)         -> Boolean
    contains-no-list-var(Term)                           -> Boolean

hiddens

variables
	"Cond"[0-9]* -> Cond
	"Cond+"[0-9]* -> {Cond "&"}+
	"Cond*"[0-9]* -> {Cond "&"}*
	"Bool"[0-9]* -> Boolean
	"Funid"[0-9]* -> FunId
	"Varid"[0-9]* -> FunId
