module languages/fdl/check/Check-Value-FDL

imports languages/fdl/check/Check-FDL
        languages/fdl/syntax/Value-FDL
        languages/fdl/check/Value-FDL-Error-API
        languages/fdl/utilities/Flatten-FDL
        containers/Table[AtomicFeature ValueType]
        containers/Set[FeatureExpression]

hiddens
context-free start-symbols
  Summary List[[FDL-Error]] FeatureDiagram TypeEnv Boolean FeatureExpression

exports
aliases
  Table[[AtomicFeature,ValueType]] -> TypeEnv

sorts TypeEnv

context-free syntax
  check-value-fdl-summary(FeatureDiagram)                 -> Summary                                               
  check-value-fdl(FeatureDiagram)                         -> List[[FDL-Error]]                                     

  normalize-sections(FeatureDiagram)                      -> FeatureDiagram                                        
  normalize-features-section(FeatureDiagram)              -> FeatureDiagram                                        
  normalize-constraints-section(FeatureDiagram)           -> FeatureDiagram                                        
  normalize-types-section(FeatureDiagram)                 -> FeatureDiagram                                        
  normalize-specialization-section(FeatureDiagram)        -> FeatureDiagram                                        

  normalize-atomic-features(FeatureDiagram)               -> FeatureDiagram    {traversal(trafo, top-down, break)} 
  normalize-atomic-features(AtomicFeature)                -> AtomicFeature     {traversal(trafo, top-down, break)} 

  build-type-environment(FeatureDiagram)                  -> TypeEnv                                               
  build-type-environment(ValueDeclaration*, TypeEnv)      -> TypeEnv                                               
  add-feature-type(ValueDeclaration, TypeEnv)             -> TypeEnv                                               

  check-type(ValueType, FeatureType)                      -> Boolean                                               
  <TypeEnv,List[[FDL-Error]]>                             -> ErrorInfo                                             
  check-for-type-mismatch(FeatureDiagram, ErrorInfo)      -> ErrorInfo         {traversal(accu, top-down, break)}  
  check-for-type-mismatch(AtomicFeature, ErrorInfo)       -> ErrorInfo         {traversal(accu, top-down, break)}  

hiddens
variables
  "$atomicfeature" [0-9\']*      -> AtomicFeature             
  "$boolcon" [0-9\']*            -> BoolCon                   
  "$color" [0-9\']*              -> Color                     
  "$constraint*" [0-9\']*        -> Constraint*               
  "$fdl-error" [0-9\']*          -> FDL-Error                 
  "$fdl-errorlist" [0-9\']*      -> List[[FDL-Error]]         
  "$featuredefinition*" [0-9\']* -> FeatureDefinition*        
  "$featurediagram" [0-9\']*     -> FeatureDiagram            
  "$featureexpression" [0-9\']*  -> FeatureExpression         
  "$featureexpression+" [0-9\']* -> {FeatureExpression ","}+  
  "$featureexpression*" [0-9\']* -> {FeatureExpression ","}*  
  "$featuretype" [0-9\']*        -> FeatureType               
  "$natcon" [0-9\']*             -> NatCon                    
  "$section*" [0-9\']*           -> Section*                  
  "$set" [0-9\']*                -> Set[[FeatureExpression]]  
  "$strcon" [0-9\']*             -> StrCon                    
  "$typeenv" [0-9\']*            -> TypeEnv                   
  "$valuedeclaration*" [0-9\']*  -> ValueDeclaration*         
  "$valuetype" [0-9\']*          -> ValueType                 
