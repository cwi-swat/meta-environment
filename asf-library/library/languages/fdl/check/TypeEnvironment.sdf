module languages/fdl/check/TypeEnvironment

imports languages/fdl/syntax/Modular-FDL
imports containers/Table[AtomicFeature ValueType]

exports
aliases
  Table[[AtomicFeature,ValueType]] -> TypeEnv

sorts TypeEnv

context-free syntax
  construct-type-environment(FeatureModule)   -> TypeEnv                                     

  get-types(ValueDeclaration*, TypeEnv)       -> TypeEnv {traversal(accu, top-down, break)}                                     
  get-types(ValueDeclaration, TypeEnv)        -> TypeEnv {traversal(accu, top-down, break)}

  get-features(FeatureDefinition*, TypeEnv)   -> TypeEnv {traversal(accu, bottom-up, break)} 
  get-features(AtomicFeature, TypeEnv)        -> TypeEnv {traversal(accu, bottom-up, break)} 

hiddens
variables
  "AtomicFeature" [0-9]*      -> AtomicFeature       
  "FeatureDefinition*" [0-9]* -> FeatureDefinition*  
  "Modulename" [0-9]*         -> Modulename          
  "Section*" [0-9]*           -> Section             
  "TypeEnv" [0-9]*            -> TypeEnv             
  "ValueDeclaration*" [0-9]*  -> ValueDeclaration*   
  "ValueType" [0-9]*          -> ValueType           
