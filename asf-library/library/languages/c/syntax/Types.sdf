module languages/c/syntax/Types
imports languages/c/syntax/Identifiers
imports languages/c/syntax/Declarators
imports languages/c/syntax/Expressions

exports
  sorts  TypeQualifierList IdentifierList ParameterTypeList TypedefName
  context-free syntax
    SueDeclarationSpecifier ";" -> Declaration 
    SueTypeSpecifier ";"        -> Declaration 
    DeclaringList ";"           -> Declaration 
    DefaultDeclaringList ";"    -> Declaration 

  context-free syntax
    DeclarationQualifierList 	IdentifierDeclarator InitializerOpt? -> DefaultDeclaringList 
    TypeQualifierList 		IdentifierDeclarator InitializerOpt? -> DefaultDeclaringList 
    DefaultDeclaringList "," 	IdentifierDeclarator InitializerOpt? -> DefaultDeclaringList 

  context-free syntax
    DeclarationSpecifier Declarator InitializerOpt? -> DeclaringList 
    TypeSpecifier 	 Declarator InitializerOpt? -> DeclaringList 
    DeclaringList "," 	 Declarator InitializerOpt? -> DeclaringList 

  context-free syntax
    BasicDeclarationSpecifier   -> DeclarationSpecifier
    SueDeclarationSpecifier     -> DeclarationSpecifier
    TypedefDeclarationSpecifier -> DeclarationSpecifier

  context-free syntax
    BasicTypeSpecifier   -> TypeSpecifier
    SueTypeSpecifier     -> TypeSpecifier

  context-free syntax
    StorageClass                                  -> DeclarationQualifierList
    TypeQualifierList StorageClass                -> DeclarationQualifierList 
    DeclarationQualifierList DeclarationQualifier -> DeclarationQualifierList 

  context-free syntax
    TypeQualifier+ -> TypeQualifierList

  context-free syntax
    StorageClass  -> DeclarationQualifier
    TypeQualifier -> DeclarationQualifier

  context-free syntax
    "const"    -> TypeQualifier 
    "volatile" -> TypeQualifier 

  context-free syntax
    DeclarationQualifierList BasicTypeName         -> BasicDeclarationSpecifier 
    BasicTypeSpecifier StorageClass                -> BasicDeclarationSpecifier 
    BasicDeclarationSpecifier DeclarationQualifier -> BasicDeclarationSpecifier 
    BasicDeclarationSpecifier BasicTypeName        -> BasicDeclarationSpecifier 

  context-free syntax
    BasicTypeName                    -> BasicTypeSpecifier 
    TypeQualifierList BasicTypeName  -> BasicTypeSpecifier 
    BasicTypeSpecifier TypeQualifier -> BasicTypeSpecifier 
    BasicTypeSpecifier BasicTypeName -> BasicTypeSpecifier 

  context-free syntax
    DeclarationQualifierList ElaboratedTypeName  -> SueDeclarationSpecifier 
    SueTypeSpecifier StorageClass                -> SueDeclarationSpecifier 
    SueDeclarationSpecifier DeclarationQualifier -> SueDeclarationSpecifier 

  context-free syntax
    ElaboratedTypeName                   -> SueTypeSpecifier 
    TypeQualifierList ElaboratedTypeName -> SueTypeSpecifier 
    SueTypeSpecifier TypeQualifier       -> SueTypeSpecifier 

  context-free syntax
    BasicTypeSpecifier StorageClass                  -> TypedefDeclarationSpecifier 
    DeclarationQualifierList TypedefName             -> TypedefDeclarationSpecifier 
    TypedefDeclarationSpecifier DeclarationQualifier -> TypedefDeclarationSpecifier 

  context-free syntax
    TypeQualifierList Identifier       -> TypedefTypeSpecifier 
    TypedefTypeSpecifier TypeQualifier -> TypedefTypeSpecifier 

  context-free syntax
    "typedef"  -> StorageClass 
    "extern"   -> StorageClass 
    "static"   -> StorageClass 
    "auto"     -> StorageClass 
    "register" -> StorageClass 

  context-free syntax
    "int"      -> BasicTypeName 
    "char"     -> BasicTypeName 
    "short"    -> BasicTypeName 
    "long"     -> BasicTypeName 
    "float"    -> BasicTypeName 
    "double"   -> BasicTypeName 
    "signed"   -> BasicTypeName 
    "unsigned" -> BasicTypeName 
    "void"     -> BasicTypeName
    Identifier -> BasicTypeName 

  context-free syntax
    StructSpecifier -> ElaboratedTypeName
    UnionSpecifier -> ElaboratedTypeName
    EnumSpecifier -> ElaboratedTypeName

  context-free syntax
    "struct" Identifier? "{" MemberDeclarationList "}" -> StructSpecifier 
    "struct" Identifier                                -> StructSpecifier 

  context-free syntax
    "union" Identifier? "{" MemberDeclarationList "}" -> UnionSpecifier 
    "union" Identifier                                -> UnionSpecifier 

  context-free syntax
    MemberDeclaration+ -> MemberDeclarationList

  context-free syntax
    TypeSpecifier {MemberDeclarator ","}+ ";" 		    -> MemberDeclaration 
    TypeQualifierList {MemberIdentifierDeclarator ","}+ ";" -> MemberDeclaration 

   %% MemberDeclaringList ";"        -> MemberDeclaration 
   %% MemberDefaultDeclaringList ";" -> MemberDeclaration 

  %%context-free syntax
  %%  TypeQualifierList MemberIdentifierDeclarator  -> MemberDefaultDeclaringList {cons("TypeQualifierList-MemberIdentifierDeclarator")}
  %%  MemberDefaultDeclaringList "," MemberIdentifierDeclarator -> MemberDefaultDeclaringList 

  %%context-free syntax
  %%  TypeSpecifier MemberDeclarator           -> MemberDeclaringList {cons("TypeSpecifier-MemberDeclarator")}
  %%  MemberDeclaringList "," MemberDeclarator -> MemberDeclaringList 

  context-free syntax
    IdentifierDeclarator BitFieldSizeOpt -> MemberDeclarator 
    BitFieldSize                         -> MemberDeclarator

   context-free syntax
    IdentifierDeclarator BitFieldSizeOpt -> MemberIdentifierDeclarator 
    BitFieldSize                         -> MemberIdentifierDeclarator

  context-free syntax
    BitFieldSize? -> BitFieldSizeOpt

  context-free syntax
    ":" Expression -> BitFieldSize 

  context-free syntax
    "enum" Identifier? "{" {Enumerator ","}+ "}" -> EnumSpecifier 
    "enum" Identifier                         -> EnumSpecifier 

  context-free syntax
    Identifier EnumeratorValue? -> Enumerator 


  context-free syntax
    "=" Expression -> EnumeratorValue 

  context-free syntax
    ParameterList           -> ParameterTypeList
    ParameterList "," "..." -> ParameterTypeList 

  context-free syntax
    {ParameterDeclaration ","}+ -> ParameterList

  context-free syntax
    (DeclarationSpecifier | TypeSpecifier)  -> ParameterDeclaration

    (DeclarationSpecifier | TypeSpecifier)  
    (AbstractDeclarator | IdentifierDeclarator | ParameterTypedefDeclarator) -> ParameterDeclaration {prefer}


    (DeclarationQualifierList | TypeQualifierList)
    (AbstractDeclarator | IdentifierDeclarator)? -> ParameterDeclaration 

  context-free syntax
    {Identifier ","}+ -> IdentifierList

  context-free syntax
    (TypeSpecifier | TypeQualifierList) AbstractDeclarator? -> TypeName 

  context-free syntax
    "=" Initializer -> InitializerOpt 

  context-free syntax
    "{" {Initializer ","}+ ","? "}" -> Initializer 
    Expression                      -> Initializer

exports
  sorts  Initializer InitializerOpt TypeName TypeSpecifier ParameterDeclaration DeclarationQualifierList ParameterTypedefDeclarator DeclarationSpecifier ParameterList EnumeratorValue Enumerator EnumSpecifier BitFieldSize BitFieldSizeOpt MemberIdentifierDeclarator MemberDeclarator MemberDeclaration MemberDeclarationList UnionSpecifier StructSpecifier ElaboratedTypeName BasicTypeName StorageClass TypedefTypeSpecifier TypeQualifier TypedefDeclarationSpecifier DeclarationQualifier SueTypeSpecifier SueDeclarationSpecifier BasicTypeSpecifier BasicDeclarationSpecifier DeclaringList DefaultDeclaringList Declaration 
