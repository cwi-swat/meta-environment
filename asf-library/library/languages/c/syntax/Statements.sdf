module Statements
imports Expressions
exports
  sorts  JumpStatement IterationStatement Statement SelectionStatement ExpressionStatement CompoundStatement LabeledStatement 

  context-free syntax
    LabeledStatement    -> Statement
    CompoundStatement   -> Statement
    ExpressionStatement -> Statement
    SelectionStatement  -> Statement
    IterationStatement  -> Statement
    JumpStatement       -> Statement

  context-free syntax
    Identifier ":" Statement   -> LabeledStatement 
    "case" Expression ":" Statement         -> LabeledStatement 
    "default" ":" Statement                 -> LabeledStatement 

  context-free syntax
    "{" Declaration* Statement* "}" -> CompoundStatement 

  context-free syntax
    CommaExpressionOpt ";" -> ExpressionStatement 

  context-free syntax
    "if" "(" CommaExpression ")" Statement                  -> SelectionStatement 
    "if" "(" CommaExpression ")" Statement "else" Statement -> SelectionStatement 
    "switch" "(" CommaExpression ")" Statement              -> SelectionStatement 

  context-free syntax
    "while" "(" CommaExpression ")" Statement -> IterationStatement 
    "do" Statement "while" "(" CommaExpression ")" ";" -> IterationStatement 
    "for" "(" CommaExpressionOpt ";" CommaExpressionOpt ";" CommaExpressionOpt ")" Statement -> IterationStatement 

  context-free syntax
    "goto" Identifier ";" -> JumpStatement 
    "continue" ";"                     -> JumpStatement 
    "break" ";"                        -> JumpStatement 
    "return" CommaExpressionOpt ";"    -> JumpStatement 
    "exit" CommaExpressionOpt ";"      -> JumpStatement 

