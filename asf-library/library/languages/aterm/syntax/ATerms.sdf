module languages/aterm/syntax/ATerms
imports languages/aterm/syntax/Literals 
        languages/aterm/syntax/IntCon 
        languages/aterm/syntax/RealCon
exports
  context-free start-symbols ATermList ACon AFun ATerm Ann
  sorts ATermList ACon AFun ATerm Ann
  context-free syntax
    "[" elems:{ ATerm ","}* "]"       -> ATermList {cons("not-empty")}
    IntCon                            -> ACon      {cons("int")}
    RealCon                           -> ACon      {cons("real")}
    Literal                           -> AFun
    ACon                              -> ATerm     {cons("constant")}
    list:ATermList                    -> ATerm     {cons("list")}
    fun:AFun                          -> ATerm     {cons("fun")}
    fun:AFun "(" args:{ ATerm ","}+ ")"      -> ATerm     {cons("appl")}
    "<" type:ATerm ">" -> ATerm {cons("placeholder")}
    "{" annos:{ ATerm ","}+ "}"                    -> Ann       {cons("annotation")}
    ACon Ann                          -> ATerm     {cons("annotated-constant")}
    list:ATermList Ann                -> ATerm     {cons("annotated-list")}
    fun:AFun Ann                      -> ATerm     {cons("annotated-fun")}
    fun:AFun "(" args:{ ATerm ","}+ ")" Ann  -> ATerm     {cons("annotated-appl")}
    "<" type:ATerm ">" Ann -> ATerm {cons("annotated-placeholder")}