module languages/sdf2/normalization/Sdf2-Normalization

imports
        languages/sdf2/projection/Sdf2-Projection
        languages/sdf2/renaming/Sdf2-Renaming
        languages/sdf2/normalization/Modular
        languages/sdf2/normalization/Priority
        languages/sdf2/normalization/Regular
        languages/sdf2/normalization/Lifting
        languages/sdf2/normalization/Literals
        languages/sdf2/normalization/Sorts
        languages/sdf2/normalization/Start-Symbols
        languages/sdf2/normalization/Restrictions
        languages/sdf2/normalization/Aliases

exports
  context-free syntax
    normalize(SDF)               -> Grammar
    normalize(ModuleName, SDF)   -> Grammar

hiddens
  context-free start-symbols
    Grammar

  context-free syntax
    "normalize" "[[" SDF "]]" "(" ModuleName "," Symbol ")" -> Grammar
    "topsorts" "[[" Grammar "]]" "(" Symbol ")"             -> Grammar
    adapt-arguments({NatCon ","}+) -> {NatCon ","}+

%% \def\InterferenceSYN{

exports
  context-free syntax
    "<" Priorities "-LEXp" ">"  -> Priorities
    "<" Priorities "-CFp" ">"   -> Priorities
    "<" Restrictions "-LEX" ">" -> Restrictions
    "<" Restrictions "-CF" ">"  -> Restrictions
    "<" Symbols "-CFr" ">"  -> Symbols
hiddens
  variables
    "L"[0-9\']*         -> Literal
    "_G"[0-9\']*        -> Grammar 
    "_"[ABC][0-9\']*    -> Symbol
    "'"[abc][0-9\']*    -> Symbol*
    "'"[abc]"+"[0-9\']* -> Symbol+
    "_S"[0-9\']*        -> Sort
    "'"[s][0-9\']*      -> Sort* 
    "d"[0-9\']*         -> Definition
    "M"[0-9\']*         -> ModuleName
    "cc"[0-9\']*        -> CharClass
    "pr""*"[0-9\']*     -> {Priority ","}*
    "pr""+"[0-9\']*     -> {Priority ","}+
    [p]"*"[0-9\']*      -> Production*
    [p][0-9\']*         -> Production
    "as"[0-9\']*        -> Associativity
    "restr*"[0-9\']*    -> Restriction* 
    "restr+"[0-9\']*    -> Restriction+ 
    "las"[0-9\']*       -> Lookaheads
    "al*"[0-9\']*       -> Alias* 
    "n"[0-9]*           -> NatCon
    "n+"[0-9]*          -> {NatCon ","}+ 
%%}
