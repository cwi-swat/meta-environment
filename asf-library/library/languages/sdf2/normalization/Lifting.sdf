module languages/sdf2/normalization/Lifting


imports languages/sdf2/syntax/Regular
        languages/sdf2/syntax/Literals
        languages/sdf2/syntax/Lifting
        languages/sdf2/syntax/Sorts
        languages/sdf2/normalization/Kernel

exports

context-free syntax

  "lift[[" Grammar "]]" -> Grammar

hiddens

context-free syntax
    lift(Grammar)   -> Grammar {traversal(trafo, top-down, break)}
    lift(Symbol)    -> Symbol {traversal(trafo, top-down, break)}
    sym2syntax(Symbol)            -> Symbol 
    symbols2syntax({Symbol ","}+) -> Symbol* 

hiddens
context-free syntax
   sort2str(Sort) -> StrCon

  variables 
    "_G"[0-9\']*        -> Grammar  
    "_"[ABC][0-9\']*    -> Symbol
    "'"[abc][0-9\']*    -> Symbol*
    "'"[abc]"+"[0-9\']* -> Symbol+
    "'"[abc]",+"[0-9]*  -> {Symbol ","}+
    [p][0-9\']*         -> Production 
    [n][0-9\']*         -> NatCon 
    "Sort"[0-9\']*      -> Sort

  lexical variables
    "C*"[0-9\']* -> StrChar*
    "S*"[0-9\']* -> SingleQuotedStrChar*
    "C"[0-9\']* -> StrChar*
    "h"[0-9]* -> [A-Z]
    "m*"[0-9]* -> [A-Za-z0-9\-]*
    "m+"[0-9]* -> [A-Za-z0-9\-]*
    "m"[0-9]* -> [A-Za-z0-9\-]
    "l"[0-9]* -> [A-Za-z0-9]
