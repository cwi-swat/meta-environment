module sdf2/normalization/Literals
imports
        sdf2/syntax/Literals
        sdf2/normalization/CC
exports
  context-free syntax
    "l[[" Grammar "]]"     -> Grammar
    "q[[" Grammar "]]"     -> Grammar
    literals(SymbolSet)    -> Productions
    chars(Literal)         -> Symbols
    symbols({Symbol ","}*) -> Symbols

hiddens
  context-free syntax
    quotes(Grammar) -> Grammar {traversal(trafo)}
    quotes(Symbol)  -> Symbol  {traversal(trafo)}

hiddens
  variables
    "c"[0-9\']*         -> CHAR
    "c+"[0-9\']*        -> CHAR+
    "c*"[0-9\']*        -> CHAR*
    "L"                 -> Literal
    "UQL"               -> UQLiteral
    "'g"[0-9\']*        -> {Symbol ","}*
    "'g+"[0-9\']*       -> {Symbol ","}+
    "_G"[0-9\']*        -> Grammar 
    "_"[ABC][0-9\']*    -> Symbol
    "'"[abc]"+"[0-9\']* -> Symbol+
    "'"[abc][0-9\']*    -> Symbol* 
    "!"[0-9\']*         -> Attributes
    "cc"[0-9\']*        -> CharClass 
