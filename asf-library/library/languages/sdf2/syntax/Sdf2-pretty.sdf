module Sdf2-pretty

imports languages/sdf2/syntax/Sdf2
imports languages/box/syntax/Box
imports languages/box/utilities/PPSeparatedList["Group" Group ">"]
imports languages/box/utilities/PPList["Symbol" Symbol]

exports
  context-free syntax
    afun2box(AFun) -> Box {to-box}
    atermplist2box({ATerm ","}+) -> Box {to-box}
    attributes2box(Attributes) -> Box {to-box}
    attributeslist2box({Attribute ","}*) -> Box {to-box}
    grammar2box(Grammar) -> Box {to-box}
    impsections2box(ImpSection*) -> Box {to-box}
    literal2box(Literal) -> Box {to-box}
    modulename2box(ModuleName) -> Box {to-box}
    productions2box(Productions) -> Box {to-box}
    sections2box(Sections) -> Box {to-box}
    symbol2box(Symbol) -> Box {to-box}

    box2aterm(Box) -> ATerm {from-box}
    box2attributes(Box) -> Attributes {from-box}
    box2grammar(Box) -> Grammar {from-box}
    box2module(Box) -> Module {from-box}
    box2priority(Box) -> Priority {from-box}
    box2production(Box) -> Production {from-box}
    box2symbol(Box) -> Symbol {from-box}

hiddens
  context-free start-symbols Box ImpSection*

  variables
    "AFun" -> AFun
    "ATerm+" -> {ATerm ","}+
    "Attributes" -> Attributes
    "Attribute*" -> {Attribute ","}*
    "Box" -> Box
    "Box*" -> Box*
    "Grammar"[0-9]* -> Grammar
    "Group" -> Group
    "Group+" -> {Group ">"}+
    "Import" -> Import
    "Import+" -> Import+
    "Import*" -> Import*
    "ImpSection*"[0-9]* -> ImpSection*
    "Literal" -> Literal
    "ModuleName" -> ModuleName
    "Productions" -> Productions
    "Sections" -> Sections
    "Symbol" -> Symbol
    "Symbol+" -> Symbol+
