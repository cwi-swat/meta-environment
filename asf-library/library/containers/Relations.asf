equations

[product-nil-any]
	product({}, yset) = {}

[product-single-nil]
	product({x}, {}) = {}

[product-single-cons]
	product({x}, {y, y*}) = union({<x, y>}, product({x}, {y*}))

[product-many-nil]
	product({x, x+}, yset) = 
		union(product({x}, yset), product({x+}, yset))


equations

[domain-nil]
	domain({}) = {}

[domain-cons]
	domain({<x,y>, xy*}) = insert(x, domain({xy*}))

equations

[range-nil]
	range({}) = {}

[range-cons]
	range({<x,y>, xy*}) = insert(y, range({xy*}))

equations

[image-nil]
	image({}, xset) = {}

[image-cons-1]
	element-of(x, xset) == true
	===
	image({<x,y>, xy*}, xset) = insert(y, image({xy*}, xset))

[image-cons-2]
	element-of(x, xset) == false
	===
	image({<x,y>, xy*}, xset) = image({xy*}, xset)


equations

[domain-restriction-nil]
	domain-restriction({}, xset) = {}

[domain-restriction-cons-1]
	element-of(x, xset) == true
	===
	domain-restriction({<x,y>, xy*}, xset) =
		insert(<x, y>, domain-restriction({xy*}, xset))

[default-domain-restriction-cons-2]
	domain-restriction({<x,y>, xy*}, xset) =
		domain-restriction({xy*}, xset)

equations

[range-restriction-nil]
	range-restriction({}, yset) = {}

[range-restriction-cons-1]
	element-of(y, yset) == true
	===
	range-restriction({<x,y>, xy*}, yset) =
		insert(<x, y>, range-restriction({xy*}, yset))

[default-range-restriction-cons-2]
	range-restriction({<x,y>, xy*}, yset) =
		range-restriction({xy*}, yset)

equations

[domain-exclusion-nil]
	domain-exclusion({}, xset) = {}

[domain-exclusion-cons-1]
	element-of(x, xset) == true
	===
	domain-exclusion({<x, y>, xy*}, xset) =
		domain-exclusion({xy*}, xset)

[default-domain-exclusion-cons-2]
	domain-exclusion({<x, y>, xy*}, xset) =
		insert(<x, y>, domain-exclusion({xy*}, xset))

equations

[range-exclusion-nil]
	range-exclusion({}, yset) = {}

[range-exclusion-cons-1]
	element-of(y, yset) == true
	===
	range-exclusion({<x,y>, xy*}, yset) =
		range-exclusion({xy*}, yset)

[default-range-exclusion-cons-2]
	range-exclusion({<x,y>, xy*}, yset) =
		insert(<x, y>, range-exclusion({xy*}, yset))


tests

[product-empty-empty]
	product({}, {}) == {}

[product-empty-non-empty]
	product({}, {1,2,3}) == {}

[product-square]
	equal(product({1,2}, {2,1}), {<1,2>,<2,1>,<1,1>,<2,2>}) == true

[product-singleton-some]
	equal(product({1}, {1,2,3}), {<1,1>,<1,2>,<1,3>}) == true

tests

[domain-single]
	domain({<1,2>}) == {1}

[domain-many-unique]
	equal(domain({<1,2>, <3,4>}), {1,3}) == true

[domain-many-duplicates]
	equal(domain({<3,2>, <3,4>}), {3}) == true


tests

[range-single]
	range({<1,2>}) == {2}

[range-many-unique]
	equal(range({<1,2>, <3,4>}), {2,4}) == true

[range-many-duplicates]
	equal(range({<1,4>, <3,4>}), {4}) == true


tests

[image-empty-empty]
	image({}, {}) == {}

[image-empty-many]
	image({}, {1,2,3}) == {}

[image-many-empty]
	image({<1,2>,<3,4>}, {}) == {}

[image-many-single-unique]
	image({<1,2>,<3,4>}, {1}) == {2}

[imange-many-many-unique]
	equal(image({<1,2>,<3,4>}, {1,3}), {2,4}) == true


tests

[domain-restriction-empty-empty]
	domain-restriction({}, {}) == {}

[domain-restriction-nonempty-empty]
	domain-restriction({<1, 2>, <3, 4>}, {}) == {}

[domain-restriction-nonempty-nonempty]
	domain-restriction({<1, 2>, <3, 4>}, {3}) == {<3, 4>}

tests

[range-restriction-empty-empty]
	range-restriction({}, {}) == {}

[range-restriction-nonempty-empty]
	range-restriction({<1, 2>, <3, 4>}, {}) == {}

[range-restriction-nonempty-nonempty]
	range-restriction({<1, 2>, <3, 4>}, {4}) == {<3, 4>}

tests

[domain-exclusion-empty-empty]
	domain-exclusion({}, {}) == {}

[domain-exclusion-nonempty-empty]
	equal(domain-exclusion({<1, 2>, <3, 4>}, {}), {<1, 2>, <3, 4>}) == true

[domain-exclusion-nonempty-nonempty]
	domain-exclusion({<1, 2>, <3, 4>}, {3}) == {<1, 2>}

tests

[range-exclusion-empty-empty]
	range-exclusion({}, {}) == {}

[range-exclusion-nonempty-empty]
	equal(range-exclusion({<1, 2>, <3, 4>}, {}), {<1, 2>, <3, 4>}) == true

[range-exclusion-nonempty-nonempty]
	range-exclusion({<1, 2>, <3, 4>}, {4}) == {<1, 2>}

