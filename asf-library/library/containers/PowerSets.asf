equations

[add-to-each-nil]
	add-to-each(x, {}) = {}

[add-to-each-cons]
	add-to-each(x, {xset, xset*}) = 
		union({insert(x, xset)}, 
			add-to-each(x, {xset*}))


equations

[power-nil]
	power({}) = {{}}

[power-cons]
	xsetset := power({x*})
	===
	power({x, x*}) = union(xsetset, add-to-each(x, xsetset))

equations

[generalized-union-nil]
	generalized-union({}) = {}

[generalized-union-cons]
	generalized-union({xset, xset*}) = union(xset, generalized-union({xset*}))

equations

[generalized-intersection-nil]
	generalized-intersection({}) = {}

[generalized-intersection-cons]
	generalized-intersection({xset, xset*}) = intersection(xset, generalized-intersection({xset*}))

tests

[power-empty]
	power({}) == {{}}

[power-singleton]
	equal(power({1}), {{}, {1}}) == true

[power-two-elements]
	equal(power({1, 2}), {{}, {1}, {2}, {1,2}}) == true

[power-three-elements]
	equal(power({1, 2, 3}), {{}, {1}, {2}, {3}, {1, 2}, {1, 3}, {2, 3}, {1, 2, 3}}) == true