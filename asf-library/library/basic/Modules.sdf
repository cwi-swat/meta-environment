module Modules

exports

context-free start-symbols Module

sorts Module TermCon

context-free syntax
  %% A module has an identifier, optional dependencies and attributes
  "module" "(" id:ModuleId "," "[" {Dependency ","}* "]" "," "[" store:{Attribute ","}* "]"")" -> Module {cons("module")}

sorts ModuleId
context-free syntax
  %% An module id consists of a namespace and some id
  "module-id" "(" namespace:TermCon "," id:TermCon ")" -> ModuleId {cons("module-id")}

sorts Dependency
context-free syntax
  %% A dependency consists of a pair module-id to module-id
  "dependency" "(" from:TermCon "," to:TermCon ")" -> Dependency {cons("dependency")}

sorts Attribute
context-free syntax
  %% An attribute consists of a namespace and a list of table-entries
  "attribute" "(" namespace:TermCon "," "[" table:{TableEntry ","}* "]" ")" -> Attribute {cons("attribute")}

sorts TableEntry
context-free syntax
  %% table-entry pairs are key-value pairs of TermCons
  "table-entry" "(" key:TermCon "," value:TermCon ")" -> TableEntry {cons("table-entry")}
