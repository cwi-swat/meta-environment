equations

%% Removing extra 0's on Integers:

  [1]   natcon(0y) = Nat when Nat := natcon(y)

equations

%% -- addition --
   [2]    0 + Nat = Nat
   [3]    Nat + 0 = Nat
   [4]    1 + 1 = 2     [5]    1 + 2 = 3     [6]    1 + 3 = 4
   [7]    1 + 4 = 5     [8]    1 + 5 = 6     [9]    1 + 6 = 7
   [10]   1 + 7 = 8     [11]   1 + 8 = 9     [12]   1 + 9 = 10
   [13]   2 + 1 = 3     [14]   2 + 2 = 4     [15]   2 + 3 = 5
   [16]   2 + 4 = 6     [17]   2 + 5 = 7     [18]   2 + 6 = 8
   [19]   2 + 7 = 9     [20]   2 + 8 = 10    [21]   2 + 9 = 11
   [22]   3 + 1 = 4     [23]   3 + 2 = 5     [24]   3 + 3 = 6
   [25]   3 + 4 = 7     [26]   3 + 5 = 8     [27]   3 + 6 = 9
   [28]   3 + 7 = 10    [29]   3 + 8 = 11    [30]   3 + 9 = 12
   [31]   4 + 1 = 5     [32]   4 + 2 = 6     [33]   4 + 3 = 7
   [34]   4 + 4 = 8     [35]   4 + 5 = 9     [36]   4 + 6 = 10
   [37]   4 + 7 = 11    [38]   4 + 8 = 12    [39]   4 + 9 = 13
   [40]   5 + 1 = 6     [41]   5 + 2 = 7     [42]   5 + 3 = 8
   [43]   5 + 4 = 9     [44]   5 + 5 = 10    [45]   5 + 6 = 11
   [46]   5 + 7 = 12    [47]   5 + 8 = 13    [48]   5 + 9 = 14
   [49]   6 + 1 = 7     [50]   6 + 2 = 8     [51]   6 + 3 = 9
   [52]   6 + 4 = 10    [53]   6 + 5 = 11    [54]   6 + 6 = 12
   [55]   6 + 7 = 13    [56]   6 + 8 = 14    [57]   6 + 9 = 15
   [58]   7 + 1 = 8     [59]   7 + 2 = 9     [60]   7 + 3 = 10
   [61]   7 + 4 = 11    [62]   7 + 5 = 12    [63]   7 + 6 = 13
   [64]   7 + 7 = 14    [65]   7 + 8 = 15    [66]   7 + 9 = 16
   [67]   8 + 1 = 9     [68]   8 + 2 = 10    [69]   8 + 3 = 11
   [70]   8 + 4 = 12    [71]   8 + 5 = 13    [72]   8 + 6 = 14
   [73]   8 + 7 = 15    [74]   8 + 8 = 16    [75]   8 + 9 = 17
   [76]   9 + 1 = 10    [77]   9 + 2 = 11    [78]   9 + 3 = 12
   [79]   9 + 4 = 13    [80]   9 + 5 = 14    [81]   9 + 6 = 15
   [82]   9 + 7 = 16    [83]   9 + 8 = 17    [84]   9 + 9 = 18

   [85a]  natcon(x c) := natcon(c1) + natcon(c2),
          natcon(y) := natcon (y1) + natcon(y2) + natcon(0 x)
          ===>
          natcon(y1 c1) + natcon(y2 c2) = natcon(y c)

   [85b]  natcon(x c) := natcon(c1) + natcon(c2),
          natcon(y) := natcon(y2) + natcon(0 x)
          ===>
          natcon(c1) + natcon(y2 c2) = natcon(y c)

   [85c]  natcon(x c) := natcon(c1) + natcon(c2),
          natcon(y) := natcon(y1) + natcon(0 x)
          ===>
          natcon(y1 c1) + natcon(c2) = natcon(y c)

equations

   [86]   natcon(c) -// natcon(c) = 0
   [87]   natcon(c) -// 0 = natcon(c)
   [88]   2 -// 1 = 1
   [89]   3 -// 1 = 2     [90]   3 -// 2 = 1
   [91]   4 -// 1 = 3     [92]   4 -// 2 = 2     [93]   4 -// 3 = 1
   [94]   5 -// 1 = 4     [95]   5 -// 2 = 3     [96]   5 -// 3 = 2
   [97]   5 -// 4 = 1
   [98]   6 -// 1 = 5     [99]   6 -// 2 = 4     [100]  6 -// 3 = 3
   [101]  6 -// 4 = 2     [102]  6 -// 5 = 1
   [103]  7 -// 1 = 6     [104]  7 -// 2 = 5     [105]  7 -// 3 = 4
   [106]  7 -// 4 = 3     [107]  7 -// 5 = 2     [108]  7 -// 6 = 1
   [109]  8 -// 1 = 7     [110]  8 -// 2 = 6     [111]  8 -// 3 = 5
   [112]  8 -// 4 = 4     [113]  8 -// 5 = 3     [114]  8 -// 6 = 2
   [115]  8 -// 7 = 1
   [116]  9 -// 1 = 8     [117]  9 -// 2 = 7     [118]  9 -// 3 = 6
   [119]  9 -// 4 = 5     [120]  9 -// 5 = 4     [121]  9 -// 6 = 3
   [122]  9 -// 7 = 2     [123]  9 -// 8 = 1
   [124]  10 -// 1 = 9    [125]  10 -// 2 = 8    [126]  10 -// 3 = 7
   [127]  10 -// 4 = 6    [128]  10 -// 5 = 5    [129]  10 -// 6 = 4
   [130]  10 -// 7 = 3    [131]  10 -// 8 = 2    [132]  10 -// 9 = 1

equations

%% -- auxiliary function gt

   [133]  natcon(c) := natcon(c1) -// natcon(c2),
          natcon(c) != 0
          ===>
          gt(natcon(c1), natcon(c2)) = true

   [134]  gt(natcon(y1 c1), natcon(c2)) = true
   [135]  gt(natcon(y c1), natcon(y c2)) = gt(natcon(c1), natcon(c2))
   [136]  gt(natcon(y1), natcon(y2)) == true
          ===>
          gt(natcon(y1 c1), natcon(y2 c2)) = true

equations

%% -- auxiliary function >- , partial substraction

   [137]  Nat >- 0 = Nat

   [138]  natcon(c1) >- natcon(c2) = natcon(c1) -// natcon(c2)

   [139a] natcon(c3)    := natcon(c1)  -// natcon(c2),
          natcon(y) := natcon (y1) >- natcon(0 x2)
          ===>
          natcon(y1 c1) >- natcon(x2 c2) = natcon(y c3)

   [139b] natcon(c3) := natcon(c2)  -// natcon(c1),
          natcon(c) := 10 -// natcon(c3),
          Nat := natcon (0 x2) + 1,
          natcon(y) := natcon(y1) >- Nat
          ===>
          natcon(y1 c1) >- natcon(x2 c2) = natcon(y c)

equations

%% -- cut off subtraction -/
   [140]  gt(Nat1, Nat2) == true  === Nat1 -/ Nat2 = Nat1 >- Nat2
   [141]  gt(Nat1, Nat2) != true === Nat1 -/ Nat2 = 0

equations
%% -- subtraction of naturals

   [142]  gt(Nat1, Nat2) == true === Nat1 - Nat2 = Nat1 >- Nat2

   [143]  gt(Nat1, Nat2) != true === Nat1 - Nat2 = -(Nat2 >- Nat1)

equations

   %% -- multiplication of naturals --
   [144] Nat * 0 = 0
   [145] Nat * 1 = Nat
   [146] gt(natcon(c), 1) == true
         ===>
         Nat * natcon(c) = Nat + Nat * (natcon(c) - 1)

   [147] natcon(y) := natcon(y1) * natcon(y2)
         ===>
         natcon(y1) * natcon(y2 c) =
                        natcon(y 0) + natcon(y1) * natcon(c)

equations

%% -- addition,  subtraction, and multiplication of integers
   [148]  +Nat = Nat

   [149]  Nat1 + -Nat2 = Nat1 - Nat2
   [150]  -Nat1 + Nat2 = Nat2 - Nat1
   [151]  Nat := Nat1 + Nat2  === -Nat1 + -Nat2 = -Nat

   [152]  Nat1 - -Nat2 = Nat1 + Nat2
   [153]  Nat := Nat1 + Nat2 === -Nat1 - Nat2 = -Nat
   [154]  -Nat1 - -Nat2 = Nat2 - Nat1

   [155]  Nat := Nat1 * Nat2  === Nat1 * -Nat2 = -Nat
   [156]  Nat := Nat1 * Nat2 === -Nat1 * Nat2 = -Nat
   [157]  -Nat1 * -Nat2 = Nat1 * Nat2

equations

%% -- relational operators
   [158]  gt(Nat1, Nat2) == true === Nat1 > Nat2 = true
   [159]  gt(Nat1, Nat2) != true === Nat1 > Nat2 = false
   [160]  Nat1 > -Nat2 = true
   [161]  -Nat1 > Nat2 = false
   [162]  -Nat1 > -Nat2 = Nat2 > Nat1

   [163]  Int1 != Int2 === Int1 >= Int2 = Int1 > Int2
   [164]  Int >= Int = true

   [165]  Int1 < Int2 = not(Int1 >= Int2)
   [166]  Int1 <= Int2 = not(Int1 > Int2)

equations
%% -- no minus zero
   [167] - 0 = 0

   [168] max(Int1, Int2) = Int1 when Int1 > Int2 == true
   [default] max(Int1, Int2) = Int2

   [169] min(Int1, Int2) = Int1 when Int1 < Int2 == true
   [default] min(Int1, Int2) = Int2

equations

   [170] Nat1 >= Nat2 == true
         ===>
         mod(Nat1, Nat2) = mod(Nat1 -/ Nat2, Nat2)

   [default] mod(Nat1, Nat2) = Nat1

equations

   [171] ndiv(Nat, Nat) = 1
   [172] Nat1 > Nat2 == true, 
         Nat :=  1 + ndiv(Nat1 -/ Nat2, Nat2)
         ===>
         ndiv(Nat1, Nat2) = Nat
   [173] Nat1 < Nat2 == true === ndiv(Nat1, Nat2) = 0

equations

   [174] (- Nat1) / Nat2 = - ndiv(Nat1, Nat2)
   [175] Nat1 / (- Nat2) = - ndiv(Nat1, Nat2)
   [176] (- Nat1) / (- Nat2) = ndiv(Nat1, Nat2)
   [177] Nat1 / Nat2 = ndiv(Nat1, Nat2)

   [178] Int == Int = true
   [default] Int1 == Int2 = false

tests

[sanity] 0 != 1
[leading-zeroes] 7 == Nat when Nat := 007
[addition-with-carry] 189 + 13 == 202
[subtraction-below-zero] 13 - 189 == -176
[multiplication] 13 * 17 == 221
[negative-multiplication] -13 * 17 == -221
[negative-multiplication-twice] -13 * -17 == 221
[comparison-less-negative] -7 < 5 == true
[comparison-less-positive] 7 < 5 == false
[comparison-greater-positive] 5 > 7 == false
[comparison-greater-negative] -5 > -7 == true
[priority-plus-star] 2 + 2 * 3 == 8
[priority-minus-star] 2 - 2 * 3 == -4
[max-test] max(2,3) == 3
[max-test-2] max(3,2) == 3
[div-0] 10 / 1 == 10
[div-2] 10 / 2 == 5


