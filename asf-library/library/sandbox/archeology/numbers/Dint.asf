equations

   [a1]  bigpos?(n) = true,
         tl(n) + tl(n') = p,
         hd(n) + hd(n') + hd(p) = n'''
         ================================
         n + n' = n''' ; tl(p)

   [a2]  bigpos?(n') = true,
         bigpos?(n) = false
         ==============================
         n + n' = n' + n



   [s1]   bigpos?(n) = true, n != 10,
          tl(n) + - tl(n') = p1,
          hd(n) + - hd(n') = p2
          =====================
          n + -n' = p2 ; p1

   [s2]   bigpos?(n) = true, n != 10,
          tl(n') + - tl(n) = p1,
          hd(n') + - hd(n) = p2
          =====================
          n + -n' = - (p2 ; p1)

   [s3]   bigpos?(n) = true, n != 10,
          tl(n') + - tl(n) = n1,
          hd(n) + - hd(n') = n2
          ==============================
          n + - n' = (n2 - 1) ; (10 - n1)

   [s4]   bigpos?(n) = true, n != 10,
          tl(n) + - tl(n') = n1,
          hd(n') + - hd(n) = n2
          ======================
          n + - n' = - (n2 ; n1)


   [s5]  bigpos?(n') = true,
         bigpos?(n) = false
         ==============================
         n + -n' = -(n' + - n)

   [s6]  bigpos?(n') = true
         ========================
         10 + -n'  = -( n' + -10 )


   [t1]  bigpos?(n) = true,
         tl(n) * n' = p1,
         hd(n) * n' = p2
         ========================
         n * n' = (p2 ; 0) + p1

  [default-t2]
         bigpos?(n) = false,
         bigpos?(n') = true
         ======================
         n * n' = n' * n


  [f8]  n2 != 1,
        2 / n2 \ = <p1, p2>,
        n1 ^ p1 = p1',
        n1 ^ p2 = p2'
        ===========================
        n1 ^ n2 = p1' * (p1' * p2')


  [m9]  max(n,n')    = n     when is-pos?(n + -n') = true
 [m10]  max(n,n')    = n'    when not is-pos?(n + -n') = true



 [dd0]  -n / -n' \ = n / n' \

 [dd1]  n / p \ = <p1,p2>
        ===================
        -n / p \ = <-p1, p2>

 [dd2]  n / -n' \ = -n / n' \

 [dd3]  x / x' \ = <x1,x2>
        ==================
        x' div x = x1

 [dd4]  x / x' \ = <x1, x2>
        ===================
        x' mod x = x2

  %% Division using naturals with (meaningful!) leading zero's.
 [d00]  10 / p \ = <hd(p), tl(p)>

 [d0]  n != 10,
        int2znat(n) / int2znat(p) \ [0]  = <Div, Rem>
        ========================================
        n / p \ = <znat2int(Div), znat2int(Rem)>

  [d1]  p1 < p2 = true
        =============================
        diff-div(p1,p2) = <0,p1>

  [d2]  p1 \geq p2 = true,
        diff-div(p1 - p2, p2) = <p1', p2'>
        ==================================
        diff-div(p1,p2) = <p1' + 1, p2'>

  [default-d3]  length(z2)  =  1,
        diff-div( znat2int(z3;z2), znat2int(z1) ) = <p1,p2>
        ===================================================
        z1 / z2 \ z3 = <int2znat(p1), int2znat(p2)>

  [d4]  length(z2) > 1 = true,
        z2 = [D1 D+],
        z1 / [D1] \ z3 = <Div1, Rem1>,
        z1 / [D+] \ Rem1 = <Div2, Rem2>
        =================================
        z1 / z2 \ z3 = <Div1 ; Div2, Rem2>
