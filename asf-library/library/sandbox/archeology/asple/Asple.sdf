imports  Mode-con Bool-con Identifiers Nat-con
exports
 sorts PROGRAM DECL STM STMS EXP
 context-free syntax
    begin {DECL ";"}+ ";" STMS end   -> PROGRAM
    MODE {ID ","}+                   -> DECL
    {STM ";"}+                       -> STMS
    ID ":=" EXP                      -> STM
    input   ID                       -> STM
    output EXP                       -> STM
    if EXP then STMS fi              -> STM
    if EXP then STMS else STMS fi    -> STM
    while EXP do STMS end            -> STM
    "(" STM ")"                      -> STM  {bracket}
    EXP "+" EXP                      -> EXP  {left}
    EXP "*" EXP                      -> EXP  {left}
    "(" EXP "=" EXP ")"              -> EXP
    "(" EXP "!=" EXP ")"             -> EXP
    NAT-CON                          -> EXP
    BOOL-CON                         -> EXP
    ID                               -> EXP
    "(" EXP ")"                      -> EXP  {bracket}

 variables
    Decls[1-9']*    -> {DECL ";"}+
    Decl[1-9']*     -> DECL
    Stm[1-9']*      -> STM
    Stmlist[1-9']*  -> STMS
    Stms[1-9']*     -> {STM ";"}+
    Exp[1-9']*      -> EXP
    P[1-9']*        -> PROGRAM

 priorities
    EXP "+" EXP -> EXP <
    EXP "*" EXP -> EXP
