Configuration for language Lambda is


button Expand
when
  focus is L-EXP
do
  FocusVar := focus;
  DefsFocus := ./Defs.focus;
  focus := Lambda : expand ( FocusVar, DefsFocus )
od
doc: "TO GET THIS WORKING, I EDITED THE GENERATED CODE ..... Expand a lambda expression according to its Let-definitions"
manual entry: Expand


button Alpha
when
  focus is L-EXP
do
  FocusVar := focus;
  focus := Alpha : alpha-norm( FocusVar )
od
doc: "Give default names to all bound variables, using lambda reduction"
manual entry: Alpha


button Beta
when
  focus is L-EXP
do
  FocusVar := focus;
  focus := Convert : beta( FocusVar )
od
doc: "Perform one beta reduction, if possible"
manual entry: Beta


button Eta
when
  focus is L-EXP
do
  FocusVar := focus;
  focus := Convert : eta( FocusVar )
od
doc: "Perform one eta reduction, if possible"
manual entry: Eta


button LMStep
when
  focus is L-EXP
do
  FocusVar := focus;
  focus := Reduce : lm-step( FocusVar )
od
doc: "Perform one left-most reduction, if possible"
manual entry: LMStep


button LMReduce
when
  focus is L-EXP
do
  FocusVar := focus;
  focus := Reduce : lm-red( FocusVar )
od
doc: "Reduce, using left-most reduction, until normal form is reached."
manual entry: LMRed
