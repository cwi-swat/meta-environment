module OrgTypes
%%
%%
%%      Types
%%
%%

   imports Booleans
      Natural-Numbers
	 renamed by
	    sorts
	       LEX-NAT => LEX-VAR
	       NAT     => VAR
	    lexical syntax
	       [0-9]        -> LEX-NAT => s [0-9]        -> LEX-VAR
	       [1-9] [0-9]+ -> LEX-NAT => s [1-9] [0-9]+ -> LEX-VAR
	    context-free syntax
	       succ "(" ")" => next "(" VAR ")" -> VAR
      Natural-Numbers
	 renamed by
	    sorts
	       LEX-NAT => LEX-GEN-VAR
	       NAT     => GEN-VAR
	    lexical syntax
	       [0-9]        -> LEX-NAT => b [0-9]        -> LEX-GEN-VAR
	       [1-9] [0-9]+ -> LEX-NAT => b [1-9] [0-9]+ -> LEX-GEN-VAR
	    context-free syntax
	       succ "(" ")" => next "(" GEN-VAR ")" -> GEN-VAR

   exports
      sorts TYPE GEN-TYPE
      context-free syntax
         VAR                    -> TYPE
         bool                   -> TYPE
         nat                    -> TYPE
         TYPE "->" TYPE         -> TYPE right
         TYPE "#" TYPE          -> TYPE left
         "(" TYPE ")"           -> TYPE bracket
         TYPE                   -> GEN-TYPE
         GEN-VAR                -> GEN-TYPE
         GEN-TYPE "->" GEN-TYPE -> GEN-TYPE right
         GEN-TYPE "#" GEN-TYPE  -> GEN-TYPE left
         "(" GEN-TYPE ")"       -> GEN-TYPE bracket
         error-type             -> TYPE
         error-gt               -> GEN-TYPE
         VAR elm GEN-TYPE       -> BOOL

   priorities
      GEN-TYPE "->" GEN-TYPE -> GEN-TYPE <
         {GEN-TYPE "#" GEN-TYPE -> GEN-TYPE,  TYPE "->" TYPE -> TYPE} <
         TYPE "#" TYPE -> TYPE

   hiddens
      variables
         var [12]*   -> VAR
         gv          -> GEN-VAR
         type [12]*  -> TYPE
         gt [12]*    -> GEN-TYPE

