%%  MetaNotation
%%
%%  This module contains the syntax of the MetaNotation, closely following
%%  the definition of appendix F3, [Mosses 92].
%%  Symbols, Variables, and Terms are defined in the imported modules.
%%  In order to make the grammar non-ambiguous, some keywords have been
%%  added. These mainly include delimiters <module> and </module> around
%%  modules, and <grammar> and </grammar> around grammar sections.
%%
%%  Moreover, the tags used in the [Mosses 92] before formulae, e.g.
%%  (1) succ zero = one .
%%  or
%%   *  succ _ :: natural -> natural .
%%  have been added to the syntax.
%%
%%  Moreover, the comment convention is that lines starting with "%%" are
%%  regarded as comment (see module Layout).
%%
%%
%%  Authors: Arie van Deursen, CWI, Amsterdam,
%%           Peter D. Mosses, Aarhus, Denmark.
%%  Date: May 1993.




imports Allowed-Symbols
        Allowed-Terms
        Allowed-GrammarTerms

exports
  sorts
    PATH REFERENCE TRANSLATION TRANSLATIONS REFERENCES
    SPECIFICATION  MODULE BASIC
    TAG CLAUSE TAGGED-CLAUSE
    FUNCTIONALITY FUNCTIONALITIES
    ATTRIBUTE-LIST ATTRIBUTE
    FORMULA RELATION DISJOINER

  context-free syntax
    "<module>" PATH "<body>"
      SPECIFICATION "</module>"                         -> MODULE
    BASIC+                                              -> SPECIFICATION
    BASIC* MODULE+                                      -> SPECIFICATION

    needs ":" REFERENCES "."                            -> BASIC
    includes ":" REFERENCES "."                         -> BASIC
    closed "."                                          -> BASIC
    open "."                                            -> BASIC
    closed except REFERENCES "."                        -> BASIC
    introduces ":" SYMBOLS "."                          -> BASIC
    privately introduces ":" SYMBOLS "."                -> BASIC
    "<grammar>"  GRAM-BASICS "</grammar>"               -> BASIC
    TAGGED-CLAUSE "."                                   -> BASIC

    TAG CLAUSE                                          -> TAGGED-CLAUSE
    "*"                                                 -> TAG
    "(" NUMBER ")"                                      -> TAG
    "[" NUMBER "]"                                      -> TAG

    FORMULA                                             -> CLAUSE
    { FORMULA ";"}+ "=>" { TAGGED-CLAUSE ";"}+          -> CLAUSE
    SYMBOLS "::" FUNCTIONALITIES                        -> CLAUSE


    TERM "!"                                            -> FORMULA
    RELATION DISJOINER                                  -> FORMULA
    RELATION                                            -> FORMULA
    TERMS "="  TERM                                     -> RELATION
    TERMS "=<" TERM                                     -> RELATION
    TERMS ">=" TERM                                     -> RELATION
    TERMS ":"  TERM                                     -> RELATION
    TERMS ":-" TERM                                     -> RELATION
    "(" disjoint ")"                                    -> DISJOINER
    "(" individual ")"                                  -> DISJOINER

    { FUNCTIONALITY ";" }+                              -> FUNCTIONALITIES
    TERMS "->" TERM ATTRIBUTE-LIST                      -> FUNCTIONALITY
    "(" { ATTRIBUTE "," }+ ")"                          -> ATTRIBUTE-LIST
                                                        -> ATTRIBUTE-LIST
    total                                               -> ATTRIBUTE
    partial                                             -> ATTRIBUTE
    restricted                                          -> ATTRIBUTE
    strict                                              -> ATTRIBUTE
    linear                                              -> ATTRIBUTE
    injective                                           -> ATTRIBUTE
    associative                                         -> ATTRIBUTE
    commutative                                         -> ATTRIBUTE
    idempotent                                          -> ATTRIBUTE
    unit is TERM                                        -> ATTRIBUTE

    SYMBOL                                              -> TRANSLATION
    SYMBOL "for" SYMBOL                                 -> TRANSLATION

    { UPPER-ALPHA "/" }+                                -> PATH
    PATH TRANSLATIONS                                   -> REFERENCE
    { REFERENCE "," }+                                  -> REFERENCES
                                                        -> TRANSLATIONS
     "(" { TRANSLATION ","}+  ")"                       -> TRANSLATIONS
