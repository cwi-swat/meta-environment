module SyntaxTokens

exports
  sorts
        LABEL-LEX  PROCEDURE VAR-LEX DECLARE BEGIN ASGN IF THEN ELSE 
        END WHILE OF DO GOTO READ WRITE LPAR RPAR LSQ RSQ

  context-free syntax

      "LABEL"     -> LABEL-LEX
      "PROCEDURE" -> PROCEDURE
      "VAR"       -> VAR-LEX
      "OF"        -> OF
      "("         -> LPAR
      ")"         -> RPAR
      "["         -> LSQ
      "]"         -> RSQ
      "DECLARE"   -> DECLARE
      "BEGIN"     -> BEGIN
      %% "END"   -> END
      ":="    -> ASGN
      "IF"    -> IF
      "THEN"  -> THEN
      "ELSE"  -> ELSE
      "END"   -> END
      "WHILE" -> WHILE
      "DO"    -> DO
      "GOTO"  -> GOTO
      "READ"  -> READ
      "WRITE" -> WRITE
%% variables
%% 
    %% [_]VarLex[0-9']*          -> VAR-LEX
    %% [_]LabelLex[0-9']*        -> LABEL-LEX
    %% [_]Procedure[0-9]*        -> PROCEDURE
    %% [_]Of[0-9]*               -> OF
%% 
    %% [_]Declare -> DECLARE
    %% [_]Begin   -> BEGIN
    %% [_]Asgn  -> ASGN
    %% [_]If    -> IF
    %% [_]Then  -> THEN
    %% [_]Else  -> ELSE
    %% [_]End   -> END
    %% [_]While -> WHILE
    %% [_]Do    -> DO
    %% [_]Goto  -> GOTO
    %% [_]Read  -> READ
    %% [_]Write -> WRITE
    %% [_]"("   -> LPAR
    %% [_]")"   -> RPAR
    %% [_]"["   -> LSQ
    %% [_]"]"   -> RSQ
