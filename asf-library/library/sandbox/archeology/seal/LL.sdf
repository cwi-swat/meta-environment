module LL
%%
%% LL (syntax of LeLisp)
%%

  imports Layout

exports
  sorts SYMBOL COLON-SYMBOL
  lexical syntax
        ~ [ \t\n#:\"\[\]{}'`()|;_,@\<\>] +         -> SYMBOL
        SYMBOL ":"                                 -> COLON-SYMBOL

  sorts S_EXPR S_EXPR_LIST PACK-SYMBOL

  context-free syntax
        "#:SEAL:" COLON-SYMBOL*                        -> PACK-SYMBOL
        "#:data:" COLON-SYMBOL+                          -> PACK-SYMBOL

        "(" S_EXPR*  ")"                                -> S_EXPR
        "'" S_EXPR                                      -> S_EXPR
        S_EXPR+                                         -> S_EXPR_LIST
        SYMBOL                                          -> S_EXPR
        PACK-SYMBOL SYMBOL                              -> S_EXPR

variables
"_S_expr"[']+   -> S_EXPR
"_S_expr_list"[']+ -> S_EXPR+
"_Sym"[']+      -> SYMBOL
"_Syms"[']+     -> SYMBOL+
