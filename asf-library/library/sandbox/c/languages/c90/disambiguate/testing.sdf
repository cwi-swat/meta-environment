module languages/c90/disambiguate/testing

%%----------
%% GRAMMARS
%%----------
imports languages/c90/syntax/TranslationUnit

exports
	context-free start-symbols TranslationUnit

	context-free syntax
		dis-amb(TranslationUnit)			-> TranslationUnit

		dis-ambiguate(TranslationUnit) 		-> TranslationUnit 	{traversal(trafo, break, top-down)}
		dis-ambiguate(FunctionDefinition) 		-> FunctionDefinition	{traversal(trafo, break, top-down)}
		dis-ambiguate(DirectDeclarator) 		-> DirectDeclarator	{traversal(trafo, break, top-down)}
		dis-ambiguate(UnaryExpression) 		-> UnaryExpression	{traversal(trafo, break, top-down)}
		dis-ambiguate(StructDeclaration) 		-> StructDeclaration	{traversal(trafo, break, top-down)}
		dis-ambiguate(ParameterDeclaration) 	-> ParameterDeclaration	{traversal(trafo, break, top-down)}
		dis-ambiguate(ConstantExpression) 		-> ConstantExpression	{traversal(trafo, break, top-down)}
		dis-ambiguate(CompoundStatement) 		-> CompoundStatement	{traversal(trafo, break, top-down)}
		dis-ambiguate(AssignmentExpression)		-> AssignmentExpression	{traversal(trafo, break, top-down)}

hiddens
	imports languages/generic-cpp/syntax/CommentsAsLayout
	imports languages/c90/syntax/Whitespace
	variables
		"$translationunit"	-> TranslationUnit
		"$functiondefinition"	-> FunctionDefinition
		"$directdeclarator"	-> DirectDeclarator
		"$unaryexpression"	-> UnaryExpression
		"$structdeclaration"	-> StructDeclaration
		"$parameterdeclaration"	-> ParameterDeclaration
		"$constantexpression"	-> ConstantExpression
		"$assignementexpression"	-> AssignmentExpression
		"$compoundstatement"	-> CompoundStatement


		"$functiondefinition+"	-> { FunctionDefinition "," }+
		"$directdeclarator+"	-> { DirectDeclarator "," }+
		"$unaryexpression+"	-> { UnaryExpression "," }+
		"$structdeclaration+"	-> { StructDeclaration "," }+
		"$parameterdeclaration+"	-> { ParameterDeclaration "," }+
		"$constantexpression+"	-> { ConstantExpression "," }+
		"$assignementexpression+"	-> { AssignmentExpression "," }+
		"$compoundstatement+"	-> { CompoundStatement ","}+
