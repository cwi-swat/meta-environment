%% ---------- ---------- ----------
%% Part of the c89/c90 framework
%% ---------- ---------- ----------
%% implementation of a symboltable which is similar to dragonbook page 432
%% ---------- ---------- ----------
%% linear list of records
%% - every new record is added to end of symboltable
%% - search for a record goes backwards (hiding)
%% ---------- ---------- ----------
module languages/c90/disambiguate/symboltable

imports basic/StrCon
imports basic/LocationOperations

exports
	%% GRAMMAR
	sorts Record SymbolTable
	context-free syntax
		"{" { Record "," }* "}"											-> SymbolTable
		"<" idname:StrCon "," idloc:Location "," type:StrCon "," usedef:StrCon "," namespace:StrCon "," scope:Location ">"	-> Record
		"no-record-found"												-> Record

	%% FUNCTIONS
	context-free syntax
		add-record(Record, SymbolTable)						-> SymbolTable
		find-record(idname:StrCon, idloc:Location, SymbolTable)			-> Record
		find-type(idname:StrCon, namespace:StrCon, SymbolTable)			-> StrCon

		record-type(Record)							-> StrCon

		merge-symboltables(first:SymbolTable, second:SymbolTable)			-> SymbolTable
hiddens
	context-free start-symbols Record SymbolTable StrCon
	imports basic/Whitespace
	imports basic/Comments
	variables
		"$symboltable"		-> SymbolTable
		"$record*"[0-9]*		-> {Record ","}*
		"$record"		-> Record

		"$location"[0-9]*		-> Location
		"$strcon"		-> StrCon

		"$name"			-> StrCon
		"$type"			-> StrCon
		"$usedef"		-> StrCon
		"$namespace"		-> StrCon
		"$scope"			-> Location
