module Sdf-AttributeChecker

imports utilities/PosInfo[Production]
imports Sdf-Messages ModuleOperations

exports
  context-free start-symbols {Feedback ","}*
  context-free syntax
    check-sdf-attributes(Definition) -> {Feedback ","}*

hiddens
  context-free syntax
    check-attributes(Definition, {Feedback ","}*)            -> {Feedback ","}* {traversal(accu, break, top-down)}
    check-attributes(Module, {Feedback ","}*)                -> {Feedback ","}* {traversal(accu, break, top-down)}
    check-attributes2(Module, {Feedback ","}*, ModuleId)     -> {Feedback ","}* {traversal(accu, break, top-down)}
    check-attributes2(Production, {Feedback ","}*, ModuleId) -> {Feedback ","}* {traversal(accu, break, top-down)}

  context-free syntax
    is-binary-definition(Production)       -> Boolean
    is-bracket-definition(Production)      -> Boolean

hiddens
  variables
    "Module"[0-9]*     -> Module
    "Aterm*"[0-9]*     -> {ATerm ","}*
    "Aterm+"[0-9]*     -> {ATerm ","}+
    "$ModuleId"[0-9]*  -> ModuleId
    "Attributes"[0-9]* -> Attributes
    "Attr*"[0-9]*      -> {Attribute ","}*
    "Definition"[0-9]* -> Definition
    "Production"[0-9]* -> Production
    "$Sort"  [0-9]*    -> Sort
    "$Symbol*"[0-9]*   -> Symbol*
    "$Symbol,*"[0-9]*  -> {Symbol ","}*
    "$Symbol"[0-9]*    -> Symbol
    "Msgs"[0-9]*       -> {Feedback ","}*
    "$Literal"[0-9]*   -> Literal

    "$Location"[0-9]* -> Location
