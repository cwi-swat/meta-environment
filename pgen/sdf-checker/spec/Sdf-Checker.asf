equations

  [cs-1'1] Msgs1 := check-labels(Definition1),
           Definition2 := remove-labels(Definition1),
           Msgs2 := check-sorts-and-prods(Definition2),
           Msgs3 := check-sdf-attributes(Definition2),
           Msgs4 := check-for-deprecated-symbols(Definition2)
           =================================================
           check-sdf(definition Definition1) =
             Msgs1 ++ Msgs2 ++ Msgs3 ++ Msgs4
 
  [cms-1'1] InfoMsgTuple2 := check-module(Module, Definition, InfoMsgTuple1)
            ===============================================================
            check-modules(Module Module*, Definition,  InfoMsgTuple1) =
              check-modules(Module*, Definition, InfoMsgTuple2)

  [cms-1'2] check-modules(, Definition, InfoMsgTuple) = InfoMsgTuple
 
  [pcms1'1] InfoMsgTuple2 := pre-check-module(Module, Definition, InfoMsgTuple1)
            ===================================================================
            pre-check-modules(Module Module*, Definition,  InfoMsgTuple1) =
              pre-check-modules(Module*, Definition, InfoMsgTuple2)

  [pcms1'2] pre-check-modules(, Definition, InfoMsgTuple) = InfoMsgTuple
 
  [ci-1'1] $ModuleName := get-modulename(Import),
           $ModuleId := get-module-id($ModuleName),
           Module := get-module($ModuleId, Definition),
           Module != module-not-available,
           InfoMsgTuple2 := check-module(Module, Definition, InfoMsgTuple1)
           ===============================================================
           check-imports(imports(Import Import*), 
                         Definition, InfoMsgTuple1) =
             check-imports(imports(Import*), Definition, InfoMsgTuple2)
 
  [ci-1'2] $ModuleName := get-modulename(Import),
           $ModuleId := get-module-id($ModuleName),
           get-module($ModuleId, Definition) == module-not-available
           ========================================================
           check-imports(imports(Import Import*), 
                         Definition, InfoMsgTuple) = InfoMsgTuple

  [ci-1'3] check-imports(imports(), Definition, InfoMsgTuple) = InfoMsgTuple
 
  [pci-1'1] $ModuleName := get-modulename(Import),
            $ModuleId := get-module-id($ModuleName),
            Module := get-module($ModuleId, Definition),
            Module != module-not-available,
            InfoMsgTuple2 := pre-check-module(Module, Definition, InfoMsgTuple1)
            ===================================================================
            pre-check-imports(imports(Import Import*), 
                              Definition, InfoMsgTuple1) =
              pre-check-imports(imports(Import*), Definition, InfoMsgTuple2)
 
  [pci-12] $ModuleName := get-modulename(Import),
           $ModuleId := get-module-id($ModuleName),
           get-module($ModuleId, Definition) == module-not-available,
           ModuleInfoTable1 := get-module-info(InfoMsgTuple1),
           ModuleInfoTable2 := create-module-entry($ModuleId, ModuleInfoTable1), 
           InfoMsgTuple2 :=  put-module-info(ModuleInfoTable2, InfoMsgTuple1),
           Msgs1 := get-messages(InfoMsgTuple2),
           Msgs2 := Msgs1 +
module-not-available($ModuleId),
           InfoMsgTuple3 := put-messages(Msgs2, InfoMsgTuple2)
           ===================================================
           pre-check-imports(imports(Import Import*), 
                             Definition, InfoMsgTuple1) = InfoMsgTuple3

  [pci-1'3] pre-check-imports(imports(), Definition, InfoMsgTuple) = InfoMsgTuple


  [csp-1'1] InfoMsgTuple1 := pre-check-modules(Definition, Definition, 
                              create-info-msg-tuple()),
            ModuleInfoTable1 := get-module-info(InfoMsgTuple1),
            ModuleInfoTable2 := mark-modules-as-unchecked(ModuleInfoTable1),
            InfoMsgTuple2 :=  put-module-info(ModuleInfoTable2, InfoMsgTuple1),
            InfoMsgTuple3 := check-modules(Definition, Definition, 
                          InfoMsgTuple2)
            ============================================
            check-sorts-and-prods(Definition) = get-messages(InfoMsgTuple3)
	
  [pcm-1'1] $ModuleId := get-module-name(Module),
            ModuleInfoTable := get-module-info(InfoMsgTuple),
            module-is-checked($ModuleId, ModuleInfoTable) == true
            ====================================================
            pre-check-module(Module, Definition, InfoMsgTuple) = InfoMsgTuple
 	
  [pcm-1'2] $ModuleId := get-module-name(Module),
            ModuleInfoTable1 := get-module-info(InfoMsgTuple1),

            module-is-checked($ModuleId, ModuleInfoTable1) == false,
            ModuleInfoTable2 := create-module-entry($ModuleId, ModuleInfoTable1), 
            InfoMsgTuple2 :=  put-module-info(ModuleInfoTable2, InfoMsgTuple1),

            ImportsSet := get-all-imports(Module),
            InfoMsgTuple3 := 
              pre-check-imports(ImportsSet, Definition, InfoMsgTuple2),
            InfoMsgTuple4 := pre-check-module-sorts(Module, InfoMsgTuple3)
            ==============================================================
            pre-check-module(Module, Definition, InfoMsgTuple1) = InfoMsgTuple4
	
  [cm-1'1] $ModuleId := get-module-name(Module),
           ModuleInfoTable := get-module-info(InfoMsgTuple),
           module-is-checked($ModuleId, ModuleInfoTable) == true
           ====================================================
           check-module(Module, Definition, InfoMsgTuple) = InfoMsgTuple
	
  [cm-1'2] $ModuleId := get-module-name(Module),
           ModuleInfoTable1 := get-module-info(InfoMsgTuple1),

           module-is-checked($ModuleId, ModuleInfoTable1) == false,
           ModuleInfoTable2 := set-module-as-checked($ModuleId, ModuleInfoTable1), 
           InfoMsgTuple2 :=  put-module-info(ModuleInfoTable2, InfoMsgTuple1),

           ImportsSet := get-all-imports(Module),
           InfoMsgTuple4 := check-imports(ImportsSet, Definition, InfoMsgTuple2),
           InfoMsgTuple5 := check-module-sorts(Module, InfoMsgTuple4),
           InfoMsgTuple6 := check-module-prods(Module, InfoMsgTuple5),
           InfoMsgTuple7 := check-module-constructors(Module, InfoMsgTuple6)
           ================================================================
           check-module(Module, Definition, InfoMsgTuple1) = InfoMsgTuple7
