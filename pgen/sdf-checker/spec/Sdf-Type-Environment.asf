equations

  [cimt-1'1] create-info-msg-tuple() = [{},{}]

  [cme-1'1] create-module-entry($ModuleId,{ModuleInfoEntry*}) =
              {[$ModuleId, true, 
                [symbolpairs(), symbolpairs(), symbols(), productions(), constructors()]] 
               ModuleInfoEntry*}

  [gmi-1'1] get-module-info([ModuleInfoTable, Messages]) = ModuleInfoTable

  [gm-1'1] get-messages([ModuleInfoTable, Messages]) = Messages

  [pmi-1'1] put-module-info(ModuleInfoTable1,
                            [ModuleInfoTable2, Messages]) = 
              [ModuleInfoTable1, Messages]

  [pm-1'1] put-messages(Messages1, [ModuleInfoTable, Messages2]) = 
             [ModuleInfoTable, Messages1]

  [mmau-1'1] mark-modules-as-unchecked({}) = {}

  [mmau-1'1] {ModuleInfoEntry*2} := 
               mark-modules-as-unchecked({ModuleInfoEntry*1})
             =====================
             mark-modules-as-unchecked({[$ModuleId, Bool, ModuleInfo]
                                        ModuleInfoEntry*1}) = 
               {[$ModuleId, false,  ModuleInfo] ModuleInfoEntry*2}
    
  [smc-1'1] set-module-as-checked($ModuleId,
                                  {ModuleInfoEntry*1
                                  [$ModuleId, Bool, ModuleInfo]
                                   ModuleInfoEntry*2}) =
              {ModuleInfoEntry*1
               [$ModuleId, true, ModuleInfo]
               ModuleInfoEntry*2}

  [default-smc-1'2] set-module-as-checked($ModuleId,
                                          {ModuleInfoEntry*}) = 
                      {[$ModuleId, 
                        true, 
                        [symbolpairs(), symbolpairs(), symbols(), productions(), constructors()]] 
                       ModuleInfoEntry*}
    
  [mic-1'1] module-is-checked($ModuleId,
                              {ModuleInfoEntry*1
                               [$ModuleId, Bool, ModuleInfo]
                               ModuleInfoEntry*2}) = Bool

  [default-mic-1'2] module-is-checked($ModuleId,
                                      {ModuleInfoEntry*}) = false

  [pdsi-1'1] put-declared-symbols-info($ModuleId, 
                                       SymbolPairsSet1,
                                       {ModuleInfoEntry*1 
                                        [$ModuleId, Bool, 
                                         [SymbolPairsSet2, SymbolPairsSet3, SymbolsSet, 
                                          ProductionsSet, ConstructorSet]]
                                        ModuleInfoEntry*2}) =
               {ModuleInfoEntry*1
                [$ModuleId, true, 
                 [SymbolPairsSet1, SymbolPairsSet3, SymbolsSet, ProductionsSet, ConstructorSet]] 
                ModuleInfoEntry*2}

  [default-pdsi-1'1] put-declared-symbols-info($ModuleId, 
                                               SymbolPairsSet,
                                               {ModuleInfoEntry*}) =
                       {[$ModuleId, true, 
                         [SymbolPairsSet, symbolpairs(), symbols(), 
                          productions(), constructors()]] 
                         ModuleInfoEntry*}

  [gds-1'1] get-declared-symbols($ModuleId,
                                 {ModuleInfoEntry*1
                                  [$ModuleId, Bool, 
                                   [SymbolPairsSet1, SymbolPairsSet2, SymbolsSet,
                                    ProductionsSet, ConstructorSet]]
                                  ModuleInfoEntry*2}) = SymbolPairsSet1

  [gds-1'1] get-declared-symbols(, ModuleInfoTable) = 

  [gds-1'2] $ModuleName := get-modulename(Import),
            $ModuleId := get-module-id($ModuleName),
            symbolpairs(SymbolPair*1) := 
               get-declared-symbols($ModuleId, ModuleInfoTable),
            SymbolPair*2 := get-declared-symbols(Import*, ModuleInfoTable)
            =============================================================
            get-declared-symbols(Import Import*, 
                                 ModuleInfoTable) = SymbolPair*1 SymbolPair*2

  [gds-2'1] SymbolPair* := get-declared-symbols(Import*, ModuleInfoTable)
            ============================================================
            get-declared-symbols(Import*, ModuleInfoTable) = 
              symbolpairs(SymbolPair*)

  [pasi-1'1] put-aliased-symbols-info($ModuleId, 
                                      SymbolPairsSet1,
                                      {ModuleInfoEntry*1 
                                       [$ModuleId, Bool, 
                                        [SymbolPairsSet2, SymbolPairsSet3, SymbolsSet,
                                         ProductionsSet, ConstructorSet]]
                                       ModuleInfoEntry*2}) =
              {ModuleInfoEntry*1
               [$ModuleId, true, 
                [SymbolPairsSet2, SymbolPairsSet1, SymbolsSet, ProductionsSet, ConstructorSet]] 
               ModuleInfoEntry*2}

  [default-pasi-1'1] put-aliased-symbols-info($ModuleId, 
                                              SymbolPairsSet,
                                              {ModuleInfoEntry*}) =
                      {[$ModuleId, true, 
                        [symbolpairs(), SymbolPairsSet, symbols(),
                         productions(), constructors()]] 
                        ModuleInfoEntry*}

  [gas-1'1] get-aliased-symbols($ModuleId,
                                 {ModuleInfoEntry*1
                                  [$ModuleId, Bool, 
                                   [SymbolPairsSet1, SymbolPairsSet2, SymbolsSet,
                                    ProductionsSet, ConstructorSet]]
                                  ModuleInfoEntry*2}) = SymbolPairsSet2

  [gas-1'2] get-aliased-symbols(, ModuleInfoTable) = 

  [gas-1'3] $ModuleName := get-modulename(Import),
            $ModuleId := get-module-id($ModuleName),
            symbolpairs(SymbolPair*1) := 
               get-aliased-symbols($ModuleId, ModuleInfoTable),
            SymbolPair*2 := get-aliased-symbols(Import*, ModuleInfoTable)
            ============================================================
            get-aliased-symbols(Import Import*, ModuleInfoTable) = 
              SymbolPair*1 SymbolPair*2

  [gas-2'1] SymbolPair* := get-aliased-symbols(Import*, ModuleInfoTable)
            ===========================================================
            get-aliased-symbols(Import*, ModuleInfoTable) = 
              symbolpairs(SymbolPair*)

  [pusi-1'1] put-used-symbols-info($ModuleId, 
                                      SymbolsSet1,
                                      {ModuleInfoEntry*1 
                                       [$ModuleId, Bool, 
                                        [SymbolPairsSet2, SymbolPairsSet3, SymbolsSet2,
                                         ProductionsSet, ConstructorSet]]
                                       ModuleInfoEntry*2}) =
              {ModuleInfoEntry*1
               [$ModuleId, true, 
                [SymbolPairsSet2, SymbolPairsSet2, SymbolsSet1, ProductionsSet, ConstructorSet]] 
               ModuleInfoEntry*2}

  [default-pusi-1'1] put-used-symbols-info($ModuleId, 
                                           SymbolsSet,
                                           {ModuleInfoEntry*}) =
                      {[$ModuleId, true, 
                        [symbolpairs(), symbolpairs(), SymbolsSet,
                         productions(), constructors()]] 
                        ModuleInfoEntry*}

  [gus-1'1] get-used-symbols($ModuleId,
                                 {ModuleInfoEntry*1
                                  [$ModuleId, Bool, 
                                   [SymbolPairsSet1, SymbolPairsSet2, SymbolsSet,
                                    ProductionsSet, ConstructorSet]]
                                  ModuleInfoEntry*2}) = SymbolsSet

  [gus-1'2] get-used-symbols(, ModuleInfoTable) = 

  [gus-1'3] $ModuleName := get-modulename(Import),
            $ModuleId := get-module-id($ModuleName),
            symbols(Symbol*1) := 
               get-used-symbols($ModuleId, ModuleInfoTable),
            Symbol*2 := get-used-symbols(Import*, ModuleInfoTable)
            ======================================================
            get-used-symbols(Import Import*, ModuleInfoTable) = 
              Symbol*1 Symbol*2

  [gus-2'1] Symbol* := get-used-symbols(Import*, ModuleInfoTable)
            =====================================================
            get-used-symbols(Import*, ModuleInfoTable) = 
              symbols(Symbol*)

  [ppi-1'1] put-production-info($ModuleId, 
                                ProductionsSet1,
                                {ModuleInfoEntry*1 
                                 [$ModuleId, Bool, 
                                  [SymbolPairsSet1, SymbolPairsSet2, SymbolsSet,
                                   ProductionsSet2, ConstructorSet]]
                                 ModuleInfoEntry*2}) =
              {ModuleInfoEntry*1
               [$ModuleId, true, 
                [SymbolPairsSet1, SymbolPairsSet2, SymbolsSet,
                 ProductionsSet1, ConstructorSet]] 
               ModuleInfoEntry*2}

  [default-ppi-1'1] put-production-info($ModuleId, 
                                        ProductionsSet,
                                        {ModuleInfoEntry*}) =
                      {[$ModuleId, true, 
                        [symbolpairs(), symbolpairs(), symbols(), 
                         ProductionsSet, constructors()]] 
                        ModuleInfoEntry*}

  [gdp-1'1] get-defined-productions($ModuleId,
                                    {ModuleInfoEntry*1
                                     [$ModuleId, Bool, 
                                      [SymbolPairsSet1, SymbolPairsSet2, SymbolsSet,
                                       ProductionsSet, ConstructorSet]]
                                     ModuleInfoEntry*2}) = ProductionsSet

  [gdp-1'1] get-defined-productions(, ModuleInfoTable) = productions()

  [gdp-1'2] $ModuleName := get-modulename(Import),
            $ModuleId := get-module-id($ModuleName),
            productions(Production*1) := 
               get-defined-productions($ModuleId, ModuleInfoTable),
            productions(Production*2) :=
               get-defined-productions(Import*, ModuleInfoTable)
            ====================================================
            get-defined-productions(Import Import*, 
                                    ModuleInfoTable) = 
              productions(Production*1) ++ productions(Production*2)

  [pci-1'1] put-constructor-info($ModuleId, 
                                 ConstructorSet1,
                                 {ModuleInfoEntry*1 
                                 [$ModuleId, Bool, 
                                  [SymbolPairsSet1, SymbolPairsSet2, SymbolsSet,
                                   ProductionsSet, ConstructorSet2]]
                                 ModuleInfoEntry*2}) =
              {ModuleInfoEntry*1
               [$ModuleId, true, 
                [SymbolPairsSet1, SymbolPairsSet2, SymbolsSet, 
                 ProductionsSet, ConstructorSet1]] 
               ModuleInfoEntry*2}

  [default-pci-1'2] put-constructor-info($ModuleId, 
                                         ConstructorSet,
                                         {ModuleInfoEntry*}) =
                      {[$ModuleId, true, 
                        [symbolpairs(), symbolpairs(), symbols(), productions(), ConstructorSet]] 
                        ModuleInfoEntry*}

  [gc-1'1] get-constructors($ModuleId,
                            {ModuleInfoEntry*1
                             [$ModuleId, Bool, 
                              [SymbolPairsSet1, SymbolPairsSet2, SymbolsSet,
                               ProductionsSet, ConstructorSet]]
                             ModuleInfoEntry*2}) = ConstructorSet

  [gc-1'1] get-constructors(, ModuleInfoTable) = constructors()

  [gc-1'2] $ModuleName := get-modulename(Import),
            $ModuleId := get-module-id($ModuleName),
           constructors(SymbolCons*1) := 
              get-constructors($ModuleId, ModuleInfoTable),
           constructors(SymbolCons*2) :=
              get-constructors(Import*, ModuleInfoTable)
           =====================================================
           get-constructors(Import Import*,  ModuleInfoTable) = 
              constructors(SymbolCons*1 SymbolCons*2)
