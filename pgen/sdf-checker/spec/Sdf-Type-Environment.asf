equations

  [cimt-1'1] create-info-msg-tuple() = [{},{}]

  [cme-1'1] create-module-entry($ModuleId,{ModuleInfoEntry*}) =
              {[$ModuleId, true, [symbols(), symbols(), productions(), constructors()]] 
               ModuleInfoEntry*}

  [gmi-1'1] get-module-info([ModuleInfoTable, Messages]) = ModuleInfoTable

  [gm-1'1] get-messages([ModuleInfoTable, Messages]) = Messages

  [pmi-1'1] put-module-info(ModuleInfoTable1,
                            [ModuleInfoTable2, Messages]) = 
              [ModuleInfoTable1, Messages]

  [pm-1'1] put-messages(Messages1, [ModuleInfoTable, Messages2]) = 
             [ModuleInfoTable, Messages1]

  [mic-1'1] module-is-checked($ModuleId,
                              {ModuleInfoEntry*1
                               [$ModuleId, Bool, ModuleInfo]
                               ModuleInfoEntry*2}) = Bool

  [default-mic-1'2] module-is-checked($ModuleId,
                                      {ModuleInfoEntry*}) = false

  [pdsi-1'1] put-declared-symbols-info($ModuleId, 
                                       SymbolsSet1,
                                       {ModuleInfoEntry*1 
                                        [$ModuleId, Bool, 
                                         [SymbolsSet2, SymbolsSet3, 
                                          ProductionsSet, ConstructorSet]]
                                        ModuleInfoEntry*2}) =
               {ModuleInfoEntry*1
                [$ModuleId, true, 
                 [SymbolsSet1, SymbolsSet3, ProductionsSet, ConstructorSet]] 
                ModuleInfoEntry*2}

  [default-pdsi-1'1] put-declared-symbols-info($ModuleId, 
                                               SymbolsSet,
                                               {ModuleInfoEntry*}) =
                       {[$ModuleId, true, 
                         [SymbolsSet, symbols(), 
                          productions(), constructors()]] 
                         ModuleInfoEntry*}

  [gds-1'1] get-declared-symbols($ModuleId,
                                 {ModuleInfoEntry*1
                                  [$ModuleId, Bool, 
                                   [SymbolsSet1, SymbolsSet2, 
                                    ProductionsSet, ConstructorSet]]
                                  ModuleInfoEntry*2}) = SymbolsSet1

  [gds-1'1] get-declared-symbols(imports(), ModuleInfoTable) = symbols()

  [gds-1'2] get-module-id($ModuleName) = $ModuleId,
            get-declared-symbols($ModuleId, ModuleInfoTable) = 
               symbols(Symbol*1),
            get-declared-symbols(imports(Import*), ModuleInfoTable) =
               symbols(Symbol*2)
            =========================================================
            get-declared-symbols(imports($ModuleName Import*), 
                                 ModuleInfoTable) = symbols(Symbol*1 Symbol*2)

  [pasi-1'1] put-aliased-symbols-info($ModuleId, 
                                      SymbolsSet1,
                                      {ModuleInfoEntry*1 
                                       [$ModuleId, Bool, 
                                        [SymbolsSet2, SymbolsSet3, 
                                         ProductionsSet, ConstructorSet]]
                                       ModuleInfoEntry*2}) =
              {ModuleInfoEntry*1
               [$ModuleId, true, 
                [SymbolsSet2, SymbolsSet1, ProductionsSet, ConstructorSet]] 
               ModuleInfoEntry*2}

  [default-pasi-1'1] put-aliased-symbols-info($ModuleId, 
                                              SymbolsSet,
                                              {ModuleInfoEntry*}) =
                      {[$ModuleId, true, 
                        [symbols(), SymbolsSet, 
                         productions(), constructors()]] 
                        ModuleInfoEntry*}

  [gas-1'1] get-aliased-symbols($ModuleId,
                                 {ModuleInfoEntry*1
                                  [$ModuleId, Bool, 
                                   [SymbolsSet1, SymbolsSet2, 
                                    ProductionsSet, ConstructorSet]]
                                  ModuleInfoEntry*2}) = SymbolsSet2

  [gas-1'2] get-aliased-symbols(imports(), ModuleInfoTable) = symbols()

  [gas-1'3] get-module-id($ModuleName) = $ModuleId,
            get-aliased-symbols($ModuleId, ModuleInfoTable) = 
               symbols(Symbol*1),
            get-aliased-symbols(imports(Import*), ModuleInfoTable) =
               symbols(Symbol*2)
            =========================================================
            get-aliased-symbols(imports($ModuleName Import*), 
                                ModuleInfoTable) = symbols(Symbol*1 Symbol*2)

  [ppi-1'1] put-production-info($ModuleId, 
                                ProductionsSet1,
                                {ModuleInfoEntry*1 
                                 [$ModuleId, Bool, 
                                  [SymbolsSet1, SymbolsSet2, 
                                   ProductionsSet2, ConstructorSet]]
                                 ModuleInfoEntry*2}) =
              {ModuleInfoEntry*1
               [$ModuleId, true, 
                [SymbolsSet1, SymbolsSet2, 
                 ProductionsSet1, ConstructorSet]] 
               ModuleInfoEntry*2}

  [default-ppi-1'1] put-production-info($ModuleId, 
                                        ProductionsSet,
                                        {ModuleInfoEntry*}) =
                      {[$ModuleId, true, 
                        [symbols(), symbols(), 
                         ProductionsSet, constructors()]] 
                        ModuleInfoEntry*}

  [gdp-1'1] get-defined-productions($ModuleId,
                                    {ModuleInfoEntry*1
                                     [$ModuleId, Bool, 
                                      [SymbolsSet1, SymbolsSet2, 
                                       ProductionsSet, ConstructorSet]]
                                     ModuleInfoEntry*2}) = ProductionsSet

  [gdp-1'1] get-defined-productions(imports(), ModuleInfoTable) = productions()

  [gdp-1'2] get-module-id($ModuleName) = $ModuleId,
            get-defined-productions($ModuleId, ModuleInfoTable) = 
               productions(Production*1),
            get-defined-productions(imports(Import*), ModuleInfoTable) =
               productions(Production*2)
            ============================================================
            get-defined-productions(imports($ModuleName Import*), 
                                    ModuleInfoTable) = 
              productions(Production*1 Production*2)

  [pci-1'1] put-constructor-info($ModuleId, 
                                 ConstructorSet1,
                                 {ModuleInfoEntry*1 
                                 [$ModuleId, Bool, 
                                  [SymbolsSet1, SymbolsSet2, 
                                   ProductionsSet, ConstructorSet2]]
                                 ModuleInfoEntry*2}) =
              {ModuleInfoEntry*1
               [$ModuleId, true, 
                [SymbolsSet1, SymbolsSet2, 
                 ProductionsSet, ConstructorSet1]] 
               ModuleInfoEntry*2}

  [default-pci-1'2] put-constructor-info($ModuleId, 
                                         ConstructorSet,
                                         {ModuleInfoEntry*}) =
                      {[$ModuleId, true, 
                        [symbols(), symbols(), productions(), ConstructorSet]] 
                        ModuleInfoEntry*}

  [gc-1'1] get-constructors($ModuleId,
                            {ModuleInfoEntry*1
                             [$ModuleId, Bool, 
                              [SymbolsSet1, SymbolsSet2, 
                               ProductionsSet, ConstructorSet]]
                             ModuleInfoEntry*2}) = ConstructorSet

  [gc-1'1] get-constructors(imports(), ModuleInfoTable) = constructors()

  [gc-1'2] get-module-id($ModuleName) = $ModuleId,
           get-constructors($ModuleId, ModuleInfoTable) = 
              constructors(SymbolCons*1),
           get-constructors(imports(Import*), ModuleInfoTable) =
              constructors(SymbolCons*2)
           =====================================================
           get-constructors(imports($ModuleName Import*), 
                                    ModuleInfoTable) = 
              constructors(SymbolCons*1 SymbolCons*2)