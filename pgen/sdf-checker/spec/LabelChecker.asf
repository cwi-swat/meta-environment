equations

  [cs-1'1] check-labels(Definition) = check-labels(Definition, )

  [cs-1'2] check-labels(Module, Msgs) = 
             check-labels2(Module, Msgs, get-module-name(Module))

  [cl-1'3] [LabelsSet, Msgs2] := 
             check-labels3(Symbol*, [labels(), Msgs1], 
                        $ModuleId, Symbol* -> $Symbol Attrs)
           ====>
           check-labels2(Symbol* -> $Symbol Attrs, 
                        Msgs1, $ModuleId) = Msgs2

  [cl-1'3] [LabelsSet, Msgs2] := 
             check-labels3(Symbol,*, [labels(), Msgs1], 
                         $ModuleId, $FuncName(Symbol,*) -> $Symbol Attrs)
           ====>
           check-labels2($FuncName(Symbol,*) -> $Symbol Attrs, 
                         Msgs1, $ModuleId) = Msgs2

  [cl-1'4] $Label:$Symbol2 := $Symbol1,
           contains($Label, LabelsSet) == true,
           $Location1 := get-location($Label),
           $Label2 := get($Label, LabelsSet),
           $Location2 := get-location($Label2)
           ====>
           check-labels3($Symbol1, [LabelsSet, Msgs], $ModuleId, Prod) =
             [LabelsSet, 
              Msgs, 
              error("double use of label",
                   [localized("first occurrence", $Location1),
                    localized("second occurrence", $Location2)])]

  [cl-1'4] contains($Label, LabelsSet) == false
           ====>
           check-labels3($Label:$Symbol, [LabelsSet, Msgs], $ModuleId, Prod) =
             [$Label ++ LabelsSet, Msgs]
             

  [c-1'1] contains($Label, labels($Label*1 $Label $Label*2)) = true

  [default-c-1'2] contains($Label, LabelsSet) = false

  [c-2'1] $Label ++ labels($Label*) = labels($Label $Label*)

equations

%% get may seem superfluous, but the found element may contain interesting annotations
  [g-1] get($Label, labels($Label*1 $Label2 $Label*2)) = $Label2 when $Label == $Label2
