equations

[extract-variable-declarations-0]
  process $ProcessSignature is $ProcessBody := $ProcessDef,
  $ProcessName := $ProcessSignature,
  let $VarDecls in $ProcessExpr endlet := $ProcessBody,
  $ProcessNameId := get-location($ProcessName),
  $Rstore2 := extractVariableDeclarationsInScope($VarDecls, $Rstore1, $ProcessNameId)
  ===>
  extractVariableDeclarations($ProcessDef, $Rstore1) = $Rstore2

[extract-variable-declarations-1]
  process $ProcessSignature is $ProcessBody := $ProcessDef,
  $ProcessName ( $FormalParams ) := $ProcessSignature,
  $ProcessNameId := get-location($ProcessName),
  let $VarDecls in $ProcessExpr endlet := $ProcessBody,
  $Rstore2 := extractVariableDeclarationsInScope($VarDecls, $Rstore1, $ProcessNameId)
  ===>
  extractVariableDeclarations($ProcessDef, $Rstore1) = $Rstore2



[extract-variable-declarations-in-scope-0]
  $Var : $Term := $VarDecl,
  $Rstore2 := addVariableDeclaration($Var, $Term, $ProcessNameId, $Rstore1)
  ===>
  extractVariableDeclarationsInScope($VarDecl, $Rstore1, $ProcessNameId) = $Rstore2



[add-variable-declaration-0]
  $VarId := get-location($Var),
  $Tuple1 := <$VarId, unparse-to-string($Var)>,
  $Rstore2 := add-tuple(VAR_DECL_NAME, $Tuple1, $Rstore1),
  $Tuple2 := <$VarId, unparse-to-string($Term)>,
  $Rstore3 := add-tuple(VAR_DECL_TYPE, $Tuple2, $Rstore2),
  $Tuple3 := <$VarId, $ProcessNameId>,
  $Rstore4 := add-tuple(VAR_DECL_SCOPE, $Tuple3, $Rstore3)
  ===>
  addVariableDeclaration($Var, $Term, $ProcessNameId, $Rstore1) = $Rstore4
