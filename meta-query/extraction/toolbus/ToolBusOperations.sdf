module ToolBusOperations

imports basic/Strings
imports Tscript

imports utilities/IO[Atom]
exports context-free syntax
    toString(Atom) -> String

imports utilities/IO[AtomArgs]
exports context-free syntax
    toString(AtomArgs) -> String

imports utilities/IO[ProcessName]
exports context-free syntax
    toString(ProcessName) -> String

imports utilities/IO[ToolName]
exports context-free syntax
    toString(ToolName) -> String

imports utilities/IO[Var]
exports context-free syntax
    toString(Var) -> String

exports
  context-free syntax    
    get-formal-parameters(ProcessSignature) -> {FormalParam ","}*
    get-local-variables(ProcessBody) -> {VarDecl ","}*
    make-signature(Atom, {FormalParam ","}*, {VarDecl ","}*) -> Term
    getType(Term, {FormalParam ","}*, {VarDecl ","}*) -> Term

hiddens
  context-free syntax
    make-simple-signature({Term ","}+) ->
      {Term ","}+ {traversal(trafo,top-down,break)}

    make-simple-signature(Term) ->
      Term {traversal(trafo,top-down,break)}

hiddens
  variables
    "$Atom"[0-9]* -> Atom
    "$AtomArgs" -> AtomArgs
    "$Bool" -> Boolean
    "$FormalParam"[0-9]* -> FormalParam
    "$FormalParams"[0-9]* -> {FormalParam ","}*
    "$GenVar"[0-9]* -> GenVar
    "$Id"[0-9]* -> Id
    "$Int" -> Integer
    "$ProcessExpr"[0-9]* -> ProcessExpr    
    "$ProcessName"[0-9]* -> ProcessName    
    "$Real" -> Real
    "$String" -> String
    "$Term"[0-9]* -> Term
    "$TermPlus"[0-9]* -> {Term ","}+
    "$Terms"[0-9]* -> {Term ","}*
    "$ToolName"[0-9]* -> ProcessName    
    "$Var"[0-9]* -> Var
    "$VarDecl"[0-9]* -> VarDecl
    "$VarDecls"[0-9]* -> {VarDecl ","}*
