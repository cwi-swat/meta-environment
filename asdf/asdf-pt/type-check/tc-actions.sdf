module type-check/tc-actions

imports

  type-check/tc-dataop
  type-check/tc-unfolding

exports 

context-free start-symbols

  <ActionType, Environment>

context-free syntax 

  typecheck-action(Action, Environment)	-> <ActionType, Environment> {memo}

hiddens 

variables

  "$TY"[1-9]?		-> Type
  "$AT"[1-9]?		-> ActionType
  "$TV"[1-9]?		-> TypeVariable
  "$ATV"[1-9]?		-> ActionTypeVariable
  "$EN"[1-9]?		-> Environment
  "$A"[1-9]?		-> Action
  "$IA"			-> InfixAction
  "$D"[1-9]?		-> Data
  "$DO"[1-9]?		-> DataOp
  "$ER"[1-9]?"+"	-> Error+
  "$CH+"[1-9]?		-> CHAR+
  "$SC"[1-9]?		-> StrCon		


sorts

   ActionType Type 
