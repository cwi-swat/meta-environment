equations

[subtype-1] 

   $EN2 := add-constraint(subtype-con($TY1, $TY2), $EN1)
   =================================================
   subtype-of($TY1, $TY2, $EN1) = $EN2

[glb-1] 

   has-variable($TY1, no) == no,
   has-variable($TY2, no) == no,
   st($TY1, $TY2, $EN1) == empty-map
   ===================================
   glb($TY1, $TY2, $EN1) = <$TY1, $EN1>

[glb-2] 

   has-variable($TY1, no) == no,
   has-variable($TY2, no) == no,
   st($TY2, $TY1, $EN1) == empty-map
   ===================================
   glb($TY1, $TY2, $EN1) = <$TY2, $EN1>

[default-glb-1] 

   <$TV, $EN2> := new-type-var($EN1),
   $EN3 := add-constraint(glb-con($TY1, $TY2, $TV), $EN2)
   =================================
   glb($TY1, $TY2, $EN1) = <$TV, $EN3>

[lub-1] 

   has-variable($TY1, no) == no,
   has-variable($TY2, no) == no,
   st($TY1, $TY2, $EN1) == empty-map
   ===================================
   lub($TY1, $TY2, $EN1) = <$TY2, $EN1>

[lub-2] 

   has-variable($TY1, no) == no,
   has-variable($TY2, no) == no,
   st($TY2, $TY1, $EN1) == empty-map
   ===================================
   lub($TY1, $TY2, $EN1) = <$TY1, $EN1>

[default-lub-1] 

   <$TV, $EN2> := new-type-var($EN1),
   $EN3 := add-constraint(lub-con($TY1, $TY2, $TV), $EN2)
   =================================
   lub($TY1, $TY2, $EN1) = <$TV, $EN3>

[concat-1] 

   <$TV, $EN2> := new-type-var($EN1),
   $EN3 := add-constraint(concat-con($TY1, $TY2, $TV), $EN2)
   =========================================================
   concat($TY1, $TY2, $EN1) = <$TV, $EN3>

[bracket-1] ($TY) = $TY

[st-1] st($TY, $TY, $EN) = empty-map

[st-2] $STS := get-subtypes($EN),
       [$AA1*, <$ATY2, $ATY1>, $AA2*] := $STS
       =======================================
       st($ATY1, $ATY2, $EN) = empty-map

[st-3] $STS := get-subtypes($EN),
       [$AA1*, <$ATY3, $ATY1>, $AA2*] := $STS,
       st($ATY3, $ATY2, $EN) == empty-map
       =======================================
       st($ATY1, $ATY2, $EN) = empty-map

[st-4] st(empty, $TY, $EN) = empty-map

[st-5] st(($AT1), ($AT2), $EN) = at-st($AT1, $AT2, $EN)

[st-6] $TV2 !:= $TY
       =============================================
       st($TV1, $TY, $EN) = single($TV1, empty, $TY)

[st-7] $TV2 !:= $TY
       ============================================
       st($TY, $TV1, $EN) = single($TV1, $TY, data)

[st-8] $TV2 != $TV1,
       $M := insert(single($TV1, empty, $TV2), single($TV2, $TV1, data))
       =================================================================
       st($TV1, $TV2, $EN) = $M

[st-9] $M1 := st($TY1, $TY2, $EN), 
       $M2 := st(($TY1*), ($TY2*), $EN),
       $M3 := insert($M1, $M2)
       ====================================================
       st(($TY1, $TY1*), ($TY2, $TY2*), $EN) = $M3

[st-12] $TY != data
	=================================
	st($TY, datum, $EN) = empty-map

[st-13] st($TY, data, $EN) = empty-map

[default-st-1] st($TY1, $TY2, $EN) = error($TY1, $TY2)

[lowest-map-1] 

   vmap($VT*) := st($TY1, $TY2, $EN)
   =====================================================
   lowest-type-map($TY1, $TY2, $EN) = <$TY1, vmap($VT*)>

[lowest-map-2] 

   vmap($VT*) := st($TY2, $TY1, $EN)
   =====================================================
   lowest-type-map($TY1, $TY2, $EN) = <$TY2, vmap($VT*)>

[highest-map-1] 

   vmap($VT*) := st($TY1, $TY2, $EN)
   =====================================================
   highest-type-map($TY1, $TY2, $EN) = <$TY2, vmap($VT*)>

[highest-map-2] 

   vmap($VT*) := st($TY2, $TY1, $EN)
   =====================================================
   highest-type-map($TY1, $TY2, $EN) = <$TY1, vmap($VT*)>


[plus-1] ($TY1*) + ($TY2*) = ($TY1*, $TY2*)

[plus-2] $TY1 + ($TY2*) = ($TY1, $TY2*)

[plus-3] ($TY1*) + $TY2 = ($TY1*, $TY2)

[plus-4] $TY1 + $TY2 = ($TY1, $TY2)

[not-equal-1] 

   $EN2 := add-constraint(not-equal-con($TY1, $TY2), $EN1)
   =======================================================
   not-equal($TY1, $TY2, $EN1) = $EN2

[has-variable-1] has-variable($TV, $AN) = yes

[has-variable-1] has-variable($ATV, $AN) = yes

