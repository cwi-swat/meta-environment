module type-check/types

imports 

  basic/Errors
  type-check/pos-annotate
  type-check/subtype

exports 

sorts 

  ActionResult Answer

exports

context-free syntax

%% Types

  "AR" "[" NormalType"," ExceptionalType"," Answer "]" 
				-> ActionResult
  "nor" "=" Type		-> NormalType
  "exc" "=" Type		-> ExceptionalType

  ActionResult  		-> Type

 
%% Type operators

  type-concat(Type, Type) 	-> Type
  unify(Type, Type, SubTypes)	-> Type

  Answer "answerOr" Answer 	-> Answer

  highest-type(Type, Type, SubTypes)	-> Type
  lowest-type(Type, Type, SubTypes)	-> Type

%% Error messages

  Error+ 			-> ActionResult
		
hiddens 

variables

  "$END"[1-9]?	-> Answer
  "$TY"[1-9]?	-> Type
  "$TY"[1-9]?"*"	-> {Type ","}*
  "$STS"[0-9]?		-> List[[<AtomicType, AtomicType>]]

sorts

  DataType ActionType NormalType ExceptionalType ExcepNoData 
  AMusing AMgiving AMraising 

