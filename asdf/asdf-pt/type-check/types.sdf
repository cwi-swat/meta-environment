module type-check/types

imports type-check/pos-annotate
imports basic/Whitespace
imports 

  basic/Errors
  basic/Integers

exports 

sorts 

  ActionType Answer TypeVariable ActionTypeVariable

exports

context-free syntax

%% Types

  "std-at"	     -> {SingleActionType "&"}*

  ActionType "\\" SingleActionType	-> ActionType

%% Type variables

  TypeVariable		-> Type
  ActionTypeVariable	-> SingleActionType

  "_V"Integer		-> TypeVariable
  "_AV"Integer		-> ActionTypeVariable

%% Error messages

  Error+ 			-> ActionType

context-free priorities

  { ActionType "&" ActionType	-> ActionType {left}}
  >
  { ActionType "\\" SingleActionType	-> ActionType }
	
hiddens 

variables

  "$AN"[1-9]?	-> Answer
  "$EN"[0-9]?	-> Environment
  "$TY"[1-9]?	-> Type
  "$AT"[0-9]?	-> ActionType
  "$SAT"[0-9]?	-> SingleActionType
  "$TY"[1-9]?"*"	-> {Type ","}*
  "$STS"[0-9]?		-> List[[<AtomicType, AtomicType>]]

sorts

  DataType ActionType NormalType ExceptionalType ExcepNoData 
  AMusing AMgiving AMraising 

