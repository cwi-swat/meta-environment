module type-check/tc-functions

imports

  type-check/tc-actions

exports

sorts 

  Function Functions SignatureEnv Answers

context-free syntax

  typecheck(AS-Module, Signatures)		-> Summary
  typecheck-definitions(FunctionDefs, Environment) -> Answers

  gen-summary(Answers)	-> Summary

  {AS-FunctionDef ","}* 	-> SortWithPosition

  Error		-> Answer
  Answer+	-> Answers

hiddens 

variables

  "$AM"[1-9]?	-> AS-Module
  "$F"[1-9]?	-> Function
  "$F+"		-> Functions 
  "$FS"[1-9]?	-> FunctionSignature
  "$FS"[1-9]?"*"	-> {FunctionSignature ","}*
  "$AFS"[1-9]?	-> AS-FunctionSig
  "$AFS"[1-9]?"*"	-> {AS-FunctionSig ","}*
  "$FD"[1-9]?	-> AS-FunctionDef
  "$FD"[1-9]?"*"	-> {AS-FunctionDef ","}*
  "$FD"[1-9]?"+"	-> {AS-FunctionDef ","}+

  "$SE"[1-9]?	-> SignatureEnv
  "$ENV"[1-9]?	-> Environment
  "$LT"[1-9]?	-> Literal
  "$SO"[1-9]?	-> Sort
  "$AT"[1-9]?	-> ActionType
  "$TY"[1-9]?	-> Type
  "$CO"[1-9]?	-> Constructor
  "$ET"		-> AS-Eqs-Tag
  "$END"[1-9]?	-> ExcepNoData

  "$AN"		-> Answer
  "$ANS"[1-9]?	-> Answer+
  "$ER"[1-9]?	-> Error
  "$ER"[1-9]?"*"	-> {Error "," }*
  "$ER"[1-9]?"+"	-> Error+
  "$AC"[1-9]?	-> Action
  "$SC"[0-9]?	-> StrCon

  "$SUM"	-> Summary
		
sorts

  FunctionSignature AS-FunctionDef AS-FunctionDefs LangConst 
  SyntaxSort EquationName ExcepNoData Type ActionType 

