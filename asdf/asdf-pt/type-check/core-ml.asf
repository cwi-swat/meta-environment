equations

[tcdo-1] TY1 subtype-of action[using data giving empty raising empty] == yes
	 =====================================================================
	 typecheck-dataop(func, TY1) = AR[nor=func, exc=empty, no]

[tcdo-2] TY1 subtype-of func == yes
	 ===================================================
	 typecheck-dataop(action, TY1) = 
	   AR[nor=action[using data giving data raising data], exc=empty, no]


[tcdo-4] typecheck-dataop(tuple, TY1) = AR[nor=tuple, exc=empty, no]

[tcdo-5] TY1 subtype-of tuple == yes
	 ================================================================
	 typecheck-dataop(components, TY1) = AR[nor=data, exc=empty, no]

[tcdo-6] TY1 subtype-of cons == yes
	 ================================================================
	 typecheck-dataop(cons-val, TY1) = AR[nor=val, exc=empty, no]

[tcdo-7] TY1 subtype-of (func, val) == yes
	 ================================================================
	 typecheck-dataop(invert, TY1) = AR[nor=val, exc=empty, no]


[tcd-1] typecheck-data(func-no-apply, EN) = val

[subtype-1] func subtype-of val = yes

[subtype-2] tuple subtype-of val = yes

[subtype-3] cons subtype-of bindable = yes

[subtype-4] val subtype-of bindable = yes

[subtype-10] integer subtype-of val = yes

[subtype-11] boolean subtype-of val = yes

[subtype-10] integer subtype-of storable = yes

[subtype-11] boolean subtype-of storable = yes

[subtype-11] val subtype-of storable = yes

[subtype-12] cell subtype-of bindable = yes
