module type-check/environment

imports 

  asdf/functions
  type-check/types  

exports

sorts

  Environment

context-free syntax

%% Signatures , Unfold type

  <Signatures, SubTypes, DataOpSigs, DataConstants, ActionType>	-> Environment

  type-info-to-env(TypeInfo)	     -> Environment

  get-signatures(Environment)	   -> Signatures
  get-subtypes(Environment)	   -> SubTypes
  get-dataop-sigs(Environment)	   -> DataOpSigs
  get-data-constants(Environment)	   -> DataConstants
  get-unfold-type(Environment)	   -> ActionType

  set-signatures(Environment, Signatures)	-> Environment
  set-subtypes(Environment, SubTypes)		-> Environment
  set-dataop-sigs(Environment, DataOpSigs)	-> Environment
  set-data-constants(Environment, DataConstants) -> Environment
  set-unfold-type(Environment, ActionType)	-> Environment

  "empty-env"					-> Environment
  "initial-dataop-sigs"				-> DataOpSigs

  get-fun-name(AS-FunctionSig)	-> Literal
  get-using(AS-FunctionSig)	-> Type
  get-giving(AS-FunctionSig)	-> Type
  get-raising(AS-FunctionSig)	-> Type
  failing(AS-FunctionSig)	-> Answer
  terminates(AS-FunctionSig)	-> Answer
  closed(AS-FunctionSig)	-> Answer
  stable(AS-FunctionSig)	-> Answer
  ineffective(AS-FunctionSig)	-> Answer
  uncreative(AS-FunctionSig)	-> Answer
  remove-using(FunResult)	-> { SingleFunResult "&" }*
  remove-giving(FunResult)	-> { SingleFunResult "&" }*
  remove-raising(FunResult)	-> { SingleFunResult "&" }*
  remove-infallible(FunResult)	-> { SingleFunResult "&" }*
  remove-terminates(FunResult)	-> { SingleFunResult "&" }*
  remove-closed(FunResult)	-> { SingleFunResult "&" }*
  remove-stable(FunResult)	-> { SingleFunResult "&" }*
  remove-ineffective(FunResult)	-> { SingleFunResult "&" }*
  remove-uncreative(FunResult)	-> { SingleFunResult "&" }*
  remove-action(FunResult)	-> { SingleFunResult "&" }*
  remove-dobble-sigs(Signatures, SubTypes)	-> Signatures
  join-results({ SingleFunResult "&" }*, FunResult, SubTypes)	
				-> { SingleFunResult "&" }+
  remove-dobble-dataops(DataOpSigs, SubTypes)	-> DataOpSigs

  Error		-> Answer
  Answer+	-> Answers

hiddens variables

  "$SIGS"[0-9]?		-> Signatures
  "$AT"[0-9]?		-> ActionType
  "$STS"[0-9]?		-> SubTypes
  "$DOS"[0-9]?		-> DataOpSigs
  "$DF"[0-9]?"*"	-> {<DataOp, FunResult> "," }*
  "$DO"[0-9]?		-> DataOp
  "$DCS"[0-9]?		-> DataConstants
  "$LT"[0-9]?		-> Literal
  "$SO"[0-9]?		-> Sort
  "$FR"[0-9]?		-> FunResult
  "$SFR"[0-9]?"+"	-> { SingleFunResult "&" }+
  "$SFR"[0-9]?"*"	-> { SingleFunResult "&" }*
  "$TY"[0-9]?		-> Type
  "$FS"[0-9]?		-> AS-FunctionSig
  "$FS"[0-9]?"*"	-> {AS-FunctionSig ","}*
