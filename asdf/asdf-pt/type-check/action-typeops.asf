equations

[action-type-and-1] 

   act($TY11, $TY12, $TY13, $TY14, $TY15, $TY16, $TY17, $TY18, $TY19) := $AT1,
   act($TY21, $TY22, $TY23, $TY24, $TY25, $TY26, $TY27, $TY28, $TY29) := $AT2,
   <$TY34, $EN2> := lub($TY14, $TY24, $SU, $EN1),
   <$TY35, $EN3> := lub($TY15, $TY25, $SU, $EN2),
   <$TY36, $EN4> := lub($TY16, $TY26, $SU, $EN3),
   <$TY37, $EN5> := lub($TY17, $TY27, $SU, $EN4),
   <$TY38, $EN6> := lub($TY18, $TY28, $SU, $EN5),
   <$TY39, $EN7> := lub($TY19, $TY29, $SU, $EN6)
   ===================================================================
   action-type-and($AT1, $AT2, $SU, $EN1) = 
    <act($TY11, $TY12, $TY13, $TY34, $TY35, $TY36, $TY37, $TY38, $TY39), $EN3>

[infallible-1] 

   $EN2 := add-constraint(infallible-con($AT1, $AT2, $SU), $EN1)
   ========================================================
   infallible($AT1, $AT2, $SU, $EN1) = $EN2

[closed-1] 

   $EN2 := add-constraint(closed-con($AT1, $AT2, $SU), $EN1)
   ====================================================
   closed($AT1, $AT2, $SU, $EN1) = $EN2

[not-in-1]

   $EN2 := add-constraint(not-in-con($SAT, $AT, $SU), $EN1)
   ===================================================
   not-in($SAT, $AT, $SU, $EN1) = $EN2

[at-and-1] 

   at-and($AT1, $AT2, $AT3, $SU) = 
           insert(single(($AT1), ($AT2), $SU), single(($AT1), ($AT3), $SU))

[at-has-propety-1]

   at-has-property($SAT1* & $SAT & $SAT2*, $SAT, $SU) = empty-map

[default-at-has-propety-1] 

   at-has-property($SAT1* & $ATV & $SAT2*, $SAT, $SU) = 
					   single(($ATV), ($SAT), $SU)

[at-contains-1] at-contains($SAT, $SAT1* & $SAT & $SAT2*) = yes

[default-at-contains-1] at-contains($SAT, $AT) = no

[at-diff-1] at-diff($SAT1* & $SAT & $SAT2*, $SAT & $SAT3*) = 
				  at-diff($SAT1* & $SAT2*, $SAT3*)

[default-at-diff-1] at-diff($AT, $SAT & $SAT3*) = 
				  at-diff($AT, $SAT3*)

[default-at-diff-2] at-diff($AT, ) = $AT
				  

[get-variable-1] get-variable($SAT1* & $ATV & $SAT2*) = $ATV

[at-has-variable-1] at-has-variable($SAT1* & $ATV & $SAT2*) = yes

[default-at-has-variable-1] at-has-variable($AT) = no

[norm-1] == $AT 
	 ==================
	 norm($AT) = Action

[norm-2] norm($SAT1* & $SAT & $SAT2* & $SAT & $SAT3*) = norm($SAT1* & $SAT & $SAT2* & $SAT3*)

[norm-3] norm(Action & $SAT & $SAT2*) = norm($SAT & $SAT2*)

[norm-4] norm($SAT2* & $SAT & Action) = norm($SAT2* & $SAT)

[default-norm-2] norm($AT) = $AT

[at-st-1] at-st($AT, $AT, $SU, $EN) = empty-map

[at-st-2] $AT != $SAT1 & $SAT2 & $SAT*
	  =========================================
	  at-st($AT, $SAT1 & $SAT2 & $SAT*, $SU, $EN) = insert(single((norm($AT)), ($SAT1), $SU), at-st(norm($AT), $SAT2 & $SAT*, $SU, $EN))

[default-at-st-1] at-st($AT1, $AT2, $SU, $EN) = at-st-def($AT1, $AT2, $SU, $EN)

[at-st-2] at-st-def($AT, Action, $SU, $EN) = empty-map

[at-st-3] at-st-def($ATV1, $AT2, $SU, $EN) = single(($ATV1), ($AT2), $SU)

[at-st-4] at-st-def($AT1, $ATV2, $SU, $EN) = single(($AT1), ($ATV2), $SU)

[at-st-5] at-st-def($SAT1* & $SAT & $SAT2*, $SAT, $SU, $EN) = empty-map

[at-st-6]  $TY1 := get-using($AT)
	   ===============================
	   at-st-def($AT, using $TY2, $SU, $EN) = 
              st((using $TY1), (using $TY2), $SU, $EN)

[at-st-7]  $TY1 := get-giving($AT)
	   ===============================
	   at-st-def($AT, giving $TY2, $SU, $EN) = 
              st((giving $TY1), (giving $TY2), $SU, $EN)

[at-st-8]  $TY1 := get-raising($AT)
	   ===============================
	   at-st-def($AT, raising $TY2, $SU, $EN) = 
	      st((raising $TY1), (raising $TY2), $SU, $EN)

[at-st-9] $ATV2 !:= $SAT,
	  $SAT3* & $SAT & $SAT4* !:= $SAT1* & $SAT2*
	  =============================================================
	  at-st-def($SAT1* & $ATV & $SAT2*, $SAT, $SU, $EN) = 
					    single(($ATV), ($SAT), $SU) 


[diff-1] $SAT1* & $SAT & $SAT2* \ $SAT = $SAT1* & $SAT2* \ $SAT

[default-diff-1] 

        at-has-variable($SAT1*) == no
	==========================
	$SAT1* \ $SAT = $SAT1*

[transform-1] $TY1 := get-using($AT),
	      $TY2 := get-giving($AT),
	      $TY3 := get-raising($AT),
	      no == at-has-variable($AT),
	      $TY4 := transform-has($AT, infallible),
	      $TY5 := transform-has($AT, closed),
	      $TY6 := transform-has($AT, terminates),
	      $TY7 := transform-has($AT, uncreative),
	      $TY8 := transform-has($AT, ineffective),
	      $TY9 := transform-has($AT, stable)
	      ===================================
	      transform-action-type($AT) = 
			act(transform-type($TY1), transform-type($TY2), 
			    transform-type($TY3), transform-type($TY4), 
			    transform-type($TY5), transform-type($TY6), 
			    transform-type($TY7), transform-type($TY8), 
			    transform-type($TY9))

[transform-2] transform-type(($AT)) = (transform-action-type($AT))

[default-transform-2] transform-type($TY) = $TY

[transform-3] at-contains($SAT, $AT) == yes
	      ================================
	      transform-has($AT, $SAT) = empty 

[transform-3] at-contains($SAT, $AT) == no
	      ================================
	      transform-has($AT, $SAT) = data