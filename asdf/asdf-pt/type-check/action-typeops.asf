equations

[action-type-and-1] 

   <$ATV, $EN2> := new-action-type-var($EN1),
   $EN3 := add-constraint(action-type-and-con($AT1, $AT2, $ATV, $SU), $EN2)
   ===================================================================
   action-type-and($AT1, $AT2, $SU, $EN1) = <$ATV, $EN3>

[infallible-1] 

   $EN2 := add-constraint(infallible-con($AT1, $AT2, $SU), $EN1)
   ========================================================
   infallible($AT1, $AT2, $SU, $EN1) = $EN2

[closed-1] 

   $EN2 := add-constraint(closed-con($AT1, $AT2, $SU), $EN1)
   ====================================================
   closed($AT1, $AT2, $SU, $EN1) = $EN2

[not-in-1]

   $EN2 := add-constraint(not-in-con($SAT, $AT, $SU), $EN1)
   ===================================================
   not-in($SAT, $AT, $SU, $EN1) = $EN2

[at-and-1] 

   $ATV := get-variable($AT1),
   no == at-has-variable($AT2),
   no == at-has-variable($AT3),
   Action == norm(at-diff($AT3, $AT2)),
   $AT4 := norm(at-diff($AT3, $AT1)),
   $M := insert(single(($AT4), ($ATV), $SU), single(($ATV), ($AT4), $SU)),
   norm(at-diff($AT2, $AT3)) == 
		      norm(at-diff(at-diff($AT2, $AT3), at-diff($AT1, $AT3)))
   ========================================================================
   at-and($AT1, $AT2, $AT3, $SU) = $M

[at-and-2] 

   no == at-has-variable($AT1),
   $ATV := get-variable($AT2),
   no == at-has-variable($AT3),
   Action == norm(at-diff($AT3, $AT1)),
   $AT4 := norm(at-diff($AT3, $AT2)),
   $M := insert(single(($AT4), ($ATV), $SU), single(($ATV), ($AT4), $SU)),
   norm(at-diff($AT1, $AT3)) == 
		      norm(at-diff(at-diff($AT1, $AT3), at-diff($AT2, $AT3)))
   ========================================================================
   at-and($AT1, $AT2, $AT3, $SU) = $M

[at-and-3] 

   no == at-has-variable($AT1),
   no == at-has-variable($AT2),
   $ATV := get-variable($AT3),
   $ATV == norm(at-diff($AT3, $AT1)),
   $ATV == norm(at-diff($AT3, $AT2)),
   $AT4 := norm(at-diff($AT1, at-diff($AT1, $AT2))),
   $AT5 := norm(at-diff($AT4, $AT3)),
   $M := insert(single(($AT5), ($ATV), $SU), single(($ATV), ($AT5), $SU))
   ===========================================
   at-and($AT1, $AT2, $AT3, $SU) = $M

[at-and-4] 

   no == at-has-variable($AT1),
   no == at-has-variable($AT2),
   no == at-has-variable($AT3),
   Action == norm(at-diff($AT3, $AT1)),
   Action == norm(at-diff($AT3, $AT2)),
   norm(at-diff($AT1, $AT3)) == 
		      norm(at-diff(at-diff($AT1, $AT3), at-diff($AT2, $AT3)))
   ==========================================================================
   at-and($AT1, $AT2, $AT3, $SU) = empty-map

[at-has-propety-1]

   at-has-property($SAT1* & $SAT & $SAT2*, $SAT, $SU) = empty-map

[default-at-has-propety-1] 

   at-has-property($SAT1* & $ATV & $SAT2*, $SAT, $SU) = 
					   single(($ATV), ($SAT), $SU)

[at-contains-1] at-contains($SAT, $SAT1* & $SAT & $SAT2*) = yes

[default-at-contains-1] at-contains($SAT, $AT) = no

[at-diff-1] at-diff($SAT1* & $SAT & $SAT2*, $SAT & $SAT3*) = 
				  at-diff($SAT1* & $SAT2*, $SAT3*)

[default-at-diff-1] at-diff($AT, $SAT & $SAT3*) = 
				  at-diff($AT, $SAT3*)

[default-at-diff-2] at-diff($AT, ) = $AT
				  

[get-variable-1] get-variable($SAT1* & $ATV & $SAT2*) = $ATV

[at-has-variable-1] at-has-variable($SAT1* & $ATV & $SAT2*) = yes

[default-at-has-variable-1] at-has-variable($AT) = no

[norm-1] == $AT 
	 ==================
	 norm($AT) = Action

[norm-2] norm($SAT1* & $SAT & $SAT2* & $SAT & $SAT3*) = norm($SAT1* & $SAT & $SAT2* & $SAT3*)

[norm-3] norm(Action & $SAT & $SAT2*) = norm($SAT & $SAT2*)

[norm-4] norm($SAT2* & $SAT & Action) = norm($SAT2* & $SAT)

[default-norm-2] norm($AT) = $AT

[at-st-1] at-st($AT, $AT, $SU, $EN) = empty-map

[default-at-st-1] at-st($AT1, $AT2, $SU, $EN) = at-st-def($AT1, $AT2, $SU, $EN)

[at-st-2] at-st-def($AT, Action, $SU, $EN) = empty-map

[at-st-3] at-st-def($ATV1, $AT2, $SU, $EN) = single(($ATV1), ($AT2), $SU)

[at-st-4] at-st-def($AT1, $ATV2, $SU, $EN) = single(($AT1), ($ATV2), $SU)

[at-st-5] at-st-def($SAT1* & $SAT & $SAT2*, $SAT3* & $SAT & $SAT4*, $SU, $EN) =

	     at-st(norm($SAT1* & $SAT2*), norm($SAT3* & $SAT4*), $SU, $EN)

[at-st-6a] $TY1 := get-using($AT)
	   ===============================
	   at-st-def($AT, $SAT1* & using $TY2 & $SAT2*, $SU, $EN) = 
            insert(st((using $TY1), (using $TY2), $SU, $EN), 
		 at-st(rm-using($AT), norm($SAT1* & $SAT2*), $SU, $EN))

[at-st-6b] $TY2 := get-using($AT)
	   ===============================
	   at-st-def($SAT1* & using $TY1 & $SAT2*, $AT, $SU, $EN) = 
            insert(st((using $TY1), (using $TY2), $SU, $EN), 
		 at-st(norm($SAT1* & $SAT2*), rm-using($AT), $SU, $EN))

[at-st-7a] $TY1 := get-giving($AT)
	   ===============================
	   at-st-def($AT, $SAT1* & giving $TY2 & $SAT2*, $SU, $EN) = 
            insert(st((giving $TY1), (giving $TY2), $SU, $EN), 
		 at-st(rm-giving($AT), norm($SAT1* & $SAT2*), $SU, $EN))

[at-st-7b] $TY2 := get-giving($AT)
	   ===============================
	   at-st-def($SAT1* & giving $TY1 & $SAT2*, $AT, $SU, $EN) = 
            insert(st((giving $TY1), (giving $TY2), $SU, $EN), 
		 at-st(norm($SAT1* & $SAT2*), rm-giving($AT), $SU, $EN))

[at-st-8a] $TY1 := get-raising($AT)
	   ===============================
	   at-st-def($AT, $SAT1* & raising $TY2 & $SAT2*, $SU, $EN) = 
            insert(st((raising $TY1), (raising $TY2), $SU, $EN), 
		 at-st(rm-raising($AT), norm($SAT1* & $SAT2*), $SU, $EN))

[at-st-8b] $TY2 := get-raising($AT)
	   ===============================
	   at-st-def($SAT1* & raising $TY1 & $SAT2*, $AT, $SU, $EN) = 
            insert(st((raising $TY1), (raising $TY2), $SU, $EN), 
		 at-st(norm($SAT1* & $SAT2*), rm-raising($AT), $SU, $EN))


[default-at-st-2] at-st-def($SAT1* & $ATV1 & $SAT2*, 
		        $SAT3* & $ATV2 & $SAT4*, $SU, $EN) = 
		insert(single(($ATV1), ($SAT3* & $ATV2 & $SAT4*), $SU),
		       single(($SAT1* & $SAT2*), ($ATV2), $SU))

[default-at-st-3] 

        $SAT1* & $ATV1 & $SAT2* !:= $AT1, 
        $SAT3* & $ATV2 & $SAT4* !:= $AT2
	==================================
	at-st-def($AT1, $AT2, $SU, $EN) = error(($AT1), ($AT2), $SU)


[diff-1] $SAT1* & $SAT & $SAT2* \ $SAT = $SAT1* & $SAT2* \ $SAT

[default-diff-1] 

        at-has-variable($SAT1*) == no
	==========================
	$SAT1* \ $SAT = $SAT1*
