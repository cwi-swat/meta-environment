[
  constructor(Graph,
              default,
              graph(<nodes(NodeList)>,
                    <edges(EdgeList)>,
                    <attributes(AttributeList)>)),
  list(NodeList, Node),
  constructor(Node, default, node(<id(NodeId)>, <attributes(AttributeList)>)),
  constructor(NodeId, default, <id(term)>),
  list(AttributeList, Attribute),
  constructor(Attribute,
              bounding-box,
              bounding-box(<first(Point)>, <second(Point)>)),
  constructor(Attribute, color, color(<color(Color)>)),
  constructor(Attribute, curve-points, curve-points(<points(Polygon)>)),
  constructor(Attribute, direction, direction(<direction(Direction)>)),
  constructor(Attribute, fill-color, fill-color(<color(Color)>)),
  constructor(Attribute, info, info(<key(str)>, <value(term)>)),
  constructor(Attribute, label, label(<label(str)>)),
  constructor(Attribute, location, location(<x(int)>, <y(int)>)),
  constructor(Attribute, shape, shape(<shape(Shape)>)),
  constructor(Attribute, size, size(<width(int)>, <height(int)>)),
  constructor(Attribute, style, style(<style(Style)>)),
  constructor(Attribute, level, level(<level(str)>)),
  constructor(Color, rgb, rgb(<red(int)>, <green(int)>, <blue(int)>)),
  constructor(Style, bold, bold),
  constructor(Style, dashed, dashed),
  constructor(Style, dotted, dotted),
  constructor(Style, filled, filled),
  constructor(Style, invisible, invisible),
  constructor(Style, solid, solid),
  constructor(Shape, box, box),
  constructor(Shape, circle, circle),
  constructor(Shape, diamond, diamond),
  constructor(Shape, egg, egg),
  constructor(Shape, ellipse, ellipse),
  constructor(Shape, hexagon, hexagon),
  constructor(Shape, house, house),
  constructor(Shape, octagon, octagon),
  constructor(Shape, parallelogram, parallelogram),
  constructor(Shape, plaintext, plaintext),
  constructor(Shape, trapezium, trapezium),
  constructor(Shape, triangle, triangle),
  constructor(Direction, forward, forward),
  constructor(Direction, back, back),
  constructor(Direction, both, both),
  constructor(Direction, none, none),
  list(EdgeList, Edge),
  constructor(Edge,
              default,
              edge(<from(NodeId)>, <to(NodeId)>, <attributes(AttributeList)>)),
  list(Polygon, Point),
  constructor(Point, default, point(<x(int)>, <y(int)>))
]
